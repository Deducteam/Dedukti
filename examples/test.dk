#NAME test.

Nat : Type.
0 : Nat.
S : Nat -> Nat.

def plus : Nat -> Nat -> Nat.
[n] plus 0 n --> n
[m, n] plus (S m) n --> S (plus m n).

def mult : Nat -> Nat -> Nat.
[] mult 0 _ --> 0
[m, n] mult (S m) n --> plus n (mult m n).

def double : Nat -> Nat := mult (S (S 0)).

def ddouble : Nat -> Nat.
[] ddouble --> mult (S (S 0)).

def plus1 : Nat -> Nat.
[n] plus1 n --> S n.

def moitie : Nat -> Nat.
[] moitie 0 --> 0.
[n] moitie (S (S n)) --> moitie (S n)
[] moitie (S 0) --> 0.
