(; This file was automatically generated from Matita. ;)

#NAME matita_arithmetics_minimization.

def max' :
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __1 :
        (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      __2 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat.

def max'_body :
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __1 :
        (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      __2 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat.

[ __ ] max' __ -->
  matita_arithmetics_nat.filter_nat univs.Type0
    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     cic.prod univs.Type0 univs.Type0
       (cic.prod univs.Type0 univs.Type0 matita_arithmetics_nat.nat
          (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
           matita_basics_bool.bool))
       (__1 :
          (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
           cic.Term univs.Type0 matita_basics_bool.bool) =>
        cic.prod univs.Type0 univs.Type0 matita_arithmetics_nat.nat
          (__2 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.nat)))
    matita_arithmetics_minimization.max'_body __.

[ __ ] max'_body __ -->
  f :
    (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     cic.Term univs.Type0 matita_basics_bool.bool) =>
  d : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
  matita_arithmetics_nat.match_nat univs.Type0
    (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     matita_arithmetics_nat.nat)
    d
    (j : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     matita_basics_bool.match_bool univs.Type0
       (__1 : cic.Term univs.Type0 matita_basics_bool.bool =>
        matita_arithmetics_nat.nat)
       j (matita_arithmetics_minimization.max' j f d) (f j))
    __.

def max :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      matita_arithmetics_minimization.max' n f matita_arithmetics_nat.O.

def max_O :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.max matita_arithmetics_nat.O f)
           matita_arithmetics_nat.O)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      matita_basics_logic.refl
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_minimization.max matita_arithmetics_nat.O f).

def max_cases :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.Or
           (matita_basics_logic.And
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f n) matita_basics_bool.true)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max
                    (matita_arithmetics_nat.S n) f)
                 n))
           (matita_basics_logic.And
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f n) matita_basics_bool.false)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max
                    (matita_arithmetics_nat.S n) f)
                 (matita_arithmetics_minimization.max n f))))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_bool.match_bool cic.prop
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_logic.Or
           (matita_basics_logic.And
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 __ matita_basics_bool.true)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_minimization.max' n f
                       matita_arithmetics_nat.O)
                    __)
                 n))
           (matita_basics_logic.And
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 __ matita_basics_bool.false)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_minimization.max' n f
                       matita_arithmetics_nat.O)
                    __)
                 (matita_arithmetics_minimization.max' n f
                    matita_arithmetics_nat.O))))
        (matita_basics_logic.or_introl
           (matita_basics_logic.And
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true matita_basics_bool.true)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 n n))
           (matita_basics_logic.And
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true matita_basics_bool.false)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 n
                 (matita_arithmetics_minimization.max' n f
                    matita_arithmetics_nat.O)))
           (matita_basics_logic.conj
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true matita_basics_bool.true)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 n n)
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true)
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 n)))
        (matita_basics_logic.or_intror
           (matita_basics_logic.And
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false matita_basics_bool.true)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max' n f
                    matita_arithmetics_nat.O)
                 n))
           (matita_basics_logic.And
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false matita_basics_bool.false)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max' n f
                    matita_arithmetics_nat.O)
                 (matita_arithmetics_minimization.max' n f
                    matita_arithmetics_nat.O)))
           (matita_basics_logic.conj
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false matita_basics_bool.false)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max' n f
                    matita_arithmetics_nat.O)
                 (matita_arithmetics_minimization.max' n f
                    matita_arithmetics_nat.O))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false)
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max' n f
                    matita_arithmetics_nat.O))))
        (f n).

def le_max_n :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le (matita_arithmetics_minimization.max n f)
           n)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.le
           (matita_arithmetics_minimization.max _x_365 f) _x_365)
        (matita_arithmetics_nat.le_n
           (matita_arithmetics_minimization.max matita_arithmetics_nat.O f))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (matita_arithmetics_nat.le
                (matita_arithmetics_minimization.max m f) m) =>
         matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_arithmetics_nat.le
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 m
                 (matita_arithmetics_minimization.max' m f
                    matita_arithmetics_nat.O)
                 __)
              (matita_arithmetics_nat.S m))
           (matita_arithmetics_nat.le_S m m (matita_arithmetics_nat.le_n m))
           (matita_arithmetics_nat.le_S
              (matita_arithmetics_minimization.max' m f
                 matita_arithmetics_nat.O)
              m Hind)
           (f m))
        n.

def lt_max_n :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.lt (matita_arithmetics_minimization.max n f)
           n)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      matita_arithmetics_nat.lt_O_n_elim n posn
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.lt (matita_arithmetics_minimization.max __ f)
           __)
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_arithmetics_nat.le
              (matita_arithmetics_nat.S
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    m
                    (matita_arithmetics_minimization.max' m f
                       matita_arithmetics_nat.O)
                    __))
              (matita_arithmetics_nat.S m))
           (matita_arithmetics_nat.le_S_S m m (matita_arithmetics_nat.le_n m))
           (matita_arithmetics_nat.le_S_S
              (matita_arithmetics_minimization.max' m f
                 matita_arithmetics_nat.O)
              m (matita_arithmetics_minimization.le_max_n f m))
           (f m)).

def le_to_le_max :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_nat.le n m) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le (matita_arithmetics_minimization.max n f)
           (matita_arithmetics_minimization.max m f))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H : cic.Term cic.prop (matita_arithmetics_nat.le n m) =>
      matita_arithmetics_nat.le_ind n
        (x_417 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         _x_418 : cic.Term cic.prop (matita_arithmetics_nat.le n x_417) =>
         matita_arithmetics_nat.le (matita_arithmetics_minimization.max n f)
           (matita_arithmetics_minimization.max x_417 f))
        (matita_arithmetics_nat.le_n
           (matita_arithmetics_minimization.max n f))
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         leni : cic.Term cic.prop (matita_arithmetics_nat.le n i) =>
         Hind :
           cic.Term cic.prop
             (matita_arithmetics_nat.le
                (matita_arithmetics_minimization.max n f)
                (matita_arithmetics_minimization.max i f)) =>
         matita_arithmetics_nat.transitive_le
           (matita_arithmetics_minimization.max n f)
           (matita_arithmetics_minimization.max i f)
           (matita_arithmetics_minimization.max (matita_arithmetics_nat.S i)
              f)
           Hind
           (matita_basics_logic.match_Or
              (matita_basics_logic.And
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_minimization.max
                       (matita_arithmetics_nat.S i) f)
                    i))
              (matita_basics_logic.And
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_minimization.max
                       (matita_arithmetics_nat.S i) f)
                    (matita_arithmetics_minimization.max i f)))
              cic.prop
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.Or
                      (matita_basics_logic.And
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.true)
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_minimization.max
                               (matita_arithmetics_nat.S i) f)
                            i))
                      (matita_basics_logic.And
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.false)
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_minimization.max
                               (matita_arithmetics_nat.S i) f)
                            (matita_arithmetics_minimization.max i f)))) =>
               matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.max i f)
                 (matita_arithmetics_minimization.max
                    (matita_arithmetics_nat.S i) f))
              (_clearme :
                 cic.Term cic.prop
                   (matita_basics_logic.And
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_minimization.max
                            (matita_arithmetics_nat.S i) f)
                         i)) =>
               matita_basics_logic.match_And
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_minimization.max
                       (matita_arithmetics_nat.S i) f)
                    i)
                 cic.prop
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.And
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.true)
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_minimization.max
                               (matita_arithmetics_nat.S i) f)
                            i)) =>
                  matita_arithmetics_nat.le
                    (matita_arithmetics_minimization.max i f)
                    (matita_arithmetics_minimization.max
                       (matita_arithmetics_nat.S i) f))
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true) =>
                  auto :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_minimization.max
                            (matita_arithmetics_nat.S i) f)
                         i) =>
                  matita_basics_logic.eq_coerc
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.le
                          (matita_arithmetics_minimization.max i f) i))
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.le
                          (matita_arithmetics_minimization.max i f)
                          (matita_arithmetics_minimization.max
                             (matita_arithmetics_nat.S i) f)))
                    (matita_arithmetics_minimization.le_max_n f i)
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       i
                       (__1 :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le
                                    (matita_arithmetics_minimization.max i f)
                                    i))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le
                                    (matita_arithmetics_minimization.max i f)
                                    x)))
                             __1))
                       (matita_basics_logic.refl
                          (cic.lift (cic.succ univs.Type0) univs.Type2
                             (cic.univ univs.Type0))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.le
                                (matita_arithmetics_minimization.max i f) i)))
                       (matita_arithmetics_minimization.max
                          (matita_arithmetics_nat.S i) f)
                       auto))
                 _clearme)
              (_clearme :
                 cic.Term cic.prop
                   (matita_basics_logic.And
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.false)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_minimization.max
                            (matita_arithmetics_nat.S i) f)
                         (matita_arithmetics_minimization.max i f))) =>
               matita_basics_logic.match_And
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_minimization.max
                       (matita_arithmetics_nat.S i) f)
                    (matita_arithmetics_minimization.max i f))
                 cic.prop
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.And
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.false)
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_minimization.max
                               (matita_arithmetics_nat.S i) f)
                            (matita_arithmetics_minimization.max i f))) =>
                  matita_arithmetics_nat.le
                    (matita_arithmetics_minimization.max i f)
                    (matita_arithmetics_minimization.max
                       (matita_arithmetics_nat.S i) f))
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.false) =>
                  auto :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_minimization.max
                            (matita_arithmetics_nat.S i) f)
                         (matita_arithmetics_minimization.max i f)) =>
                  matita_basics_logic.eq_coerc
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.le
                          (matita_arithmetics_minimization.max i f)
                          (matita_arithmetics_minimization.max i f)))
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.le
                          (matita_arithmetics_minimization.max i f)
                          (matita_arithmetics_minimization.max
                             (matita_arithmetics_nat.S i) f)))
                    (matita_arithmetics_nat.le_n
                       (matita_arithmetics_minimization.max i f))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_minimization.max i f)
                       (__1 :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le
                                    (matita_arithmetics_minimization.max i f)
                                    (matita_arithmetics_minimization.max i f)))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le
                                    (matita_arithmetics_minimization.max i f)
                                    x)))
                             __1))
                       (matita_basics_logic.refl
                          (cic.lift (cic.succ univs.Type0) univs.Type2
                             (cic.univ univs.Type0))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.le
                                (matita_arithmetics_minimization.max i f)
                                (matita_arithmetics_minimization.max i f))))
                       (matita_arithmetics_minimization.max
                          (matita_arithmetics_nat.S i) f)
                       auto))
                 _clearme)
              (matita_arithmetics_minimization.max_cases f i)))
        m H.

def true_to_le_max :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_nat.lt m n) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.true) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le m
           (matita_arithmetics_minimization.max n f))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt m _x_365)
              (__ : cic.Term cic.prop (matita_arithmetics_nat.lt m _x_365) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f m) matita_basics_bool.true)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f m) matita_basics_bool.true) =>
                  matita_arithmetics_nat.le m
                    (matita_arithmetics_minimization.max _x_365 f)))))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         ltmO :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m matita_arithmetics_nat.O) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f m) matita_basics_bool.true)
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.true) =>
               matita_arithmetics_nat.le m
                 (matita_arithmetics_minimization.max
                    matita_arithmetics_nat.O f)))
           (matita_basics_logic.absurd
              (matita_arithmetics_nat.le (matita_arithmetics_nat.S m)
                 matita_arithmetics_nat.O)
              ltmO (matita_arithmetics_nat.not_le_Sn_O m)))
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
            __1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.true) ->
            cic.Term cic.prop
              (matita_arithmetics_nat.le m
                 (matita_arithmetics_minimization.max i f))) =>
         m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         ltm :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m (matita_arithmetics_nat.S i)) =>
         matita_basics_logic.match_Or (matita_arithmetics_nat.lt m i)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
              i)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or (matita_arithmetics_nat.lt m i)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      m i)) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f m) matita_basics_bool.true)
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.true) =>
               matita_arithmetics_nat.le m
                 (matita_arithmetics_minimization.max
                    (matita_arithmetics_nat.S i) f)))
           (ltm0 : cic.Term cic.prop (matita_arithmetics_nat.lt m i) =>
            fm :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.true) =>
            matita_arithmetics_nat.transitive_le m
              (matita_arithmetics_minimization.max i f)
              (matita_arithmetics_minimization.max
                 (matita_arithmetics_nat.S i) f)
              (Hind m ltm0
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true
                    (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                     cic.lift cic.prop univs.Type2
                       ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_basics_bool.bool)
                           x matita_basics_bool.true)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true)
                    (f m) fm))
              (matita_arithmetics_minimization.le_to_le_max f i
                 (matita_arithmetics_nat.S i)
                 (matita_arithmetics_nat.le_n_Sn i)))
           (eqm :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   m i) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) i
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x i) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f x) matita_basics_bool.true)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f x) matita_basics_bool.true) =>
                  matita_arithmetics_nat.le x
                    (matita_arithmetics_minimization.max
                       (matita_arithmetics_nat.S i) f)))
              (eqf :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (x : cic.Term univs.Type0 matita_basics_bool.bool =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         x matita_basics_bool.true) =>
                  matita_arithmetics_nat.le i
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       i
                       (matita_arithmetics_minimization.max' i f
                          matita_arithmetics_nat.O)
                       x))
                 (matita_arithmetics_nat.le_n i) (f i) eqf)
              m eqm)
           (matita_arithmetics_nat.le_to_or_lt_eq m i
              (matita_arithmetics_nat.le_S_S_to_le m i ltm)))
        n.

def lt_max_to_false :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_nat.lt m n) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_minimization.max n f) m) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         f m) matita_basics_bool.false)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      ltnm : cic.Term cic.prop (matita_arithmetics_nat.lt m n) =>
      eqf :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_minimization.max n f) m) =>
      matita_basics_logic.match_Or
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         f m) matita_basics_bool.true)
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         f m) matita_basics_bool.false)
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.Or
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.true)
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.false)) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         f m) matita_basics_bool.false)
        (fm :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.true) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f m) matita_basics_bool.false)
           (matita_basics_logic.absurd
              (matita_arithmetics_nat.lt
                 (matita_arithmetics_minimization.max n f) m)
              eqf
              (matita_arithmetics_nat.le_to_not_lt m
                 (matita_arithmetics_minimization.max n f)
                 (matita_arithmetics_minimization.true_to_le_max f n m ltnm
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              x matita_basics_bool.true)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true)
                       (f m) fm)))))
        (auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.false) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           matita_basics_bool.false
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  x matita_basics_bool.false)
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false)
           (f m) auto)
        (matita_basics_bool.true_or_false (f m)).

def max_exists :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_nat.lt m n) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.true) ->
      __2 :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __2 : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
         __3 : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.false)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.max n f) m)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt m _x_365)
              (__ : cic.Term cic.prop (matita_arithmetics_nat.lt m _x_365) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f m) matita_basics_bool.true)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f m) matita_basics_bool.true) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt m i)
                          (__2 :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt m i) =>
                           cic.prod cic.prop cic.prop
                             (matita_arithmetics_nat.lt i _x_365)
                             (__3 :
                                cic.Term cic.prop
                                  (matita_arithmetics_nat.lt i _x_365) =>
                              matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                (f i) matita_basics_bool.false))))
                    (__2 :
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat ->
                        __2 :
                          cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
                        __3 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt i _x_365) ->
                        cic.Term cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.false)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_minimization.max _x_365 f) m)))))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         ltO :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m matita_arithmetics_nat.O) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f m) matita_basics_bool.true)
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.true) =>
               cic.prod cic.prop cic.prop
                 (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt m i)
                       (__1 :
                          cic.Term cic.prop (matita_arithmetics_nat.lt m i) =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt i
                             matita_arithmetics_nat.O)
                          (__2 :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt i
                                  matita_arithmetics_nat.O) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.false))))
                 (__1 :
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
                     __1 :
                       cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
                     __2 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt i
                            matita_arithmetics_nat.O) ->
                     cic.Term cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f i) matita_basics_bool.false)) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_minimization.max
                       matita_arithmetics_nat.O f)
                    m)))
           (matita_basics_logic.absurd
              (matita_arithmetics_nat.le (matita_arithmetics_nat.S m)
                 matita_arithmetics_nat.O)
              ltO (matita_arithmetics_nat.not_le_Sn_O m)))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (m0 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt m0 m) ->
            __1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m0) matita_basics_bool.true) ->
            __2 :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __2 : cic.Term cic.prop (matita_arithmetics_nat.lt m0 i) ->
               __3 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max m f) m0)) =>
         max : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         ltmax :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt max (matita_arithmetics_nat.S m)) =>
         fmax :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f max) matita_basics_bool.true) =>
         ismax :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt max i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i (matita_arithmetics_nat.S m)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         matita_basics_logic.match_Or (matita_arithmetics_nat.lt max m)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              max m)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or (matita_arithmetics_nat.lt max m)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      max m)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.max
                 (matita_arithmetics_nat.S m) f)
              max)
           (ltm : cic.Term cic.prop (matita_arithmetics_nat.lt max m) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.false) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    m
                    (matita_arithmetics_minimization.max' m f
                       matita_arithmetics_nat.O)
                    x)
                 max)
              (Hind max ltm fmax
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  Hl : cic.Term cic.prop (matita_arithmetics_nat.lt max i) =>
                  Hr : cic.Term cic.prop (matita_arithmetics_nat.lt i m) =>
                  ismax i Hl
                    (matita_arithmetics_nat.le_S (matita_arithmetics_nat.S i)
                       m Hr)))
              (f m)
              (ismax m ltm
                 (matita_basics_logic.eq_coerc
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt m
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus m
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))))
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt m
                          (matita_arithmetics_nat.S m)))
                    (matita_arithmetics_nat.lt_plus_Sn_r m
                       matita_arithmetics_nat.O matita_arithmetics_nat.O)
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt m
                                    (matita_arithmetics_nat.plus x
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O))))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt m
                                    (matita_arithmetics_nat.S m))))
                             __))
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S m)
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m x))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m
                                       (matita_arithmetics_nat.S m))))
                                __))
                          (matita_basics_logic.refl
                             (cic.lift (cic.succ univs.Type0) univs.Type2
                                (cic.univ univs.Type0))
                             (cic.lift cic.prop univs.Type0
                                (matita_arithmetics_nat.lt m
                                   (matita_arithmetics_nat.S m))))
                          (matita_arithmetics_nat.plus m
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus m
                                matita_arithmetics_nat.O)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    (matita_arithmetics_nat.S x)
                                    (matita_arithmetics_nat.plus m
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)))
                                   __))
                             (matita_arithmetics_nat.plus_n_Sm m
                                matita_arithmetics_nat.O)
                             m (matita_arithmetics_nat.plus_n_O m)))
                       (matita_arithmetics_nat.plus m
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.plus_n_O m)))))
           (ltm :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   max m) =>
            matita_basics_logic.eq_ind
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              max
              (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               _x_2 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      max x_1) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    x_1
                    (matita_arithmetics_minimization.max' x_1 f
                       matita_arithmetics_nat.O)
                    (f x_1))
                 max)
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (x : cic.Term univs.Type0 matita_basics_bool.bool =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         x matita_basics_bool.true) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       max
                       (matita_arithmetics_minimization.max' max f
                          matita_arithmetics_nat.O)
                       x)
                    max)
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_basics_bool.match_bool univs.Type0
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       max
                       (matita_arithmetics_minimization.max' max f
                          matita_arithmetics_nat.O)
                       matita_basics_bool.true))
                 (f max) fmax)
              m ltm)
           (matita_arithmetics_nat.le_to_or_lt_eq max m
              (matita_arithmetics_nat.le_S_S_to_le max m ltmax)))
        n.

def max_not_exists :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.false)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.max n f) matita_arithmetics_nat.O)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      ffalse :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.false)) =>
      matita_arithmetics_nat.le_gen
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.max __ f)
           matita_arithmetics_nat.O)
        n
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.nat_ind
           (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop (matita_arithmetics_nat.le _x_365 n)
              (__ : cic.Term cic.prop (matita_arithmetics_nat.le _x_365 n) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max _x_365 f)
                 matita_arithmetics_nat.O))
           (auto :
              cic.Term cic.prop
                (matita_arithmetics_nat.le matita_arithmetics_nat.O n) =>
            matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_arithmetics_nat.nat)
                     x matita_arithmetics_nat.O)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O)
              (matita_arithmetics_minimization.max matita_arithmetics_nat.O f)
              (matita_arithmetics_minimization.max_O f))
           (j : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            Hind :
              (__ : cic.Term cic.prop (matita_arithmetics_nat.le j n) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_minimization.max j f)
                    matita_arithmetics_nat.O)) =>
            ltj :
              cic.Term cic.prop
                (matita_arithmetics_nat.le (matita_arithmetics_nat.S j) n) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.false) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    j
                    (matita_arithmetics_minimization.max' j f
                       matita_arithmetics_nat.O)
                    x)
                 matita_arithmetics_nat.O)
              (Hind (matita_arithmetics_nat.lt_to_le j n ltj)) (f j)
              (ffalse j ltj))
           i).

def let_clause_1013 :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      Hind :
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.max i f) m) ->
         __1 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.false) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
              matita_arithmetics_nat.O)) ->
      fi :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f i) matita_basics_bool.true) ->
      eqm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) i
             m) ->
      fm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.false) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           matita_basics_bool.false matita_basics_bool.true)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      Hind :
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.max i f) m) ->
         __1 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.false) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
              matita_arithmetics_nat.O)) =>
      fi :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f i) matita_basics_bool.true) =>
      eqm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) i
             m) =>
      fm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.false) =>
      matita_basics_logic.rewrite_l
        (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (f m)
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.lift cic.prop univs.Type2
           ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
             matita_basics_logic.eq
               (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x
               matita_basics_bool.true)
              __))
        (matita_basics_logic.rewrite_l
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) i
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  (f x) matita_basics_bool.true)
                 __))
           fi m eqm)
        matita_basics_bool.false fm.

def fmax_false :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_minimization.max n f) m) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.false) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
           matita_arithmetics_nat.O)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod cic.prop cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.max _x_365 f) m)
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_minimization.max _x_365 f) m) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f m) matita_basics_bool.false)
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.false) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 m matita_arithmetics_nat.O)))
        (auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.max matita_arithmetics_nat.O
                   f)
                m) =>
         auto' :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.false) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2
                     matita_arithmetics_nat.nat)
                  m x)
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m)
           matita_arithmetics_nat.O
           (matita_basics_logic.rewrite_l
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.max matita_arithmetics_nat.O f)
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_arithmetics_nat.nat)
                     x m)
                    __))
              auto matita_arithmetics_nat.O
              (matita_arithmetics_minimization.max_O f)))
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_minimization.max i f) m) ->
            __1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.false) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 m matita_arithmetics_nat.O)) =>
         matita_basics_logic.match_Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.false)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.false)) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    i
                    (matita_arithmetics_minimization.max' i f
                       matita_arithmetics_nat.O)
                    (f i))
                 m)
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      (matita_basics_bool.match_bool univs.Type0
                         (_0 :
                            cic.Term univs.Type0 matita_basics_bool.bool =>
                          matita_arithmetics_nat.nat)
                         i
                         (matita_arithmetics_minimization.max' i f
                            matita_arithmetics_nat.O)
                         (f i))
                      m) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f m) matita_basics_bool.false)
                 (__2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f m) matita_basics_bool.false) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m matita_arithmetics_nat.O)))
           (fi :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.true) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       i
                       (matita_arithmetics_minimization.max' i f
                          matita_arithmetics_nat.O)
                       x)
                    m)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_basics_bool.match_bool univs.Type0
                            (_0 :
                               cic.Term univs.Type0 matita_basics_bool.bool =>
                             matita_arithmetics_nat.nat)
                            i
                            (matita_arithmetics_minimization.max' i f
                               matita_arithmetics_nat.O)
                            x)
                         m) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f m) matita_basics_bool.false)
                    (__2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f m) matita_basics_bool.false) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m matita_arithmetics_nat.O)))
              (eqm :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      i m) =>
               fm :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.false) =>
               matita_basics_logic.False_ind
                 (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m matita_arithmetics_nat.O)
                 (matita_basics_logic.absurd
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)
                    fi
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_basics_logic.Not
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                matita_basics_bool.true
                                matita_basics_bool.false)))
                       (cic.lift cic.prop univs.Type0
                          (matita_basics_logic.Not
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                (f i) matita_basics_bool.true)))
                       matita_basics_bool.not_eq_true_false
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true
                          (__ :
                             cic.Term univs.Type0 matita_basics_bool.bool =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0 matita_basics_bool.bool =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_basics_logic.Not
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_basics_bool.bool)
                                          matita_basics_bool.true x)))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_basics_logic.Not
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_basics_bool.bool)
                                          (f i) matita_basics_bool.true))))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             m
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_basics_logic.Not
                                          (matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_basics_bool.bool)
                                             matita_basics_bool.true
                                             matita_basics_bool.true)))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_basics_logic.Not
                                          (matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_basics_bool.bool)
                                             (f x) matita_basics_bool.true))))
                                   __))
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                matita_basics_bool.true
                                (__ :
                                   cic.Term univs.Type0
                                     matita_basics_bool.bool =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_basics_bool.bool =>
                                     matita_basics_logic.eq
                                       (cic.lift (cic.succ univs.Type0)
                                          univs.Type2 (cic.univ univs.Type0))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_basics_logic.Not
                                             (matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_basics_bool.bool)
                                                matita_basics_bool.true
                                                matita_basics_bool.true)))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_basics_logic.Not
                                             (matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_basics_bool.bool)
                                                x matita_basics_bool.true))))
                                      __))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.succ univs.Type0)
                                      univs.Type2 (cic.univ univs.Type0))
                                   (cic.lift cic.prop univs.Type0
                                      (matita_basics_logic.Not
                                         (matita_basics_logic.eq
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_basics_bool.bool)
                                            matita_basics_bool.true
                                            matita_basics_bool.true))))
                                (f m)
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_basics_bool.bool)
                                   matita_basics_bool.false
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_basics_bool.bool =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_basics_bool.bool =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_basics_bool.bool)
                                          (f m) x)
                                         __))
                                   fm matita_basics_bool.true
                                   (matita_arithmetics_minimization.let_clause_1013
                                      f n m i Hind fi eqm fm)))
                             i eqm)
                          matita_basics_bool.false
                          (matita_arithmetics_minimization.let_clause_1013 f
                             n m i Hind fi eqm fm)))))
              (f i) fi)
           (fi :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.false) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.false) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       i
                       (matita_arithmetics_minimization.max' i f
                          matita_arithmetics_nat.O)
                       x)
                    m)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_basics_bool.match_bool univs.Type0
                            (_0 :
                               cic.Term univs.Type0 matita_basics_bool.bool =>
                             matita_arithmetics_nat.nat)
                            i
                            (matita_arithmetics_minimization.max' i f
                               matita_arithmetics_nat.O)
                            x)
                         m) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f m) matita_basics_bool.false)
                    (__2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f m) matita_basics_bool.false) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m matita_arithmetics_nat.O)))
              Hind (f i) fi)
           (matita_basics_bool.true_or_false (f i)))
        n.

max_spec :
  _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  _f :
    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     cic.Term univs.Type0 matita_basics_bool.bool) ->
  __ : cic.Term univs.Type0 matita_arithmetics_nat.nat -> cic.Univ cic.prop.

found_max_spec :
  n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  f :
    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     cic.Term univs.Type0 matita_basics_bool.bool) ->
  m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  __ : cic.Term cic.prop (matita_arithmetics_nat.lt m n) ->
  __1 :
    cic.Term cic.prop
      (matita_basics_logic.eq
         (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
       f m) matita_basics_bool.true) ->
  __2 :
    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     __2 : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
     __3 : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
     cic.Term cic.prop
       (matita_basics_logic.eq
          (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
        f i) matita_basics_bool.false)) ->
  cic.Term cic.prop (matita_arithmetics_minimization.max_spec n f m).

not_found_max_spec :
  n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  f :
    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     cic.Term univs.Type0 matita_basics_bool.bool) ->
  __ :
    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     __ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
     cic.Term cic.prop
       (matita_basics_logic.eq
          (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
        f i) matita_basics_bool.false)) ->
  cic.Term cic.prop
    (matita_arithmetics_minimization.max_spec n f matita_arithmetics_nat.O).

def match_max_spec :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      return_sort : cic.Sort ->
      return_type :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         z :
           cic.Term cic.prop
             (matita_arithmetics_minimization.max_spec _n _f __) ->
         cic.Univ return_sort) ->
      case_found_max_spec :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.lt m _n) ->
         __1 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (_f m) matita_basics_bool.true) ->
         __2 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __2 : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
            __3 : cic.Term cic.prop (matita_arithmetics_nat.lt i _n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term return_sort
           (return_type m
              (matita_arithmetics_minimization.found_max_spec _n _f m __ __1
                 __2))) ->
      case_not_found_max_spec :
        (__ :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt i _n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term return_sort
           (return_type matita_arithmetics_nat.O
              (matita_arithmetics_minimization.not_found_max_spec _n _f __))) ->
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      z :
        cic.Term cic.prop (matita_arithmetics_minimization.max_spec _n _f __) ->
      cic.Term return_sort (return_type __ z).

[ _n, _f, return_sort, return_type, case_found_max_spec,
  case_not_found_max_spec, m, __, __1, __2 ]
  match_max_spec _n _f return_sort return_type case_found_max_spec
    case_not_found_max_spec (m)
    (matita_arithmetics_minimization.found_max_spec _n _f m __ __1 __2) -->
  case_found_max_spec m __ __1 __2.

[ _n, _f, return_sort, return_type, case_found_max_spec,
  case_not_found_max_spec, __ ]
  match_max_spec _n _f return_sort return_type case_found_max_spec
    case_not_found_max_spec (matita_arithmetics_nat.O)
    (matita_arithmetics_minimization.not_found_max_spec _n _f __) -->
  case_not_found_max_spec __.

def filter_max_spec :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      return_sort : cic.Sort ->
      return_type :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_minimization.max_spec _n _f __) ->
         cic.Univ return_sort) ->
      return :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_minimization.max_spec _n _f __) ->
         cic.Term return_sort (return_type z)) ->
      z :
        cic.Term cic.prop (matita_arithmetics_minimization.max_spec _n _f __) ->
      cic.Term return_sort (return_type z).

[ n, f, m, __, __1, __2, return_sort, return_type, return ]
  filter_max_spec (n) (f) (m) return_sort return_type return
    (matita_arithmetics_minimization.found_max_spec n f m __ __1 __2) -->
  return (matita_arithmetics_minimization.found_max_spec n f m __ __1 __2).

[ n, f, __, return_sort, return_type, return ]
  filter_max_spec (n) (f) (matita_arithmetics_nat.O) return_sort return_type
    return (matita_arithmetics_minimization.not_found_max_spec n f __) -->
  return (matita_arithmetics_minimization.not_found_max_spec n f __).

def max_spec_ind :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      Q_ :
        (x_971 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         _x_972 :
           cic.Term cic.prop
             (matita_arithmetics_minimization.max_spec _n _f x_971) ->
         cic.Univ cic.prop) ->
      _H_found_max_spec :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         x_975 : cic.Term cic.prop (matita_arithmetics_nat.lt m _n) ->
         x_974 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (_f m) matita_basics_bool.true) ->
         x_973 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i _n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term cic.prop
           (Q_ m
              (matita_arithmetics_minimization.found_max_spec _n _f m x_975
                 x_974 x_973))) ->
      _H_not_found_max_spec :
        (x_976 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt i _n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term cic.prop
           (Q_ matita_arithmetics_nat.O
              (matita_arithmetics_minimization.not_found_max_spec _n _f x_976))) ->
      x_971 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x_972 :
        cic.Term cic.prop
          (matita_arithmetics_minimization.max_spec _n _f x_971) ->
      cic.Term cic.prop (Q_ x_971 x_972).

def max_spec_ind_body :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      Q_ :
        (x_971 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         _x_972 :
           cic.Term cic.prop
             (matita_arithmetics_minimization.max_spec _n _f x_971) ->
         cic.Univ cic.prop) ->
      _H_found_max_spec :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         x_975 : cic.Term cic.prop (matita_arithmetics_nat.lt m _n) ->
         x_974 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (_f m) matita_basics_bool.true) ->
         x_973 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i _n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term cic.prop
           (Q_ m
              (matita_arithmetics_minimization.found_max_spec _n _f m x_975
                 x_974 x_973))) ->
      _H_not_found_max_spec :
        (x_976 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt i _n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term cic.prop
           (Q_ matita_arithmetics_nat.O
              (matita_arithmetics_minimization.not_found_max_spec _n _f x_976))) ->
      x_971 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x_972 :
        cic.Term cic.prop
          (matita_arithmetics_minimization.max_spec _n _f x_971) ->
      cic.Term cic.prop (Q_ x_971 x_972).

[ _n, _f, Q_, _H_found_max_spec, _H_not_found_max_spec, x_971, x_972 ]
  max_spec_ind _n _f Q_ _H_found_max_spec _H_not_found_max_spec x_971 x_972 -->
  matita_arithmetics_minimization.filter_max_spec _n _f x_971 cic.prop
    (x_972 :
       cic.Term cic.prop
         (matita_arithmetics_minimization.max_spec _n _f x_971) =>
     Q_ x_971 x_972)
    (matita_arithmetics_minimization.max_spec_ind_body _n _f Q_
       _H_found_max_spec _H_not_found_max_spec x_971)
    x_972.

[ _n, _f, Q_, _H_found_max_spec, _H_not_found_max_spec, x_971, x_972 ]
  max_spec_ind_body _n _f Q_ _H_found_max_spec _H_not_found_max_spec x_971
    x_972 -->
  matita_arithmetics_minimization.match_max_spec _n _f cic.prop Q_
    (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     x_975 : cic.Term cic.prop (matita_arithmetics_nat.lt m _n) =>
     x_974 :
       cic.Term cic.prop
         (matita_basics_logic.eq
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
          _f m) matita_basics_bool.true) =>
     x_973 :
       (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
        __ : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
        __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i _n) ->
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (_f i) matita_basics_bool.false)) =>
     _H_found_max_spec m x_975 x_974 x_973)
    (x_976 :
       (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
        __ : cic.Term cic.prop (matita_arithmetics_nat.lt i _n) ->
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (_f i) matita_basics_bool.false)) =>
     _H_not_found_max_spec x_976)
    x_971 x_972.

def max_spec_inv_ind :
      x1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x2 :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      x3 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _Hterm :
        cic.Term cic.prop (matita_arithmetics_minimization.max_spec x1 x2 x3) ->
      P :
        (_z1769 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Univ cic.prop) ->
      _H1 :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         _x_975 : cic.Term cic.prop (matita_arithmetics_nat.lt m x1) ->
         _x_974 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (x2 m) matita_basics_bool.true) ->
         _x_973 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i x1) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (x2 i) matita_basics_bool.false)) ->
         _z1770 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x3 m) ->
         cic.Term cic.prop (P m)) ->
      _H2 :
        (_x_976 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt i x1) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (x2 i) matita_basics_bool.false)) ->
         _z1770 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x3 matita_arithmetics_nat.O) ->
         cic.Term cic.prop (P matita_arithmetics_nat.O)) ->
      cic.Term cic.prop (P x3) :=
      x1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      x2 :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      x3 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop (matita_arithmetics_minimization.max_spec x1 x2 x3) =>
      P :
        (_z1769 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Univ cic.prop) =>
      H1 :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         _x_975 : cic.Term cic.prop (matita_arithmetics_nat.lt m x1) ->
         _x_974 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (x2 m) matita_basics_bool.true) ->
         _x_973 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i x1) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (x2 i) matita_basics_bool.false)) ->
         _z1770 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x3 m) ->
         cic.Term cic.prop (P m)) =>
      H2 :
        (_x_976 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt i x1) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (x2 i) matita_basics_bool.false)) ->
         _z1770 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x3 matita_arithmetics_nat.O) ->
         cic.Term cic.prop (P matita_arithmetics_nat.O)) =>
      (Hcut :
         (_z1770 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 x3 x3) ->
          cic.Term cic.prop (P x3)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) x3))
        (matita_arithmetics_minimization.max_spec_ind x1 x2
           (x_971 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            _x_972 :
              cic.Term cic.prop
                (matita_arithmetics_minimization.max_spec x1 x2 x_971) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 x3 x_971)
              (_z1770 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x3 x_971) =>
               P x_971))
           H1 H2 x3 Hterm).

def max_spec_to_max :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop (matita_arithmetics_minimization.max_spec n f m) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.max n f) m)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      spec :
        cic.Term cic.prop (matita_arithmetics_minimization.max_spec n f m) =>
      matita_arithmetics_minimization.match_max_spec n f cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         _0 :
           cic.Term cic.prop
             (matita_arithmetics_minimization.max_spec n f __) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.max n f) __)
        (max : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         ltmax : cic.Term cic.prop (matita_arithmetics_nat.lt max n) =>
         fmax :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f max) matita_basics_bool.true) =>
         ismax :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt max i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         matita_arithmetics_minimization.max_exists f n max ltmax
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     x matita_basics_bool.true)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true)
              (f max) fmax)
           ismax)
        (ffalse :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         matita_arithmetics_minimization.max_not_exists f n ffalse)
        m spec.

def let_clause_10131 :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n0 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      eqm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_minimization.max
                (matita_arithmetics_nat.S n0) f)
             m) ->
      fm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.false) ->
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      j : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      ltj :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S j)
             (matita_arithmetics_nat.S n0)) ->
      x7 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) x7
           (matita_arithmetics_nat.plus m x7))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      eqm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_minimization.max
                (matita_arithmetics_nat.S n0) f)
             m) =>
      fm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.false) =>
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      j : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      ltj :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt (matita_arithmetics_nat.S j)
             (matita_arithmetics_nat.S n0)) =>
      x7 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_logic.rewrite_r
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        matita_arithmetics_nat.O
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.lift cic.prop univs.Type2
           ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
             matita_basics_logic.eq
               (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
               x7 (matita_arithmetics_nat.plus x x7))
              __))
        (matita_arithmetics_nat.plus_O_n x7) m
        (matita_arithmetics_minimization.fmax_false f
           (matita_arithmetics_nat.S n0) m eqm fm).

def max_to_max_spec :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_minimization.max n f) m) ->
      cic.Term cic.prop (matita_arithmetics_minimization.max_spec n f m) :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod cic.prop cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.max __ f) m)
           (__1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_minimization.max __ f) m) =>
            matita_arithmetics_minimization.max_spec __ f m))
        (eqm :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.max matita_arithmetics_nat.O
                   f)
                m) =>
         matita_basics_logic.eq_ind
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.max matita_arithmetics_nat.O f)
           (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_minimization.max
                      matita_arithmetics_nat.O f)
                   x_1) =>
            matita_arithmetics_minimization.max_spec matita_arithmetics_nat.O
              f x_1)
           (matita_arithmetics_minimization.not_found_max_spec
              matita_arithmetics_nat.O f
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               ltiO :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt i matita_arithmetics_nat.O) =>
               matita_basics_logic.False_ind
                 (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)
                 (matita_basics_logic.absurd
                    (matita_arithmetics_nat.le (matita_arithmetics_nat.S i)
                       matita_arithmetics_nat.O)
                    ltiO (matita_arithmetics_nat.not_le_Sn_O i))))
           m eqm)
        (n0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         eqm :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.max
                   (matita_arithmetics_nat.S n0) f)
                m) =>
         matita_basics_logic.match_Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f m) matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f m) matita_basics_bool.false)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.true)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.false)) =>
            matita_arithmetics_minimization.max_spec
              (matita_arithmetics_nat.S n0) f m)
           (fm :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.true) =>
            matita_arithmetics_minimization.found_max_spec
              (matita_arithmetics_nat.S n0) f m
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop univs.Type0
                    (matita_arithmetics_nat.lt
                       (matita_arithmetics_minimization.max
                          (matita_arithmetics_nat.S n0) f)
                       (matita_arithmetics_nat.S n0)))
                 (cic.lift cic.prop univs.Type0
                    (matita_arithmetics_nat.lt m
                       (matita_arithmetics_nat.S n0)))
                 (matita_arithmetics_minimization.lt_max_n f
                    (matita_arithmetics_nat.S n0)
                    (matita_arithmetics_nat.lt_O_S n0))
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift (cic.succ univs.Type0) univs.Type2
                              (cic.univ univs.Type0))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.lt x
                                 (matita_arithmetics_nat.S n0)))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.lt m
                                 (matita_arithmetics_nat.S n0))))
                          __))
                    (matita_basics_logic.refl
                       (cic.lift (cic.succ univs.Type0) univs.Type2
                          (cic.univ univs.Type0))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt m
                             (matita_arithmetics_nat.S n0))))
                    (matita_arithmetics_minimization.max
                       (matita_arithmetics_nat.S n0) f)
                    eqm))
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_basics_bool.bool)
                        x matita_basics_bool.true)
                       __))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true)
                 (f m) fm)
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               auto : cic.Term cic.prop (matita_arithmetics_nat.lt m i) =>
               auto' :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt i (matita_arithmetics_nat.S n0)) =>
               matita_arithmetics_minimization.lt_max_to_false f
                 (matita_arithmetics_nat.S n0) i auto'
                 (matita_basics_logic.eq_coerc
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt m i))
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt
                          (matita_arithmetics_minimization.max
                             (matita_arithmetics_nat.S n0) f)
                          i))
                    auto
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_minimization.max
                          (matita_arithmetics_nat.S n0) f)
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt x i))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt
                                    (matita_arithmetics_minimization.max
                                       (matita_arithmetics_nat.S n0) f)
                                    i)))
                             __))
                       (matita_basics_logic.refl
                          (cic.lift (cic.succ univs.Type0) univs.Type2
                             (cic.univ univs.Type0))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt
                                (matita_arithmetics_minimization.max
                                   (matita_arithmetics_nat.S n0) f)
                                i)))
                       m eqm))))
           (fm :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.false) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x matita_arithmetics_nat.O) =>
               matita_arithmetics_minimization.max_spec
                 (matita_arithmetics_nat.S n0) f x)
              (matita_arithmetics_minimization.not_found_max_spec
                 (matita_arithmetics_nat.S n0) f
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.match_nat cic.prop
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt __
                          (matita_arithmetics_nat.S n0))
                       (__1 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt __
                               (matita_arithmetics_nat.S n0)) =>
                        matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f __) matita_basics_bool.false))
                    (auto :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                            (matita_arithmetics_nat.S n0)) =>
                     matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              (f x) matita_basics_bool.false)
                             __))
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.false
                          (__ :
                             cic.Term univs.Type0 matita_basics_bool.bool =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0 matita_basics_bool.bool =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_basics_bool.bool)
                                 x matita_basics_bool.false)
                                __))
                          (matita_basics_logic.refl
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             matita_basics_bool.false)
                          (f m) fm)
                       matita_arithmetics_nat.O
                       (matita_arithmetics_minimization.fmax_false f
                          (matita_arithmetics_nat.S n0) m eqm fm))
                    (j : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     ltj :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt
                            (matita_arithmetics_nat.S j)
                            (matita_arithmetics_nat.S n0)) =>
                     matita_arithmetics_minimization.lt_max_to_false f
                       (matita_arithmetics_nat.S n0)
                       (matita_arithmetics_nat.S j) ltj
                       (matita_basics_logic.eq_coerc
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt
                                (matita_arithmetics_minimization.max
                                   (matita_arithmetics_nat.S n0) f)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_minimization.max
                                         (matita_arithmetics_nat.S n0) f)
                                      (matita_arithmetics_minimization.max
                                         (matita_arithmetics_nat.S n0) f))
                                   (matita_arithmetics_nat.S j))))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt
                                (matita_arithmetics_minimization.max
                                   (matita_arithmetics_nat.S n0) f)
                                (matita_arithmetics_nat.S j)))
                          (matita_arithmetics_nat.lt_plus_Sn_r
                             (matita_arithmetics_minimization.max
                                (matita_arithmetics_nat.S n0) f)
                             (matita_arithmetics_minimization.max
                                (matita_arithmetics_nat.S n0) f)
                             j)
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_minimization.max
                                   (matita_arithmetics_nat.S n0) f)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_minimization.max
                                      (matita_arithmetics_nat.S n0) f)
                                   (matita_arithmetics_nat.S j)))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt
                                          (matita_arithmetics_minimization.max
                                             (matita_arithmetics_nat.S n0) f)
                                          x))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt
                                          (matita_arithmetics_minimization.max
                                             (matita_arithmetics_nat.S n0) f)
                                          (matita_arithmetics_nat.S j))))
                                   __))
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                m
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift (cic.succ univs.Type0)
                                          univs.Type2 (cic.univ univs.Type0))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt x
                                             (matita_arithmetics_nat.plus x
                                                (matita_arithmetics_nat.plus
                                                   x
                                                   (matita_arithmetics_nat.S
                                                      j)))))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt x
                                             (matita_arithmetics_nat.S j))))
                                      __))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S j)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift (cic.succ univs.Type0)
                                             univs.Type2
                                             (cic.univ univs.Type0))
                                          (cic.lift cic.prop univs.Type0
                                             (matita_arithmetics_nat.lt m
                                                (matita_arithmetics_nat.plus
                                                   m x)))
                                          (cic.lift cic.prop univs.Type0
                                             (matita_arithmetics_nat.lt m
                                                (matita_arithmetics_nat.S j))))
                                         __))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S j)
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift (cic.succ univs.Type0)
                                                univs.Type2
                                                (cic.univ univs.Type0))
                                             (cic.lift cic.prop univs.Type0
                                                (matita_arithmetics_nat.lt m
                                                   x))
                                             (cic.lift cic.prop univs.Type0
                                                (matita_arithmetics_nat.lt m
                                                   (matita_arithmetics_nat.S
                                                      j))))
                                            __))
                                      (matita_basics_logic.refl
                                         (cic.lift (cic.succ univs.Type0)
                                            univs.Type2
                                            (cic.univ univs.Type0))
                                         (cic.lift cic.prop univs.Type0
                                            (matita_arithmetics_nat.lt m
                                               (matita_arithmetics_nat.S j))))
                                      (matita_arithmetics_nat.plus m
                                         (matita_arithmetics_nat.S j))
                                      (matita_arithmetics_minimization.let_clause_10131
                                         f n m n0 eqm fm i j ltj
                                         (matita_arithmetics_nat.S j)))
                                   (matita_arithmetics_nat.plus m
                                      (matita_arithmetics_nat.S j))
                                   (matita_arithmetics_minimization.let_clause_10131
                                      f n m n0 eqm fm i j ltj
                                      (matita_arithmetics_nat.S j)))
                                (matita_arithmetics_minimization.max
                                   (matita_arithmetics_nat.S n0) f)
                                eqm)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_minimization.max
                                      (matita_arithmetics_nat.S n0) f)
                                   (matita_arithmetics_minimization.max
                                      (matita_arithmetics_nat.S n0) f))
                                (matita_arithmetics_nat.S j))
                             (matita_arithmetics_nat.associative_plus
                                (matita_arithmetics_minimization.max
                                   (matita_arithmetics_nat.S n0) f)
                                (matita_arithmetics_minimization.max
                                   (matita_arithmetics_nat.S n0) f)
                                (matita_arithmetics_nat.S j)))))
                    i))
              m
              (matita_arithmetics_minimization.fmax_false f
                 (matita_arithmetics_nat.S n0) m eqm fm))
           (matita_basics_bool.true_or_false (f m)))
        n.

def max_f_g :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      g :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) (g i))) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.max n f)
           (matita_arithmetics_minimization.max n g))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      g :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod cic.prop cic.prop
           (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_nat.lt i _x_365)
                 (__ :
                    cic.Term cic.prop (matita_arithmetics_nat.lt i _x_365) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) (g i))))
           (__ :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __ : cic.Term cic.prop (matita_arithmetics_nat.lt i _x_365) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) (g i))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.max _x_365 f)
              (matita_arithmetics_minimization.max _x_365 g)))
        (auto :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i matita_arithmetics_nat.O) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) (g i))) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           matita_arithmetics_nat.O
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2
                     matita_arithmetics_nat.nat)
                  x
                  (matita_arithmetics_minimization.max
                     matita_arithmetics_nat.O g))
                 __))
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_arithmetics_nat.nat)
                     matita_arithmetics_nat.O x)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O)
              (matita_arithmetics_minimization.max matita_arithmetics_nat.O g)
              (matita_arithmetics_minimization.max_O g))
           (matita_arithmetics_minimization.max matita_arithmetics_nat.O f)
           (matita_arithmetics_minimization.max_O f))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (__ :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __ : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) (g i))) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max m f)
                 (matita_arithmetics_minimization.max m g))) =>
         ext :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i (matita_arithmetics_nat.S m)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) (g i))) =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         g m)
           (x : cic.Term univs.Type0 matita_basics_bool.bool =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   x (g m)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 m
                 (matita_arithmetics_minimization.max' m f
                    matita_arithmetics_nat.O)
                 x)
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 m
                 (matita_arithmetics_minimization.max' m g
                    matita_arithmetics_nat.O)
                 (g m)))
           (matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.max' m g
                 matita_arithmetics_nat.O)
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_minimization.max' m g
                         matita_arithmetics_nat.O)) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    m x (g m))
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    m
                    (matita_arithmetics_minimization.max' m g
                       matita_arithmetics_nat.O)
                    (g m)))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    m
                    (matita_arithmetics_minimization.max' m g
                       matita_arithmetics_nat.O)
                    (g m)))
              (matita_arithmetics_minimization.max' m f
                 matita_arithmetics_nat.O)
              (Hind
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  ltim :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.le (matita_arithmetics_nat.S i)
                         m) =>
                  ext i
                    (matita_arithmetics_nat.le_S (matita_arithmetics_nat.S i)
                       m ltim))))
           (f m)
           (ext m
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max' m g
                    matita_arithmetics_nat.O)
                 (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_minimization.max' m g
                            matita_arithmetics_nat.O)) =>
                  matita_arithmetics_nat.lt m (matita_arithmetics_nat.S m))
                 (matita_basics_logic.eq_coerc
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt m
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus m
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))))
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt m
                          (matita_arithmetics_nat.S m)))
                    (matita_arithmetics_nat.lt_plus_Sn_r m
                       matita_arithmetics_nat.O matita_arithmetics_nat.O)
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt m
                                    (matita_arithmetics_nat.plus x
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O))))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt m
                                    (matita_arithmetics_nat.S m))))
                             __))
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S m)
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m x))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m
                                       (matita_arithmetics_nat.S m))))
                                __))
                          (matita_basics_logic.refl
                             (cic.lift (cic.succ univs.Type0) univs.Type2
                                (cic.univ univs.Type0))
                             (cic.lift cic.prop univs.Type0
                                (matita_arithmetics_nat.lt m
                                   (matita_arithmetics_nat.S m))))
                          (matita_arithmetics_nat.plus m
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus m
                                matita_arithmetics_nat.O)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    (matita_arithmetics_nat.S x)
                                    (matita_arithmetics_nat.plus m
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)))
                                   __))
                             (matita_arithmetics_nat.plus_n_Sm m
                                matita_arithmetics_nat.O)
                             m (matita_arithmetics_nat.plus_n_O m)))
                       (matita_arithmetics_nat.plus m
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.plus_n_O m)))
                 (matita_arithmetics_minimization.max' m f
                    matita_arithmetics_nat.O)
                 (Hind
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     ltim :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S i) m) =>
                     ext i
                       (matita_arithmetics_nat.le_S
                          (matita_arithmetics_nat.S i) m ltim))))))
        n.

def le_max_f_max_g :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      g :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
         __1 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f i) matita_basics_bool.true) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (g i) matita_basics_bool.true)) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le (matita_arithmetics_minimization.max n f)
           (matita_arithmetics_minimization.max n g))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      g :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod cic.prop cic.prop
           (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_nat.lt i _x_365)
                 (__ :
                    cic.Term cic.prop (matita_arithmetics_nat.lt i _x_365) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)
                    (__1 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.true) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (g i) matita_basics_bool.true))))
           (__ :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __ : cic.Term cic.prop (matita_arithmetics_nat.lt i _x_365) ->
               __1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (g i) matita_basics_bool.true)) =>
            matita_arithmetics_nat.le
              (matita_arithmetics_minimization.max _x_365 f)
              (matita_arithmetics_minimization.max _x_365 g)))
        (auto :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i matita_arithmetics_nat.O) ->
            __1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (g i) matita_basics_bool.true)) =>
         matita_arithmetics_nat.le_n
           (matita_arithmetics_minimization.max matita_arithmetics_nat.O f))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (__ :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __ : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
               __1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (g i) matita_basics_bool.true)) ->
            cic.Term cic.prop
              (matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.max m f)
                 (matita_arithmetics_minimization.max m g))) =>
         ext :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i (matita_arithmetics_nat.S m)) ->
            __1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (g i) matita_basics_bool.true)) =>
         matita_basics_logic.match_Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f m) matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f m) matita_basics_bool.false)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.true)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.false)) =>
            matita_arithmetics_nat.le
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 m
                 (matita_arithmetics_minimization.max' m f
                    matita_arithmetics_nat.O)
                 (f m))
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 m
                 (matita_arithmetics_minimization.max' m g
                    matita_arithmetics_nat.O)
                 (g m)))
           (Heq :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.true) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.true) =>
               matita_arithmetics_nat.le
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    m
                    (matita_arithmetics_minimization.max' m f
                       matita_arithmetics_nat.O)
                    x)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    m
                    (matita_arithmetics_minimization.max' m g
                       matita_arithmetics_nat.O)
                    (g m)))
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (x : cic.Term univs.Type0 matita_basics_bool.bool =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         x matita_basics_bool.true) =>
                  matita_arithmetics_nat.le
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       m
                       (matita_arithmetics_minimization.max' m f
                          matita_arithmetics_nat.O)
                       matita_basics_bool.true)
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       m
                       (matita_arithmetics_minimization.max' m g
                          matita_arithmetics_nat.O)
                       x))
                 (matita_arithmetics_nat.le_n
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       m
                       (matita_arithmetics_minimization.max' m f
                          matita_arithmetics_nat.O)
                       matita_basics_bool.true))
                 (g m)
                 (ext m
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt m
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus m
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt m
                             (matita_arithmetics_nat.S m)))
                       (matita_arithmetics_nat.lt_plus_Sn_r m
                          matita_arithmetics_nat.O matita_arithmetics_nat.O)
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          m
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m
                                       (matita_arithmetics_nat.plus x
                                          (matita_arithmetics_nat.S
                                             matita_arithmetics_nat.O))))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m
                                       (matita_arithmetics_nat.S m))))
                                __))
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S m)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt m x))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt m
                                          (matita_arithmetics_nat.S m))))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift (cic.succ univs.Type0) univs.Type2
                                   (cic.univ univs.Type0))
                                (cic.lift cic.prop univs.Type0
                                   (matita_arithmetics_nat.lt m
                                      (matita_arithmetics_nat.S m))))
                             (matita_arithmetics_nat.plus m
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus m
                                   matita_arithmetics_nat.O)
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.S x)
                                       (matita_arithmetics_nat.plus m
                                          (matita_arithmetics_nat.S
                                             matita_arithmetics_nat.O)))
                                      __))
                                (matita_arithmetics_nat.plus_n_Sm m
                                   matita_arithmetics_nat.O)
                                m (matita_arithmetics_nat.plus_n_O m)))
                          (matita_arithmetics_nat.plus m
                             matita_arithmetics_nat.O)
                          (matita_arithmetics_nat.plus_n_O m)))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              x matita_basics_bool.true)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true)
                       (f m) Heq)))
              (f m) Heq)
           (Heq :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.false) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.false) =>
               matita_arithmetics_nat.le
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    m
                    (matita_arithmetics_minimization.max' m f
                       matita_arithmetics_nat.O)
                    x)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    m
                    (matita_arithmetics_minimization.max' m g
                       matita_arithmetics_nat.O)
                    (g m)))
              (matita_basics_bool.match_bool cic.prop
                 (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.le
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       m
                       (matita_arithmetics_minimization.max' m f
                          matita_arithmetics_nat.O)
                       matita_basics_bool.false)
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       m
                       (matita_arithmetics_minimization.max' m g
                          matita_arithmetics_nat.O)
                       __))
                 (matita_arithmetics_minimization.le_max_n f m)
                 (Hind
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     ltim :
                       cic.Term cic.prop (matita_arithmetics_nat.lt i m) =>
                     ext i
                       (matita_arithmetics_nat.le_S
                          (matita_arithmetics_nat.S i) m ltim)))
                 (g m))
              (f m) Heq)
           (matita_basics_bool.true_or_false (f m)))
        n.

def f_max_true :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.ex matita_arithmetics_nat.nat
             (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
              matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true))) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (f (matita_arithmetics_minimization.max n f))
           matita_basics_bool.true)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_minimization.match_max_spec n f cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         _0 :
           cic.Term cic.prop
             (matita_arithmetics_minimization.max_spec n f __) =>
         cic.prod cic.prop cic.prop
           (matita_basics_logic.ex matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true)))
           (__1 :
              cic.Term cic.prop
                (matita_basics_logic.ex matita_arithmetics_nat.nat
                   (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                    matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f __) matita_basics_bool.true))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         auto : cic.Term cic.prop (matita_arithmetics_nat.lt m n) =>
         auto' :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.true) =>
         auto'' :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt m i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         auto''' :
           cic.Term cic.prop
             (matita_basics_logic.ex matita_arithmetics_nat.nat
                (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                 matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true))) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           matita_basics_bool.true
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  x matita_basics_bool.true)
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true)
           (f m) auto')
        (Hall :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         _clearme :
           cic.Term cic.prop
             (matita_basics_logic.ex matita_arithmetics_nat.nat
                (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                 matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true))) =>
         matita_basics_logic.match_ex matita_arithmetics_nat.nat
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            matita_basics_logic.And (matita_arithmetics_nat.lt i n)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.true))
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.ex matita_arithmetics_nat.nat
                   (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                    matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f matita_arithmetics_nat.O) matita_basics_bool.true)
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            _clearme0 :
              cic.Term cic.prop
                (matita_basics_logic.And (matita_arithmetics_nat.lt x n)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f x) matita_basics_bool.true)) =>
            matita_basics_logic.match_And (matita_arithmetics_nat.lt x n)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f x) matita_basics_bool.true)
              cic.prop
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.And (matita_arithmetics_nat.lt x n)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f x) matita_basics_bool.true)) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f matita_arithmetics_nat.O) matita_basics_bool.true)
              (ltx : cic.Term cic.prop (matita_arithmetics_nat.lt x n) =>
               fx :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f x) matita_basics_bool.true) =>
               matita_basics_logic.False_ind
                 (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f matita_arithmetics_nat.O) matita_basics_bool.true)
                 (matita_basics_logic.absurd
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f x) matita_basics_bool.true)
                    fx
                    (matita_basics_logic.eq_ind_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.false
                       (x0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        __ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_basics_bool.bool)
                               x0 matita_basics_bool.false) =>
                        matita_basics_logic.Not
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             x0 matita_basics_bool.true))
                       (matita_basics_logic.sym_not_eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true matita_basics_bool.false
                          matita_basics_bool.not_eq_true_false)
                       (f x) (Hall x ltx))))
              _clearme0)
           _clearme)
        (matita_arithmetics_minimization.max n f)
        (matita_arithmetics_minimization.max_to_max_spec f n
           (matita_arithmetics_minimization.max n f)
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.max n f))).

def f_false_to_le_max :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.ex matita_arithmetics_nat.nat
             (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
              matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true))) ->
      __1 :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __1 : cic.Term cic.prop (matita_arithmetics_nat.lt p m) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f m) matita_basics_bool.false)) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le (matita_arithmetics_minimization.max n f)
           p)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H1 :
        cic.Term cic.prop
          (matita_basics_logic.ex matita_arithmetics_nat.nat
             (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
              matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true))) =>
      H2 :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.lt p m) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f m) matita_basics_bool.false)) =>
      matita_arithmetics_nat.not_lt_to_le p
        (matita_arithmetics_minimization.max n f)
        (matita_basics_logic.nmk
           (matita_arithmetics_nat.lt p
              (matita_arithmetics_minimization.max n f))
           (H3 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt p
                   (matita_arithmetics_minimization.max n f)) =>
            matita_basics_logic.absurd
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true matita_basics_bool.false)
              (matita_basics_logic.eq_ind
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.max n f))
                 (x_1 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  _x_2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f (matita_arithmetics_minimization.max n f)) x_1) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true x_1)
                 (matita_basics_logic.sym_eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f (matita_arithmetics_minimization.max n f))
                    matita_basics_bool.true
                    (matita_arithmetics_minimization.f_max_true f n H1))
                 matita_basics_bool.false
                 (H2 (matita_arithmetics_minimization.max n f) H3))
              matita_basics_bool.not_eq_true_false)).

def exists_forall_lt :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.Or
           (matita_basics_logic.ex matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true)))
           (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i n)
                 (__ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false))))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.Or
           (matita_basics_logic.ex matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_logic.And (matita_arithmetics_nat.lt i _x_365)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true)))
           (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_nat.lt i _x_365)
                 (__ :
                    cic.Term cic.prop (matita_arithmetics_nat.lt i _x_365) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false))))
        (matita_basics_logic.or_intror
           (matita_basics_logic.ex matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_logic.And
                 (matita_arithmetics_nat.lt i matita_arithmetics_nat.O)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true)))
           (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_nat.lt i matita_arithmetics_nat.O)
                 (__ :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.lt i matita_arithmetics_nat.O) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)))
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            lti0 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i matita_arithmetics_nat.O) =>
            matita_basics_logic.False_ind
              (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)
              (matita_basics_logic.absurd
                 (matita_arithmetics_nat.lt i matita_arithmetics_nat.O) lti0
                 (matita_arithmetics_nat.le_to_not_lt
                    matita_arithmetics_nat.O i
                    (matita_arithmetics_nat.le_O_n i)))))
        (n1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         _clearme :
           cic.Term cic.prop
             (matita_basics_logic.Or
                (matita_basics_logic.ex matita_arithmetics_nat.nat
                   (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                    matita_basics_logic.And (matita_arithmetics_nat.lt i n1)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true)))
                (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                   (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                    cic.prod cic.prop cic.prop
                      (matita_arithmetics_nat.lt i n1)
                      (__ :
                         cic.Term cic.prop (matita_arithmetics_nat.lt i n1) =>
                       matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.false)))) =>
         matita_basics_logic.match_Or
           (matita_basics_logic.ex matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_logic.And (matita_arithmetics_nat.lt i n1)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true)))
           (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i n1)
                 (__ : cic.Term cic.prop (matita_arithmetics_nat.lt i n1) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)))
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or
                   (matita_basics_logic.ex matita_arithmetics_nat.nat
                      (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                       matita_basics_logic.And
                         (matita_arithmetics_nat.lt i n1)
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.true)))
                   (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                      (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                       cic.prod cic.prop cic.prop
                         (matita_arithmetics_nat.lt i n1)
                         (__ :
                            cic.Term cic.prop
                              (matita_arithmetics_nat.lt i n1) =>
                          matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.false)))) =>
            matita_basics_logic.Or
              (matita_basics_logic.ex matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_logic.And
                    (matita_arithmetics_nat.lt i
                       (matita_arithmetics_nat.S n1))
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)))
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_nat.lt i
                       (matita_arithmetics_nat.S n1))
                    (__1 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt i
                            (matita_arithmetics_nat.S n1)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false))))
           (_clearme0 :
              cic.Term cic.prop
                (matita_basics_logic.ex matita_arithmetics_nat.nat
                   (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                    matita_basics_logic.And (matita_arithmetics_nat.lt i n1)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true))) =>
            matita_basics_logic.match_ex matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_logic.And (matita_arithmetics_nat.lt i n1)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true))
              cic.prop
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.ex matita_arithmetics_nat.nat
                      (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                       matita_basics_logic.And
                         (matita_arithmetics_nat.lt i n1)
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.true))) =>
               matita_basics_logic.Or
                 (matita_basics_logic.ex matita_arithmetics_nat.nat
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_logic.And
                       (matita_arithmetics_nat.lt i
                          (matita_arithmetics_nat.S n1))
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f i) matita_basics_bool.true)))
                 (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt i
                          (matita_arithmetics_nat.S n1))
                       (__1 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt i
                               (matita_arithmetics_nat.S n1)) =>
                        matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f i) matita_basics_bool.false))))
              (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               _clearme1 :
                 cic.Term cic.prop
                   (matita_basics_logic.And (matita_arithmetics_nat.lt a n1)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f a) matita_basics_bool.true)) =>
               matita_basics_logic.match_And (matita_arithmetics_nat.lt a n1)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f a) matita_basics_bool.true)
                 cic.prop
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.And
                         (matita_arithmetics_nat.lt a n1)
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f a) matita_basics_bool.true)) =>
                  matita_basics_logic.Or
                    (matita_basics_logic.ex matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_logic.And
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.true)))
                    (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (__1 :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt i
                                  (matita_arithmetics_nat.S n1)) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.false))))
                 (Ha1 : cic.Term cic.prop (matita_arithmetics_nat.lt a n1) =>
                  Ha2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f a) matita_basics_bool.true) =>
                  matita_basics_logic.or_introl
                    (matita_basics_logic.ex matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_logic.And
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.true)))
                    (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt i
                                  (matita_arithmetics_nat.S n1)) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.false)))
                    (matita_basics_logic.ex_intro matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_logic.And
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.true))
                       a
                       (matita_basics_logic.conj
                          (matita_arithmetics_nat.lt a
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f a) matita_basics_bool.true)
                          (matita_arithmetics_nat.le_S
                             (matita_arithmetics_nat.S a) n1 Ha1)
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             matita_basics_bool.true
                             (__ :
                                cic.Term univs.Type0 matita_basics_bool.bool =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_basics_bool.bool =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_basics_bool.bool)
                                    x matita_basics_bool.true)
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                matita_basics_bool.true)
                             (f a) Ha2))))
                 _clearme1)
              _clearme0)
           (H :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __ : cic.Term cic.prop (matita_arithmetics_nat.lt i n1) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)) =>
            matita_basics_logic.match_Or
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f n1) matita_basics_bool.true)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f n1) matita_basics_bool.false)
              cic.prop
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.Or
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f n1) matita_basics_bool.true)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f n1) matita_basics_bool.false)) =>
               matita_basics_logic.Or
                 (matita_basics_logic.ex matita_arithmetics_nat.nat
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_logic.And
                       (matita_arithmetics_nat.lt i
                          (matita_arithmetics_nat.S n1))
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f i) matita_basics_bool.true)))
                 (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt i
                          (matita_arithmetics_nat.S n1))
                       (__1 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt i
                               (matita_arithmetics_nat.S n1)) =>
                        matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f i) matita_basics_bool.false))))
              (HfS :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f n1) matita_basics_bool.true) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (x : cic.Term univs.Type0 matita_basics_bool.bool =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         x matita_basics_bool.true) =>
                  matita_basics_logic.Or
                    (matita_basics_logic.ex matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_logic.And
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.true)))
                    (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (__1 :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt i
                                  (matita_arithmetics_nat.S n1)) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.false))))
                 (matita_basics_logic.or_introl
                    (matita_basics_logic.ex matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_logic.And
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.true)))
                    (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt i
                                  (matita_arithmetics_nat.S n1)) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.false)))
                    (matita_basics_logic.ex_intro matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_logic.And
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.true))
                       n1
                       (matita_basics_logic.conj
                          (matita_arithmetics_nat.lt n1
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f n1) matita_basics_bool.true)
                          (matita_arithmetics_nat.le_n
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             matita_basics_bool.true
                             (__ :
                                cic.Term univs.Type0 matita_basics_bool.bool =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_basics_bool.bool =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_basics_bool.bool)
                                    x matita_basics_bool.true)
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                matita_basics_bool.true)
                             (f n1) HfS))))
                 (f n1) HfS)
              (HfS :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f n1) matita_basics_bool.false) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false
                 (x : cic.Term univs.Type0 matita_basics_bool.bool =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         x matita_basics_bool.false) =>
                  matita_basics_logic.Or
                    (matita_basics_logic.ex matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_logic.And
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.true)))
                    (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (__1 :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt i
                                  (matita_arithmetics_nat.S n1)) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.false))))
                 (matita_basics_logic.or_intror
                    (matita_basics_logic.ex matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_logic.And
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.true)))
                    (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                       (i :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.S n1))
                          (__ :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt i
                                  (matita_arithmetics_nat.S n1)) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.false)))
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     lei :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt i
                            (matita_arithmetics_nat.S n1)) =>
                     matita_basics_logic.match_Or
                       (matita_arithmetics_nat.lt
                          (matita_arithmetics_nat.S i)
                          (matita_arithmetics_nat.S n1))
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S i)
                          (matita_arithmetics_nat.S n1))
                       cic.prop
                       (__ :
                          cic.Term cic.prop
                            (matita_basics_logic.Or
                               (matita_arithmetics_nat.lt
                                  (matita_arithmetics_nat.S i)
                                  (matita_arithmetics_nat.S n1))
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S i)
                                  (matita_arithmetics_nat.S n1))) =>
                        matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f i) matita_basics_bool.false)
                       (Hi :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt
                               (matita_arithmetics_nat.S i)
                               (matita_arithmetics_nat.S n1)) =>
                        H i
                          (matita_arithmetics_nat.le_S_S_to_le
                             (matita_arithmetics_nat.S i) n1 Hi))
                       (Hi :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S i)
                               (matita_arithmetics_nat.S n1)) =>
                        matita_arithmetics_nat.nat_discr
                          (matita_arithmetics_nat.S i)
                          (matita_arithmetics_nat.S n1) Hi
                          (cic.lift cic.prop univs.Type1
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                (f i) matita_basics_bool.false))
                          (e0 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_logic.R0
                                     matita_arithmetics_nat.nat i)
                                  n1) =>
                           matita_basics_logic.eq_ind_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             n1
                             (x :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     x n1) =>
                              cic.prod cic.prop cic.prop
                                (matita_arithmetics_nat.lt x
                                   (matita_arithmetics_nat.S n1))
                                (__1 :
                                   cic.Term cic.prop
                                     (matita_arithmetics_nat.lt x
                                        (matita_arithmetics_nat.S n1)) =>
                                 cic.prod cic.prop cic.prop
                                   (matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S x)
                                      (matita_arithmetics_nat.S n1))
                                   (__2 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S x)
                                           (matita_arithmetics_nat.S n1)) =>
                                    matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_basics_bool.bool)
                                      (f x) matita_basics_bool.false)))
                             (lei0 :
                                cic.Term cic.prop
                                  (matita_arithmetics_nat.lt n1
                                     (matita_arithmetics_nat.S n1)) =>
                              Hi0 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S n1)
                                     (matita_arithmetics_nat.S n1)) =>
                              matita_basics_logic.streicherK
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S n1)
                                (__ :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S n1)
                                        (matita_arithmetics_nat.S n1)) =>
                                 cic.lift cic.prop univs.Type2
                                   ((__1 :
                                       cic.Term cic.prop
                                         (matita_basics_logic.eq
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S n1)
                                            (matita_arithmetics_nat.S n1)) =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_basics_bool.bool)
                                       (f n1) matita_basics_bool.false)
                                      __))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_basics_bool.bool)
                                   matita_basics_bool.false
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_basics_bool.bool =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_basics_bool.bool =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_basics_bool.bool)
                                          x matita_basics_bool.false)
                                         __))
                                   (matita_basics_logic.refl
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_basics_bool.bool)
                                      matita_basics_bool.false)
                                   (f n1) HfS)
                                Hi0)
                             i e0 lei Hi))
                       (matita_arithmetics_nat.le_to_or_lt_eq
                          (matita_arithmetics_nat.S i)
                          (matita_arithmetics_nat.S n1) lei)))
                 (f n1) HfS)
              (matita_basics_bool.true_or_false (f n1)))
           _clearme)
        n.

def exists_max_forall_false :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.Or
           (matita_basics_logic.And
              (matita_basics_logic.ex matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.max n f))
                 matita_basics_bool.true))
           (matita_basics_logic.And
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i n)
                    (__ :
                       cic.Term cic.prop (matita_arithmetics_nat.lt i n) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max n f)
                 matita_arithmetics_nat.O)))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_logic.match_Or
        (matita_basics_logic.ex matita_arithmetics_nat.nat
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            matita_basics_logic.And (matita_arithmetics_nat.lt i n)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.true)))
        (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i n)
              (__ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.Or
                (matita_basics_logic.ex matita_arithmetics_nat.nat
                   (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                    matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true)))
                (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                   (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                    cic.prod cic.prop cic.prop
                      (matita_arithmetics_nat.lt i n)
                      (__ :
                         cic.Term cic.prop (matita_arithmetics_nat.lt i n) =>
                       matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.false)))) =>
         matita_basics_logic.Or
           (matita_basics_logic.And
              (matita_basics_logic.ex matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.max n f))
                 matita_basics_bool.true))
           (matita_basics_logic.And
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i n)
                    (__1 :
                       cic.Term cic.prop (matita_arithmetics_nat.lt i n) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max n f)
                 matita_arithmetics_nat.O)))
        (H :
           cic.Term cic.prop
             (matita_basics_logic.ex matita_arithmetics_nat.nat
                (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                 matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true))) =>
         matita_basics_logic.or_introl
           (matita_basics_logic.And
              (matita_basics_logic.ex matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.max n f))
                 matita_basics_bool.true))
           (matita_basics_logic.And
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i n)
                    (__ :
                       cic.Term cic.prop (matita_arithmetics_nat.lt i n) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max n f)
                 matita_arithmetics_nat.O))
           (matita_basics_logic.conj
              (matita_basics_logic.ex matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.max n f))
                 matita_basics_bool.true)
              H (matita_arithmetics_minimization.f_max_true f n H)))
        (H :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.lt i n) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         matita_basics_logic.or_intror
           (matita_basics_logic.And
              (matita_basics_logic.ex matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_logic.And (matita_arithmetics_nat.lt i n)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.max n f))
                 matita_basics_bool.true))
           (matita_basics_logic.And
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i n)
                    (__ :
                       cic.Term cic.prop (matita_arithmetics_nat.lt i n) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max n f)
                 matita_arithmetics_nat.O))
           (matita_basics_logic.conj
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i n)
                    (__ :
                       cic.Term cic.prop (matita_arithmetics_nat.lt i n) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max n f)
                 matita_arithmetics_nat.O)
              H (matita_arithmetics_minimization.max_not_exists f n H)))
        (matita_arithmetics_minimization.exists_forall_lt f n).

def let_clause_1009 :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      posn :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      Hfn :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f n) matita_basics_bool.false) ->
      Hmax :
        cic.Term cic.prop
          (matita_arithmetics_nat.le
             (matita_arithmetics_minimization.max m f) n) ->
      Hmax0 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_minimization.max m f) n) ->
      _clearme :
        cic.Term cic.prop
          (matita_basics_logic.And
             (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i m)
                   (__ : cic.Term cic.prop (matita_arithmetics_nat.lt i m) =>
                    matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.false)))
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.max m f)
                matita_arithmetics_nat.O)) ->
      auto :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.false)) ->
      auto' :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_minimization.max m f)
             matita_arithmetics_nat.O) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           matita_arithmetics_nat.O n)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      Hfn :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f n) matita_basics_bool.false) =>
      Hmax :
        cic.Term cic.prop
          (matita_arithmetics_nat.le
             (matita_arithmetics_minimization.max m f) n) =>
      Hmax0 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_minimization.max m f) n) =>
      _clearme :
        cic.Term cic.prop
          (matita_basics_logic.And
             (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i m)
                   (__ : cic.Term cic.prop (matita_arithmetics_nat.lt i m) =>
                    matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.false)))
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.max m f)
                matita_arithmetics_nat.O)) =>
      auto :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.false)) =>
      auto' :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_minimization.max m f)
             matita_arithmetics_nat.O) =>
      matita_basics_logic.rewrite_l
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_minimization.max m f)
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.lift cic.prop univs.Type2
           ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
             matita_basics_logic.eq
               (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
               x n)
              __))
        Hmax0 matita_arithmetics_nat.O auto'.

def false_to_lt_max :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f n) matita_basics_bool.false) ->
      __2 :
        cic.Term cic.prop
          (matita_arithmetics_nat.le
             (matita_arithmetics_minimization.max m f) n) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.lt (matita_arithmetics_minimization.max m f)
           n)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      Hfn :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f n) matita_basics_bool.false) =>
      Hmax :
        cic.Term cic.prop
          (matita_arithmetics_nat.le
             (matita_arithmetics_minimization.max m f) n) =>
      matita_basics_logic.match_Or
        (matita_arithmetics_nat.lt (matita_arithmetics_minimization.max m f)
           n)
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.max m f) n)
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.Or
                (matita_arithmetics_nat.lt
                   (matita_arithmetics_minimization.max m f) n)
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_minimization.max m f) n)) =>
         matita_arithmetics_nat.lt (matita_arithmetics_minimization.max m f)
           n)
        (Hmax0 :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt
                (matita_arithmetics_minimization.max m f) n) =>
         Hmax0)
        (Hmax0 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.max m f) n) =>
         matita_basics_logic.match_Or
           (matita_basics_logic.And
              (matita_basics_logic.ex matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_logic.And (matita_arithmetics_nat.lt i m)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.max m f))
                 matita_basics_bool.true))
           (matita_basics_logic.And
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i m)
                    (__ :
                       cic.Term cic.prop (matita_arithmetics_nat.lt i m) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max m f)
                 matita_arithmetics_nat.O))
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or
                   (matita_basics_logic.And
                      (matita_basics_logic.ex matita_arithmetics_nat.nat
                         (i :
                            cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                          matita_basics_logic.And
                            (matita_arithmetics_nat.lt i m)
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_basics_bool.bool)
                               (f i) matita_basics_bool.true)))
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f (matita_arithmetics_minimization.max m f))
                         matita_basics_bool.true))
                   (matita_basics_logic.And
                      (cic.prod univs.Type0 cic.prop
                         matita_arithmetics_nat.nat
                         (i :
                            cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                          cic.prod cic.prop cic.prop
                            (matita_arithmetics_nat.lt i m)
                            (__ :
                               cic.Term cic.prop
                                 (matita_arithmetics_nat.lt i m) =>
                             matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_basics_bool.bool)
                               (f i) matita_basics_bool.false)))
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_minimization.max m f)
                         matita_arithmetics_nat.O))) =>
            matita_arithmetics_nat.lt
              (matita_arithmetics_minimization.max m f) n)
           (_clearme :
              cic.Term cic.prop
                (matita_basics_logic.And
                   (matita_basics_logic.ex matita_arithmetics_nat.nat
                      (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                       matita_basics_logic.And
                         (matita_arithmetics_nat.lt i m)
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.true)))
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f (matita_arithmetics_minimization.max m f))
                      matita_basics_bool.true)) =>
            matita_basics_logic.match_And
              (matita_basics_logic.ex matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_logic.And (matita_arithmetics_nat.lt i m)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.true)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.max m f))
                 matita_basics_bool.true)
              cic.prop
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.And
                      (matita_basics_logic.ex matita_arithmetics_nat.nat
                         (i :
                            cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                          matita_basics_logic.And
                            (matita_arithmetics_nat.lt i m)
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_basics_bool.bool)
                               (f i) matita_basics_bool.true)))
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f (matita_arithmetics_minimization.max m f))
                         matita_basics_bool.true)) =>
               matita_arithmetics_nat.lt
                 (matita_arithmetics_minimization.max m f) n)
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.ex matita_arithmetics_nat.nat
                      (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                       matita_basics_logic.And
                         (matita_arithmetics_nat.lt i m)
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.true))) =>
               Hfmax :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f (matita_arithmetics_minimization.max m f))
                      matita_basics_bool.true) =>
               matita_basics_logic.False_ind
                 (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                  matita_arithmetics_nat.lt
                    (matita_arithmetics_minimization.max m f) n)
                 (matita_basics_logic.absurd
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true matita_basics_bool.false)
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (__1 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              matita_basics_bool.true x)
                             __1))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true)
                       matita_basics_bool.false
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f n)
                          (__1 :
                             cic.Term univs.Type0 matita_basics_bool.bool =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0 matita_basics_bool.bool =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_basics_bool.bool)
                                 x matita_basics_bool.false)
                                __1))
                          Hfn matita_basics_bool.true
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_minimization.max m f)
                             (__1 :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_basics_bool.bool)
                                    (f x) matita_basics_bool.true)
                                   __1))
                             Hfmax n Hmax0)))
                    matita_basics_bool.not_eq_true_false))
              _clearme)
           (_clearme :
              cic.Term cic.prop
                (matita_basics_logic.And
                   (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                      (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                       cic.prod cic.prop cic.prop
                         (matita_arithmetics_nat.lt i m)
                         (__ :
                            cic.Term cic.prop (matita_arithmetics_nat.lt i m) =>
                          matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.false)))
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_minimization.max m f)
                      matita_arithmetics_nat.O)) =>
            matita_basics_logic.match_And
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.lt i m)
                    (__ :
                       cic.Term cic.prop (matita_arithmetics_nat.lt i m) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.max m f)
                 matita_arithmetics_nat.O)
              cic.prop
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.And
                      (cic.prod univs.Type0 cic.prop
                         matita_arithmetics_nat.nat
                         (i :
                            cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                          cic.prod cic.prop cic.prop
                            (matita_arithmetics_nat.lt i m)
                            (__ :
                               cic.Term cic.prop
                                 (matita_arithmetics_nat.lt i m) =>
                             matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_basics_bool.bool)
                               (f i) matita_basics_bool.false)))
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_minimization.max m f)
                         matita_arithmetics_nat.O)) =>
               matita_arithmetics_nat.lt
                 (matita_arithmetics_minimization.max m f) n)
              (auto :
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
                  __ : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
                  cic.Term cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false)) =>
               auto' :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_minimization.max m f)
                      matita_arithmetics_nat.O) =>
               matita_basics_logic.eq_coerc
                 (cic.lift cic.prop univs.Type0
                    (matita_arithmetics_nat.lt matita_arithmetics_nat.O n))
                 (cic.lift cic.prop univs.Type0
                    (matita_arithmetics_nat.lt
                       (matita_arithmetics_minimization.max m f) n))
                 posn
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    n
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift (cic.succ univs.Type0) univs.Type2
                              (cic.univ univs.Type0))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.lt x n))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.lt
                                 (matita_arithmetics_minimization.max m f) n)))
                          __))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       n
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt n n))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt x n)))
                             __))
                       (matita_basics_logic.refl
                          (cic.lift (cic.succ univs.Type0) univs.Type2
                             (cic.univ univs.Type0))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt n n)))
                       (matita_arithmetics_minimization.max m f)
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.O
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 (matita_arithmetics_minimization.max m f) x)
                                __))
                          auto' n
                          (matita_arithmetics_minimization.let_clause_1009 f
                             n m posn Hfn Hmax Hmax0 _clearme auto auto')))
                    matita_arithmetics_nat.O
                    (matita_arithmetics_minimization.let_clause_1009 f n m
                       posn Hfn Hmax Hmax0 _clearme auto auto')))
              _clearme)
           (matita_arithmetics_minimization.exists_max_forall_false f m))
        (matita_arithmetics_nat.le_to_or_lt_eq
           (matita_arithmetics_minimization.max m f) n Hmax).

def min :
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __2 :
        (__2 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat.

def min_body :
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __2 :
        (__2 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat.

[ __ ] min __ -->
  matita_arithmetics_nat.filter_nat univs.Type0
    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     cic.prod univs.Type0 univs.Type0 matita_arithmetics_nat.nat
       (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
        cic.prod univs.Type0 univs.Type0
          (cic.prod univs.Type0 univs.Type0 matita_arithmetics_nat.nat
             (__2 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
              matita_basics_bool.bool))
          (__2 :
             (__2 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
              cic.Term univs.Type0 matita_basics_bool.bool) =>
           matita_arithmetics_nat.nat)))
    matita_arithmetics_minimization.min_body __.

[ __ ] min_body __ -->
  b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
  f :
    (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     cic.Term univs.Type0 matita_basics_bool.bool) =>
  matita_arithmetics_nat.match_nat univs.Type0
    (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     matita_arithmetics_nat.nat)
    b
    (p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     matita_basics_bool.match_bool univs.Type0
       (__1 : cic.Term univs.Type0 matita_basics_bool.bool =>
        matita_arithmetics_nat.nat)
       b
       (matita_arithmetics_minimization.min p (matita_arithmetics_nat.S b) f)
       (f b))
    __.

def min0 :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      matita_arithmetics_minimization.min n matita_arithmetics_nat.O f.

def min_O_f :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min matita_arithmetics_nat.O b f)
           b)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_logic.refl
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_minimization.min matita_arithmetics_nat.O b f).

def true_min :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f b) matita_basics_bool.true) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min n b f) b)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      fb :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f b) matita_basics_bool.true) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min __ b f) b)
        (matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2
                     matita_arithmetics_nat.nat)
                  x b)
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b)
           (matita_arithmetics_minimization.min matita_arithmetics_nat.O b f)
           (matita_arithmetics_minimization.min_O_f f b))
        (n0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           matita_basics_bool.true
           (x : cic.Term univs.Type0 matita_basics_bool.bool =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   x matita_basics_bool.true) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 b
                 (matita_arithmetics_minimization.min n0
                    (matita_arithmetics_nat.S b) f)
                 x)
              b)
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b)
           (f b) fb)
        n.

def false_min :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f b) matita_basics_bool.false) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min (matita_arithmetics_nat.S n)
              b f)
           (matita_arithmetics_minimization.min n
              (matita_arithmetics_nat.S b) f))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      fb :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f b) matita_basics_bool.false) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
        matita_basics_bool.false
        (x : cic.Term univs.Type0 matita_basics_bool.bool =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x
                matita_basics_bool.false) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_basics_bool.match_bool univs.Type0
              (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
               matita_arithmetics_nat.nat)
              b
              (matita_arithmetics_minimization.min n
                 (matita_arithmetics_nat.S b) f)
              x)
           (matita_arithmetics_minimization.min n
              (matita_arithmetics_nat.S b) f))
        (matita_basics_logic.refl
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min n
              (matita_arithmetics_nat.S b) f))
        (f b) fb.

def le_min_r :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le
           (matita_arithmetics_minimization.min n b f)
           (matita_arithmetics_nat.plus n b))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le
              (matita_arithmetics_minimization.min _x_365 b f)
              (matita_arithmetics_nat.plus _x_365 b)))
        (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.eq_coerc
           (cic.lift cic.prop univs.Type0
              (matita_arithmetics_nat.le b
                 (matita_arithmetics_nat.plus b matita_arithmetics_nat.O)))
           (cic.lift cic.prop univs.Type0
              (matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.min
                    matita_arithmetics_nat.O b f)
                 (matita_arithmetics_nat.plus matita_arithmetics_nat.O b)))
           (matita_arithmetics_nat.le_plus_n_r matita_arithmetics_nat.O b)
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                   matita_basics_logic.eq
                     (cic.lift (cic.succ univs.Type0) univs.Type2
                        (cic.univ univs.Type0))
                     (cic.lift cic.prop univs.Type0
                        (matita_arithmetics_nat.le b
                           (matita_arithmetics_nat.plus b
                              matita_arithmetics_nat.O)))
                     (cic.lift cic.prop univs.Type0
                        (matita_arithmetics_nat.le x
                           (matita_arithmetics_nat.plus
                              matita_arithmetics_nat.O b))))
                    __))
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus b matita_arithmetics_nat.O)
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift (cic.succ univs.Type0) univs.Type2
                           (cic.univ univs.Type0))
                        (cic.lift cic.prop univs.Type0
                           (matita_arithmetics_nat.le b
                              (matita_arithmetics_nat.plus b
                                 matita_arithmetics_nat.O)))
                        (cic.lift cic.prop univs.Type0
                           (matita_arithmetics_nat.le b x)))
                       __))
                 (matita_basics_logic.rewrite_l
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    b
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift (cic.succ univs.Type0) univs.Type2
                              (cic.univ univs.Type0))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.le b
                                 (matita_arithmetics_nat.plus b
                                    matita_arithmetics_nat.O)))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.le b x)))
                          __))
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       b
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le b x))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le b b)))
                             __))
                       (matita_basics_logic.refl
                          (cic.lift (cic.succ univs.Type0) univs.Type2
                             (cic.univ univs.Type0))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.le b b)))
                       (matita_arithmetics_nat.plus b
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.plus_n_O b))
                    (matita_arithmetics_nat.plus b matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.plus_n_O b))
                 (matita_arithmetics_nat.plus matita_arithmetics_nat.O b)
                 (matita_arithmetics_nat.commutative_plus
                    matita_arithmetics_nat.O b))
              (matita_arithmetics_minimization.min matita_arithmetics_nat.O b
                 f)
              (matita_arithmetics_minimization.min_O_f f b)))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            cic.Term cic.prop
              (matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.min m b f)
                 (matita_arithmetics_nat.plus m b))) =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_arithmetics_nat.le
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 b
                 (matita_arithmetics_minimization.min m
                    (matita_arithmetics_nat.S b) f)
                 __)
              (matita_arithmetics_nat.S (matita_arithmetics_nat.plus m b)))
           (matita_basics_logic.eq_coerc
              (cic.lift cic.prop univs.Type0
                 (matita_arithmetics_nat.le
                    (matita_arithmetics_nat.minus
                       (matita_arithmetics_nat.plus m
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (matita_arithmetics_nat.plus m
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (matita_arithmetics_nat.plus m
                       (matita_arithmetics_nat.plus b
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
              (cic.lift cic.prop univs.Type0
                 (matita_arithmetics_nat.le b
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus m b))))
              (matita_arithmetics_nat.minus_le
                 (matita_arithmetics_nat.plus m
                    (matita_arithmetics_nat.plus b
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (matita_arithmetics_nat.plus m
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus
                    (matita_arithmetics_nat.plus m b) m)
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift (cic.succ univs.Type0) univs.Type2
                           (cic.univ univs.Type0))
                        (cic.lift cic.prop univs.Type0
                           (matita_arithmetics_nat.le x
                              (matita_arithmetics_nat.plus m
                                 (matita_arithmetics_nat.plus b
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O)))))
                        (cic.lift cic.prop univs.Type0
                           (matita_arithmetics_nat.le b
                              (matita_arithmetics_nat.S
                                 (matita_arithmetics_nat.plus m b)))))
                       __))
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus m
                       (matita_arithmetics_nat.S b))
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift (cic.succ univs.Type0) univs.Type2
                              (cic.univ univs.Type0))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.le
                                 (matita_arithmetics_nat.minus
                                    (matita_arithmetics_nat.plus m b) m)
                                 (matita_arithmetics_nat.plus m
                                    (matita_arithmetics_nat.plus b
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)))))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.le b x)))
                          __))
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       b
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le x
                                    (matita_arithmetics_nat.plus m
                                       (matita_arithmetics_nat.plus b
                                          (matita_arithmetics_nat.S
                                             matita_arithmetics_nat.O)))))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le b
                                    (matita_arithmetics_nat.plus m
                                       (matita_arithmetics_nat.S b)))))
                             __))
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S b)
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.le b
                                       (matita_arithmetics_nat.plus m x)))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.le b
                                       (matita_arithmetics_nat.plus m
                                          (matita_arithmetics_nat.S b)))))
                                __))
                          (matita_basics_logic.refl
                             (cic.lift (cic.succ univs.Type0) univs.Type2
                                (cic.univ univs.Type0))
                             (cic.lift cic.prop univs.Type0
                                (matita_arithmetics_nat.le b
                                   (matita_arithmetics_nat.plus m
                                      (matita_arithmetics_nat.S b)))))
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus b
                                matita_arithmetics_nat.O)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    (matita_arithmetics_nat.S x)
                                    (matita_arithmetics_nat.plus b
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)))
                                   __))
                             (matita_arithmetics_nat.plus_n_Sm b
                                matita_arithmetics_nat.O)
                             b (matita_arithmetics_nat.plus_n_O b)))
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.plus m b) m)
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus b m)
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 b (matita_arithmetics_nat.minus x m))
                                __))
                          (matita_arithmetics_nat.minus_plus_m_m b m)
                          (matita_arithmetics_nat.plus m b)
                          (matita_arithmetics_nat.commutative_plus b m)))
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus m b))
                    (matita_arithmetics_nat.plus_n_Sm m b))
                 (matita_arithmetics_nat.minus
                    (matita_arithmetics_nat.plus m
                       (matita_arithmetics_nat.plus b
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (matita_arithmetics_nat.plus m
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (matita_arithmetics_nat.plus_minus_plus_plus_l m b m
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
           (matita_basics_logic.eq_coerc
              (cic.lift cic.prop univs.Type0
                 (matita_arithmetics_nat.le
                    (matita_arithmetics_minimization.min m
                       (matita_arithmetics_nat.S b) f)
                    (matita_arithmetics_nat.plus m
                       (matita_arithmetics_nat.S b))))
              (cic.lift cic.prop univs.Type0
                 (matita_arithmetics_nat.le
                    (matita_arithmetics_minimization.min m
                       (matita_arithmetics_nat.S b) f)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus m b))))
              (Hind (matita_arithmetics_nat.S b))
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus m (matita_arithmetics_nat.S b))
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift (cic.succ univs.Type0) univs.Type2
                           (cic.univ univs.Type0))
                        (cic.lift cic.prop univs.Type0
                           (matita_arithmetics_nat.le
                              (matita_arithmetics_minimization.min m
                                 (matita_arithmetics_nat.S b) f)
                              (matita_arithmetics_nat.plus m
                                 (matita_arithmetics_nat.S b))))
                        (cic.lift cic.prop univs.Type0
                           (matita_arithmetics_nat.le
                              (matita_arithmetics_minimization.min m
                                 (matita_arithmetics_nat.S b) f)
                              x)))
                       __))
                 (matita_basics_logic.refl
                    (cic.lift (cic.succ univs.Type0) univs.Type2
                       (cic.univ univs.Type0))
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.le
                          (matita_arithmetics_minimization.min m
                             (matita_arithmetics_nat.S b) f)
                          (matita_arithmetics_nat.plus m
                             (matita_arithmetics_nat.S b)))))
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.plus m b))
                 (matita_arithmetics_nat.plus_n_Sm m b)))
           (f b))
        n.

def le_min_l :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le b
           (matita_arithmetics_minimization.min n b f))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le b
              (matita_arithmetics_minimization.min _x_365 b f)))
        (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.le_n b)
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            cic.Term cic.prop
              (matita_arithmetics_nat.le b
                 (matita_arithmetics_minimization.min m b f))) =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_arithmetics_nat.le b
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 b
                 (matita_arithmetics_minimization.min m
                    (matita_arithmetics_nat.S b) f)
                 __))
           (matita_arithmetics_nat.le_n b)
           (matita_arithmetics_nat.lt_to_le b
              (matita_arithmetics_minimization.min m
                 (matita_arithmetics_nat.S b) f)
              (Hind (matita_arithmetics_nat.S b)))
           (f b))
        n.

def le_to_le_min :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_nat.le n m) ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le
           (matita_arithmetics_minimization.min n b f)
           (matita_arithmetics_minimization.min m b f))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      matita_arithmetics_nat.nat_elim2
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         _0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod cic.prop cic.prop (matita_arithmetics_nat.le __ _0)
           (__1 : cic.Term cic.prop (matita_arithmetics_nat.le __ _0) =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.min __ b f)
                 (matita_arithmetics_minimization.min _0 b f))))
        (n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         auto :
           cic.Term cic.prop
             (matita_arithmetics_nat.le matita_arithmetics_nat.O n) =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_minimization.le_min_l f n
           (matita_arithmetics_minimization.min matita_arithmetics_nat.O b f))
        (n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         leSO :
           cic.Term cic.prop
             (matita_arithmetics_nat.le (matita_arithmetics_nat.S n)
                matita_arithmetics_nat.O) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.min
                    (matita_arithmetics_nat.S n) b f)
                 (matita_arithmetics_minimization.min
                    matita_arithmetics_nat.O b f)))
           (matita_basics_logic.absurd
              (matita_arithmetics_nat.le (matita_arithmetics_nat.S n)
                 matita_arithmetics_nat.O)
              leSO (matita_arithmetics_nat.not_le_Sn_O n)))
        (n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (__ : cic.Term cic.prop (matita_arithmetics_nat.le n m) ->
            b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            cic.Term cic.prop
              (matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.min n b f)
                 (matita_arithmetics_minimization.min m b f))) =>
         leSS :
           cic.Term cic.prop
             (matita_arithmetics_nat.le (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.S m)) =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.match_Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f b) matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f b) matita_basics_bool.false)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.true)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.false)) =>
            matita_arithmetics_nat.le
              (matita_arithmetics_minimization.min
                 (matita_arithmetics_nat.S n) b f)
              (matita_arithmetics_minimization.min
                 (matita_arithmetics_nat.S m) b f))
           (fb :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f b) matita_basics_bool.true) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x b) =>
               matita_arithmetics_nat.le x
                 (matita_arithmetics_minimization.min
                    (matita_arithmetics_nat.S m) b f))
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 b
                 (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         x b) =>
                  matita_arithmetics_nat.le b x)
                 (matita_arithmetics_nat.le_n b)
                 (matita_arithmetics_minimization.min
                    (matita_arithmetics_nat.S m) b f)
                 (matita_arithmetics_minimization.true_min f b fb
                    (matita_arithmetics_nat.S m)))
              (matita_arithmetics_minimization.min
                 (matita_arithmetics_nat.S n) b f)
              (matita_arithmetics_minimization.true_min f b fb
                 (matita_arithmetics_nat.S n)))
           (fb :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f b) matita_basics_bool.false) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.min n
                 (matita_arithmetics_nat.S b) f)
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_minimization.min n
                         (matita_arithmetics_nat.S b) f)) =>
               matita_arithmetics_nat.le x
                 (matita_arithmetics_minimization.min
                    (matita_arithmetics_nat.S m) b f))
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.min m
                    (matita_arithmetics_nat.S b) f)
                 (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_minimization.min m
                            (matita_arithmetics_nat.S b) f)) =>
                  matita_arithmetics_nat.le
                    (matita_arithmetics_minimization.min n
                       (matita_arithmetics_nat.S b) f)
                    x)
                 (Hind
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.le
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S m))))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.le n m))
                       (matita_arithmetics_nat.monotonic_pred
                          (matita_arithmetics_nat.S n)
                          (matita_arithmetics_nat.S m) leSS)
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          n
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.le x
                                       (matita_arithmetics_nat.pred
                                          (matita_arithmetics_nat.S m))))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.le n m)))
                                __))
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             m
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.le n x))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.le n m)))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift (cic.succ univs.Type0) univs.Type2
                                   (cic.univ univs.Type0))
                                (cic.lift cic.prop univs.Type0
                                   (matita_arithmetics_nat.le n m)))
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S m))
                             (matita_arithmetics_nat.pred_Sn m))
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n))
                          (matita_arithmetics_nat.pred_Sn n)))
                    (matita_arithmetics_nat.S b))
                 (matita_arithmetics_minimization.min
                    (matita_arithmetics_nat.S m) b f)
                 (matita_arithmetics_minimization.false_min f m b
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.false
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              x matita_basics_bool.false)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.false)
                       (f b) fb)))
              (matita_arithmetics_minimization.min
                 (matita_arithmetics_nat.S n) b f)
              (matita_arithmetics_minimization.false_min f n b
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.false
                    (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                     cic.lift cic.prop univs.Type2
                       ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_basics_bool.bool)
                           x matita_basics_bool.false)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.false)
                    (f b) fb)))
           (matita_basics_bool.true_or_false (f b))).

def true_to_le_min :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_nat.le b m) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.true) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le
           (matita_arithmetics_minimization.min n b f) m)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop (matita_arithmetics_nat.le b m)
                 (__ : cic.Term cic.prop (matita_arithmetics_nat.le b m) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f m) matita_basics_bool.true)
                    (__1 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f m) matita_basics_bool.true) =>
                     matita_arithmetics_nat.le
                       (matita_arithmetics_minimization.min _x_365 b f) m)))))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         auto : cic.Term cic.prop (matita_arithmetics_nat.le b m) =>
         auto' :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.true) =>
         auto)
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b m) ->
            __1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.true) ->
            cic.Term cic.prop
              (matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.min i b f) m)) =>
         m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         leb : cic.Term cic.prop (matita_arithmetics_nat.le b m) =>
         matita_basics_logic.match_Or (matita_arithmetics_nat.lt b m)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
              m)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or (matita_arithmetics_nat.lt b m)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      b m)) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f m) matita_basics_bool.true)
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f m) matita_basics_bool.true) =>
               matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.min
                    (matita_arithmetics_nat.S i) b f)
                 m))
           (ltm : cic.Term cic.prop (matita_arithmetics_nat.lt b m) =>
            fm :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.true) =>
            matita_basics_bool.match_bool cic.prop
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               matita_arithmetics_nat.le
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    b
                    (matita_arithmetics_minimization.min i
                       (matita_arithmetics_nat.S b) f)
                    __)
                 m)
              leb
              (Hind m (matita_arithmetics_nat.S b) ltm
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true
                    (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                     cic.lift cic.prop univs.Type2
                       ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_basics_bool.bool)
                           x matita_basics_bool.true)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true)
                    (f m) fm))
              (f b))
           (eqm :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   b m) =>
            matita_basics_logic.eq_ind
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
              (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               _x_2 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      b x_1) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f x_1) matita_basics_bool.true)
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f x_1) matita_basics_bool.true) =>
                  matita_arithmetics_nat.le
                    (matita_arithmetics_minimization.min
                       (matita_arithmetics_nat.S i) b f)
                    x_1))
              (eqb :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.true) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (x : cic.Term univs.Type0 matita_basics_bool.bool =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         x matita_basics_bool.true) =>
                  matita_arithmetics_nat.le
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       b
                       (matita_arithmetics_minimization.min i
                          (matita_arithmetics_nat.S b) f)
                       x)
                    b)
                 (matita_arithmetics_nat.le_n b) (f b) eqb)
              m eqm)
           (matita_arithmetics_nat.le_to_or_lt_eq b m leb))
        n.

def lt_min_to_false :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_nat.le b m) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt m
             (matita_arithmetics_minimization.min n b f)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         f m) matita_basics_bool.false)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      lebm : cic.Term cic.prop (matita_arithmetics_nat.le b m) =>
      ltm :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt m
             (matita_arithmetics_minimization.min n b f)) =>
      matita_basics_logic.match_Or
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         f m) matita_basics_bool.true)
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         f m) matita_basics_bool.false)
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.Or
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.true)
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f m) matita_basics_bool.false)) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         f m) matita_basics_bool.false)
        (fm :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.true) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f m) matita_basics_bool.false)
           (matita_basics_logic.absurd
              (matita_arithmetics_nat.lt m
                 (matita_arithmetics_minimization.min n b f))
              ltm
              (matita_arithmetics_nat.le_to_not_lt
                 (matita_arithmetics_minimization.min n b f) m
                 (matita_arithmetics_minimization.true_to_le_min f n m b lebm
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              x matita_basics_bool.true)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true)
                       (f m) fm)))))
        (auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.false) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           matita_basics_bool.false
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  x matita_basics_bool.false)
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false)
           (f m) auto)
        (matita_basics_bool.true_or_false (f m)).

def fmin_true :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
             (matita_arithmetics_minimization.min n b f)) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt m (matita_arithmetics_nat.plus n b)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         f m) matita_basics_bool.true)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m (matita_arithmetics_minimization.min _x_365 b f))
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         m (matita_arithmetics_minimization.min _x_365 b f)) =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_nat.lt m
                       (matita_arithmetics_nat.plus _x_365 b))
                    (__1 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt m
                            (matita_arithmetics_nat.plus _x_365 b)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f m) matita_basics_bool.true)))))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         eqmb :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                m b) =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   x b) =>
            cic.prod cic.prop cic.prop
              (matita_arithmetics_nat.le (matita_arithmetics_nat.S x) b)
              (__1 :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.S x) b) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f x) matita_basics_bool.true))
           (leSb :
              cic.Term cic.prop
                (matita_arithmetics_nat.le (matita_arithmetics_nat.S b) b) =>
            matita_basics_logic.False_ind
              (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f b) matita_basics_bool.true)
              (matita_basics_logic.absurd
                 (matita_arithmetics_nat.le (matita_arithmetics_nat.S b) b)
                 leSb (matita_arithmetics_nat.not_le_Sn_n b)))
           m eqmb)
        (n0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   m (matita_arithmetics_minimization.min n0 b f)) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt m
                   (matita_arithmetics_nat.plus n0 b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f m) matita_basics_bool.true)) =>
         m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.match_Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f b) matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f b) matita_basics_bool.false)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.true)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.false)) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 m
                 (matita_arithmetics_minimization.min
                    (matita_arithmetics_nat.S n0) b f))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      m
                      (matita_arithmetics_minimization.min
                         (matita_arithmetics_nat.S n0) b f)) =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_nat.lt m
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.S n0) b))
                 (__2 :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.lt m
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.S n0) b)) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f m) matita_basics_bool.true)))
           (caseb :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f b) matita_basics_bool.true) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x b) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m x)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         m x) =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_nat.lt m
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.S n0) b))
                    (__2 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt m
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.S n0) b)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f m) matita_basics_bool.true)))
              (auto :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      m b) =>
               auto' :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt m
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.S n0) b)) =>
               matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_basics_bool.bool)
                        x matita_basics_bool.true)
                       __))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true)
                 (f m)
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    b
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_basics_bool.bool)
                           (f x) matita_basics_bool.true)
                          __))
                    caseb m auto))
              (matita_arithmetics_minimization.min
                 (matita_arithmetics_nat.S n0) b f)
              (matita_arithmetics_minimization.true_min f b
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true
                    (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                     cic.lift cic.prop univs.Type2
                       ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_basics_bool.bool)
                           x matita_basics_bool.true)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true)
                    (f b) caseb)
                 (matita_arithmetics_nat.S n0)))
           (caseb :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f b) matita_basics_bool.false) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.min n0
                 (matita_arithmetics_nat.S b) f)
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_minimization.min n0
                         (matita_arithmetics_nat.S b) f)) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m x)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         m x) =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_nat.lt m
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.S n0) b))
                    (__2 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt m
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.S n0) b)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f m) matita_basics_bool.true)))
              (eqm :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      m
                      (matita_arithmetics_minimization.min n0
                         (matita_arithmetics_nat.S b) f)) =>
               ltm :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt m
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.S n0) b)) =>
               Hind m (matita_arithmetics_nat.S b)
                 (matita_basics_logic.rewrite_l
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           m x)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m)
                    (matita_arithmetics_minimization.min n0
                       (matita_arithmetics_nat.S b) f)
                    eqm)
                 (matita_basics_logic.eq_coerc
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt m
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S n0) b)))
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt m
                          (matita_arithmetics_nat.plus n0
                             (matita_arithmetics_nat.S b))))
                    ltm
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus b
                          (matita_arithmetics_nat.S n0))
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt m x))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt m
                                    (matita_arithmetics_nat.plus n0
                                       (matita_arithmetics_nat.S b)))))
                             __))
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus n0
                             (matita_arithmetics_nat.S b))
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m x))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m
                                       (matita_arithmetics_nat.plus n0
                                          (matita_arithmetics_nat.S b)))))
                                __))
                          (matita_basics_logic.refl
                             (cic.lift (cic.succ univs.Type0) univs.Type2
                                (cic.univ univs.Type0))
                             (cic.lift cic.prop univs.Type0
                                (matita_arithmetics_nat.lt m
                                   (matita_arithmetics_nat.plus n0
                                      (matita_arithmetics_nat.S b)))))
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.S n0))
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.plus b n0))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    x
                                    (matita_arithmetics_nat.plus n0
                                       (matita_arithmetics_nat.S b)))
                                   __))
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus n0 b)
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.S x)
                                       (matita_arithmetics_nat.plus n0
                                          (matita_arithmetics_nat.S b)))
                                      __))
                                (matita_arithmetics_nat.plus_n_Sm n0 b)
                                (matita_arithmetics_nat.plus b n0)
                                (matita_arithmetics_nat.commutative_plus n0 b))
                             (matita_arithmetics_nat.plus b
                                (matita_arithmetics_nat.S n0))
                             (matita_arithmetics_nat.plus_n_Sm b n0)))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.S n0) b)
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.S n0) b))))
              (matita_arithmetics_minimization.min
                 (matita_arithmetics_nat.S n0) b f)
              (matita_arithmetics_minimization.false_min f n0 b
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.false
                    (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                     cic.lift cic.prop univs.Type2
                       ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_basics_bool.bool)
                           x matita_basics_bool.false)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.false)
                    (f b) caseb)))
           (matita_basics_bool.true_or_false (f b)))
        n.

def min_exists :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      t : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_nat.lt m t) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.true) ->
      k : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __2 : cic.Term cic.prop (matita_arithmetics_nat.le b m) ->
      __3 :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __3 : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
         __4 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.false)) ->
      __4 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) t
             (matita_arithmetics_nat.plus k b)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min k b f) m)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      t : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      ltmt : cic.Term cic.prop (matita_arithmetics_nat.lt m t) =>
      fm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f m) matita_basics_bool.true) =>
      k : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop (matita_arithmetics_nat.le b m)
              (__ : cic.Term cic.prop (matita_arithmetics_nat.le b m) =>
               cic.prod cic.prop cic.prop
                 (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.le b i)
                       (__1 :
                          cic.Term cic.prop (matita_arithmetics_nat.le b i) =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt i m)
                          (__2 :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt i m) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.false))))
                 (__1 :
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
                     __1 :
                       cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
                     __2 :
                       cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
                     cic.Term cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f i) matita_basics_bool.false)) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       t (matita_arithmetics_nat.plus _x_365 b))
                    (__2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            t (matita_arithmetics_nat.plus _x_365 b)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_minimization.min _x_365 b f) m)))))
        (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         lebm : cic.Term cic.prop (matita_arithmetics_nat.le b m) =>
         ismin :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         eqtb :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                t (matita_arithmetics_nat.plus matita_arithmetics_nat.O b)) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.min matita_arithmetics_nat.O b
                 f)
              m)
           (matita_basics_logic.absurd (matita_arithmetics_nat.le b m) lebm
              (matita_basics_logic.eq_ind
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 t
                 (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         t x_1) =>
                  matita_basics_logic.Not (matita_arithmetics_nat.le b m))
                 (matita_arithmetics_nat.lt_to_not_le m b
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt m t))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt m b))
                       ltmt
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          t
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m t))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt m x)))
                                __))
                          (matita_basics_logic.refl
                             (cic.lift (cic.succ univs.Type0) univs.Type2
                                (cic.univ univs.Type0))
                             (cic.lift cic.prop univs.Type0
                                (matita_arithmetics_nat.lt m t)))
                          b
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus b
                                matita_arithmetics_nat.O)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    t x)
                                   __))
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   matita_arithmetics_nat.O b)
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       t x)
                                      __))
                                eqtb
                                (matita_arithmetics_nat.plus b
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.commutative_plus
                                   matita_arithmetics_nat.O b))
                             b (matita_arithmetics_nat.plus_n_O b)))))
                 (matita_arithmetics_nat.plus matita_arithmetics_nat.O b)
                 eqtb)))
        (d : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b m) ->
            __1 :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __1 : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
               __2 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)) ->
            __2 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   t (matita_arithmetics_nat.plus d b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.min d b f) m)) =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         lebm : cic.Term cic.prop (matita_arithmetics_nat.le b m) =>
         ismin :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         eqt :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                t
                (matita_arithmetics_nat.plus (matita_arithmetics_nat.S d) b)) =>
         matita_basics_logic.match_Or (matita_arithmetics_nat.lt b m)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
              m)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or (matita_arithmetics_nat.lt b m)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      b m)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.min
                 (matita_arithmetics_nat.S d) b f)
              m)
           (ltbm : cic.Term cic.prop (matita_arithmetics_nat.lt b m) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.min d
                 (matita_arithmetics_nat.S b) f)
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_minimization.min d
                         (matita_arithmetics_nat.S b) f)) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 x m)
              (Hind (matita_arithmetics_nat.S b) ltbm
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  H :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.le (matita_arithmetics_nat.S b)
                         i) =>
                  H1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) =>
                  ismin i (matita_arithmetics_nat.lt_to_le b i H) H1)
                 (matita_basics_logic.eq_ind_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus (matita_arithmetics_nat.S d)
                       b)
                    (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.S d) b)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.plus d
                          (matita_arithmetics_nat.S b)))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus d
                          (matita_arithmetics_nat.S b))
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              x
                              (matita_arithmetics_nat.plus d
                                 (matita_arithmetics_nat.S b)))
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus d
                             (matita_arithmetics_nat.S b)))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.plus d b))
                       (matita_arithmetics_nat.plus_n_Sm d b))
                    t eqt))
              (matita_arithmetics_minimization.min
                 (matita_arithmetics_nat.S d) b f)
              (matita_arithmetics_minimization.false_min f d b
                 (ismin b (matita_arithmetics_nat.le_n b) ltbm)))
           (eqbm :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   b m) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x b) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 x m)
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 m
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        x m)
                       __))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m)
                 b eqbm)
              (matita_arithmetics_minimization.min
                 (matita_arithmetics_nat.S d) b f)
              (matita_arithmetics_minimization.true_min f b
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_basics_bool.bool)
                           (f x) matita_basics_bool.true)
                          __))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              x matita_basics_bool.true)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true)
                       (f m) fm)
                    b eqbm)
                 (matita_arithmetics_nat.S d)))
           (matita_arithmetics_nat.le_to_or_lt_eq b m lebm))
        k.

def min_not_exists :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
         __1 :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt i (matita_arithmetics_nat.plus n b)) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.false)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min n b f)
           (matita_arithmetics_nat.plus n b))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.le b i)
                    (__ :
                       cic.Term cic.prop (matita_arithmetics_nat.le b i) =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt i
                          (matita_arithmetics_nat.plus _x_365 b))
                       (__1 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt i
                               (matita_arithmetics_nat.plus _x_365 b)) =>
                        matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f i) matita_basics_bool.false))))
              (__ :
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
                  __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
                  __1 :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus _x_365 b)) ->
                  cic.Term cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) matita_basics_bool.false)) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.min _x_365 b f)
                 (matita_arithmetics_nat.plus _x_365 b))))
        (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         auto :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus matita_arithmetics_nat.O b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2
                     matita_arithmetics_nat.nat)
                  x (matita_arithmetics_nat.plus matita_arithmetics_nat.O b))
                 __))
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus b matita_arithmetics_nat.O)
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_arithmetics_nat.nat)
                     b x)
                    __))
              (matita_basics_logic.rewrite_l
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 b
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        b x)
                       __))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    b)
                 (matita_arithmetics_nat.plus b matita_arithmetics_nat.O)
                 (matita_arithmetics_nat.plus_n_O b))
              (matita_arithmetics_nat.plus matita_arithmetics_nat.O b)
              (matita_arithmetics_nat.commutative_plus
                 matita_arithmetics_nat.O b))
           (matita_arithmetics_minimization.min matita_arithmetics_nat.O b f)
           (matita_arithmetics_minimization.min_O_f f b))
        (p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
               __1 :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus p b)) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.min p b f)
                 (matita_arithmetics_nat.plus p b))) =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         ffalse :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.S p)
                      b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min p
              (matita_arithmetics_nat.S b) f)
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_minimization.min p
                      (matita_arithmetics_nat.S b) f)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) x
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.S p) b))
           (matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus p (matita_arithmetics_nat.S b))
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.plus p
                         (matita_arithmetics_nat.S b))) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 x
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.S p) b))
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus b (matita_arithmetics_nat.S p))
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        (matita_arithmetics_nat.plus p
                           (matita_arithmetics_nat.S b))
                        x)
                       __))
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus b
                       (matita_arithmetics_nat.S p))
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           x
                           (matita_arithmetics_nat.plus b
                              (matita_arithmetics_nat.S p)))
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus b
                          (matita_arithmetics_nat.S p)))
                    (matita_arithmetics_nat.plus p
                       (matita_arithmetics_nat.S b))
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.plus p b))
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              x
                              (matita_arithmetics_nat.plus b
                                 (matita_arithmetics_nat.S p)))
                             __))
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus b p)
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 (matita_arithmetics_nat.S x)
                                 (matita_arithmetics_nat.plus b
                                    (matita_arithmetics_nat.S p)))
                                __))
                          (matita_arithmetics_nat.plus_n_Sm b p)
                          (matita_arithmetics_nat.plus p b)
                          (matita_arithmetics_nat.commutative_plus b p))
                       (matita_arithmetics_nat.plus p
                          (matita_arithmetics_nat.S b))
                       (matita_arithmetics_nat.plus_n_Sm p b)))
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.S p) b)
                 (matita_arithmetics_nat.commutative_plus
                    (matita_arithmetics_nat.S p) b))
              (matita_arithmetics_minimization.min p
                 (matita_arithmetics_nat.S b) f)
              (Hind (matita_arithmetics_nat.S b)
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  H :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.le (matita_arithmetics_nat.S b)
                         i) =>
                  H1 :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus p
                            (matita_arithmetics_nat.S b))) =>
                  ffalse i (matita_arithmetics_nat.lt_to_le b i H)
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.plus p
                                (matita_arithmetics_nat.S b))))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S p) b)))
                       H1
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.S p))
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt i
                                       (matita_arithmetics_nat.plus p
                                          (matita_arithmetics_nat.S b))))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt i x)))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus b
                                (matita_arithmetics_nat.S p))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt i x))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt i
                                          (matita_arithmetics_nat.plus b
                                             (matita_arithmetics_nat.S p)))))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift (cic.succ univs.Type0) univs.Type2
                                   (cic.univ univs.Type0))
                                (cic.lift cic.prop univs.Type0
                                   (matita_arithmetics_nat.lt i
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.S p)))))
                             (matita_arithmetics_nat.plus p
                                (matita_arithmetics_nat.S b))
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.plus p b))
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       x
                                       (matita_arithmetics_nat.plus b
                                          (matita_arithmetics_nat.S p)))
                                      __))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus b p)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.S x)
                                          (matita_arithmetics_nat.plus b
                                             (matita_arithmetics_nat.S p)))
                                         __))
                                   (matita_arithmetics_nat.plus_n_Sm b p)
                                   (matita_arithmetics_nat.plus p b)
                                   (matita_arithmetics_nat.commutative_plus b
                                      p))
                                (matita_arithmetics_nat.plus p
                                   (matita_arithmetics_nat.S b))
                                (matita_arithmetics_nat.plus_n_Sm p b)))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S p) b)
                          (matita_arithmetics_nat.commutative_plus
                             (matita_arithmetics_nat.S p) b))))))
           (matita_arithmetics_minimization.min (matita_arithmetics_nat.S p)
              b f)
           (matita_arithmetics_minimization.false_min f p b
              (ffalse b (matita_arithmetics_nat.le_n b)
                 (matita_basics_logic.eq_coerc
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt b
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus b
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.S p))))
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.lt b
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S p) b)))
                    (matita_arithmetics_nat.lt_plus_Sn_r b
                       matita_arithmetics_nat.O p)
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus b
                          (matita_arithmetics_nat.plus
                             matita_arithmetics_nat.O
                             (matita_arithmetics_nat.S p)))
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt b x))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt b
                                    (matita_arithmetics_nat.plus
                                       (matita_arithmetics_nat.S p) b))))
                             __))
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.S p))
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt b
                                       (matita_arithmetics_nat.plus b
                                          (matita_arithmetics_nat.plus
                                             matita_arithmetics_nat.O
                                             (matita_arithmetics_nat.S p)))))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt b x)))
                                __))
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S p)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt b
                                          (matita_arithmetics_nat.plus b x)))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt b
                                          (matita_arithmetics_nat.plus b
                                             (matita_arithmetics_nat.S p)))))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift (cic.succ univs.Type0) univs.Type2
                                   (cic.univ univs.Type0))
                                (cic.lift cic.prop univs.Type0
                                   (matita_arithmetics_nat.lt b
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.S p)))))
                             (matita_arithmetics_nat.plus
                                matita_arithmetics_nat.O
                                (matita_arithmetics_nat.S p))
                             (matita_arithmetics_nat.plus_O_n
                                (matita_arithmetics_nat.S p)))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S p) b)
                          (matita_arithmetics_nat.commutative_plus
                             (matita_arithmetics_nat.S p) b))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.plus b
                             matita_arithmetics_nat.O)
                          (matita_arithmetics_nat.S p))
                       (matita_arithmetics_nat.associative_plus b
                          matita_arithmetics_nat.O
                          (matita_arithmetics_nat.S p)))))))
        n.

def let_m :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_minimization.min n b f.

def let_m1 :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      _x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_minimization.min _x_365 b f.

def let_m2 :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_minimization.min i b f.

def let_clause_1012 :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      Hind :
        (b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term cic.prop
           (cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.let_m2 f n i b))
                 matita_basics_bool.false)
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f (matita_arithmetics_minimization.let_m2 f n i b))
                      matita_basics_bool.false) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.let_m2 f n i b)
                 (matita_arithmetics_nat.plus i b)))) ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      fb :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f b) matita_basics_bool.true) ->
      eqm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f b) matita_basics_bool.false) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           matita_basics_bool.false matita_basics_bool.true)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      Hind :
        (b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term cic.prop
           (cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.let_m2 f n i b))
                 matita_basics_bool.false)
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f (matita_arithmetics_minimization.let_m2 f n i b))
                      matita_basics_bool.false) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.let_m2 f n i b)
                 (matita_arithmetics_nat.plus i b)))) =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      fb :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f b) matita_basics_bool.true) =>
      eqm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
           f b) matita_basics_bool.false) =>
      matita_basics_logic.rewrite_l
        (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (f b)
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.lift cic.prop univs.Type2
           ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
             matita_basics_logic.eq
               (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x
               matita_basics_bool.true)
              __))
        fb matita_basics_bool.false eqm.

def fmin_false :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (cic.prod cic.prop cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f (matita_arithmetics_minimization.let_m f n b))
              matita_basics_bool.false)
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f (matita_arithmetics_minimization.let_m f n b))
                   matita_basics_bool.false) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.let_m f n b)
              (matita_arithmetics_nat.plus n b)))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_minimization.let_m1 f n _x_365 b))
                 matita_basics_bool.false)
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f
                         (matita_arithmetics_minimization.let_m1 f n _x_365 b))
                      matita_basics_bool.false) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.let_m1 f n _x_365 b)
                 (matita_arithmetics_nat.plus _x_365 b))))
        (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.eq_f
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_arithmetics_minimization.min matita_arithmetics_nat.O b f)
           (f
              (matita_arithmetics_minimization.min matita_arithmetics_nat.O b
                 f))
           matita_basics_bool.false)
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            cic.Term cic.prop
              (cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f (matita_arithmetics_minimization.let_m2 f n i b))
                    matita_basics_bool.false)
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f (matita_arithmetics_minimization.let_m2 f n i b))
                         matita_basics_bool.false) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_minimization.let_m2 f n i b)
                    (matita_arithmetics_nat.plus i b)))) =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.match_Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f b) matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f b) matita_basics_bool.false)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.true)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.false)) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       b
                       (matita_arithmetics_minimization.min i
                          (matita_arithmetics_nat.S b) f)
                       (f b)))
                 matita_basics_bool.false)
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f
                         (matita_basics_bool.match_bool univs.Type0
                            (_0 :
                               cic.Term univs.Type0 matita_basics_bool.bool =>
                             matita_arithmetics_nat.nat)
                            b
                            (matita_arithmetics_minimization.min i
                               (matita_arithmetics_nat.S b) f)
                            (f b)))
                      matita_basics_bool.false) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    b
                    (matita_arithmetics_minimization.min i
                       (matita_arithmetics_nat.S b) f)
                    (f b))
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.plus i b))))
           (fb :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f b) matita_basics_bool.true) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.true) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f
                       (matita_basics_bool.match_bool univs.Type0
                          (_0 :
                             cic.Term univs.Type0 matita_basics_bool.bool =>
                           matita_arithmetics_nat.nat)
                          b
                          (matita_arithmetics_minimization.min i
                             (matita_arithmetics_nat.S b) f)
                          x))
                    matita_basics_bool.false)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f
                            (matita_basics_bool.match_bool univs.Type0
                               (_0 :
                                  cic.Term univs.Type0
                                    matita_basics_bool.bool =>
                                matita_arithmetics_nat.nat)
                               b
                               (matita_arithmetics_minimization.min i
                                  (matita_arithmetics_nat.S b) f)
                               x))
                         matita_basics_bool.false) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       b
                       (matita_arithmetics_minimization.min i
                          (matita_arithmetics_nat.S b) f)
                       x)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus i b))))
              (eqm :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.false) =>
               matita_basics_logic.False_ind
                 (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    b
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus i b)))
                 (matita_basics_logic.absurd
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f b) matita_basics_bool.true)
                    fb
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_basics_logic.Not
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                matita_basics_bool.true
                                matita_basics_bool.false)))
                       (cic.lift cic.prop univs.Type0
                          (matita_basics_logic.Not
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                (f b) matita_basics_bool.true)))
                       matita_basics_bool.not_eq_true_false
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true
                          (__ :
                             cic.Term univs.Type0 matita_basics_bool.bool =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0 matita_basics_bool.bool =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_basics_logic.Not
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_basics_bool.bool)
                                          matita_basics_bool.true x)))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_basics_logic.Not
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_basics_bool.bool)
                                          (f b) matita_basics_bool.true))))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             matita_basics_bool.true
                             (__ :
                                cic.Term univs.Type0 matita_basics_bool.bool =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_basics_bool.bool =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_basics_logic.Not
                                          (matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_basics_bool.bool)
                                             matita_basics_bool.true
                                             matita_basics_bool.true)))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_basics_logic.Not
                                          (matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_basics_bool.bool)
                                             x matita_basics_bool.true))))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift (cic.succ univs.Type0) univs.Type2
                                   (cic.univ univs.Type0))
                                (cic.lift cic.prop univs.Type0
                                   (matita_basics_logic.Not
                                      (matita_basics_logic.eq
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_basics_bool.bool)
                                         matita_basics_bool.true
                                         matita_basics_bool.true))))
                             (f b)
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                matita_basics_bool.false
                                (__ :
                                   cic.Term univs.Type0
                                     matita_basics_bool.bool =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_basics_bool.bool =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_basics_bool.bool)
                                       (f b) x)
                                      __))
                                eqm matita_basics_bool.true
                                (matita_arithmetics_minimization.let_clause_1012
                                   f n i Hind b fb eqm)))
                          matita_basics_bool.false
                          (matita_arithmetics_minimization.let_clause_1012 f
                             n i Hind b fb eqm)))))
              (f b) fb)
           (fb :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f b) matita_basics_bool.false) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.false) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f
                       (matita_basics_bool.match_bool univs.Type0
                          (_0 :
                             cic.Term univs.Type0 matita_basics_bool.bool =>
                           matita_arithmetics_nat.nat)
                          b
                          (matita_arithmetics_minimization.min i
                             (matita_arithmetics_nat.S b) f)
                          x))
                    matita_basics_bool.false)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f
                            (matita_basics_bool.match_bool univs.Type0
                               (_0 :
                                  cic.Term univs.Type0
                                    matita_basics_bool.bool =>
                                matita_arithmetics_nat.nat)
                               b
                               (matita_arithmetics_minimization.min i
                                  (matita_arithmetics_nat.S b) f)
                               x))
                         matita_basics_bool.false) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       b
                       (matita_arithmetics_minimization.min i
                          (matita_arithmetics_nat.S b) f)
                       x)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus i b))))
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus i (matita_arithmetics_nat.S b))
                 (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.plus i
                            (matita_arithmetics_nat.S b))) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f
                          (matita_arithmetics_minimization.min i
                             (matita_arithmetics_nat.S b) f))
                       matita_basics_bool.false)
                    (__1 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f
                               (matita_arithmetics_minimization.min i
                                  (matita_arithmetics_nat.S b) f))
                            matita_basics_bool.false) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_minimization.min i
                          (matita_arithmetics_nat.S b) f)
                       x))
                 (Hind (matita_arithmetics_nat.S b))
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.plus i b))
                 (matita_arithmetics_nat.plus_n_Sm i b))
              (f b) fb)
           (matita_basics_bool.true_or_false (f b)))
        n.

min_spec :
  _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  _b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  _f :
    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     cic.Term univs.Type0 matita_basics_bool.bool) ->
  __ : cic.Term univs.Type0 matita_arithmetics_nat.nat -> cic.Univ cic.prop.

found_min_spec :
  n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  f :
    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     cic.Term univs.Type0 matita_basics_bool.bool) ->
  m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  __ : cic.Term cic.prop (matita_arithmetics_nat.le b m) ->
  __1 :
    cic.Term cic.prop
      (matita_arithmetics_nat.lt m (matita_arithmetics_nat.plus n b)) ->
  __2 :
    cic.Term cic.prop
      (matita_basics_logic.eq
         (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
       f m) matita_basics_bool.true) ->
  __3 :
    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     __3 : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
     __4 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
     cic.Term cic.prop
       (matita_basics_logic.eq
          (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
        f i) matita_basics_bool.false)) ->
  cic.Term cic.prop (matita_arithmetics_minimization.min_spec n b f m).

not_found_min_spec :
  n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
  f :
    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     cic.Term univs.Type0 matita_basics_bool.bool) ->
  __ :
    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
     __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
     __1 :
       cic.Term cic.prop
         (matita_arithmetics_nat.lt i (matita_arithmetics_nat.plus n b)) ->
     cic.Term cic.prop
       (matita_basics_logic.eq
          (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
        f i) matita_basics_bool.false)) ->
  cic.Term cic.prop
    (matita_arithmetics_minimization.min_spec n b f
       (matita_arithmetics_nat.plus n b)).

def match_min_spec :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      return_sort : cic.Sort ->
      return_type :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         z :
           cic.Term cic.prop
             (matita_arithmetics_minimization.min_spec _n _b _f __) ->
         cic.Univ return_sort) ->
      case_found_min_spec :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.le _b m) ->
         __1 :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m (matita_arithmetics_nat.plus _n _b)) ->
         __2 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (_f m) matita_basics_bool.true) ->
         __3 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __3 : cic.Term cic.prop (matita_arithmetics_nat.le _b i) ->
            __4 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term return_sort
           (return_type m
              (matita_arithmetics_minimization.found_min_spec _n _b _f m __
                 __1 __2 __3))) ->
      case_not_found_min_spec :
        (__ :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le _b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus _n _b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term return_sort
           (return_type (matita_arithmetics_nat.plus _n _b)
              (matita_arithmetics_minimization.not_found_min_spec _n _b _f __))) ->
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      z :
        cic.Term cic.prop
          (matita_arithmetics_minimization.min_spec _n _b _f __) ->
      cic.Term return_sort (return_type __ z).

[ _n, _b, _f, return_sort, return_type, case_found_min_spec,
  case_not_found_min_spec, m, __, __1, __2, __3 ]
  match_min_spec _n _b _f return_sort return_type case_found_min_spec
    case_not_found_min_spec (m)
    (matita_arithmetics_minimization.found_min_spec _n _b _f m __ __1 __2 __3) -->
  case_found_min_spec m __ __1 __2 __3.

[ _n, _b, _f, return_sort, return_type, case_found_min_spec,
  case_not_found_min_spec, __ ]
  match_min_spec _n _b _f return_sort return_type case_found_min_spec
    case_not_found_min_spec (matita_arithmetics_nat.plus _n _b)
    (matita_arithmetics_minimization.not_found_min_spec _n _b _f __) -->
  case_not_found_min_spec __.

def filter_min_spec :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      return_sort : cic.Sort ->
      return_type :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_minimization.min_spec _n _b _f __) ->
         cic.Univ return_sort) ->
      return :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_minimization.min_spec _n _b _f __) ->
         cic.Term return_sort (return_type z)) ->
      z :
        cic.Term cic.prop
          (matita_arithmetics_minimization.min_spec _n _b _f __) ->
      cic.Term return_sort (return_type z).

[ n, b, f, m, __, __1, __2, __3, return_sort, return_type, return ]
  filter_min_spec (n) (b) (f) (m) return_sort return_type return
    (matita_arithmetics_minimization.found_min_spec n b f m __ __1 __2 __3) -->
  return
    (matita_arithmetics_minimization.found_min_spec n b f m __ __1 __2 __3).

[ n, b, f, __, return_sort, return_type, return ]
  filter_min_spec (n) (b) (f) (matita_arithmetics_nat.plus n b) return_sort
    return_type return
    (matita_arithmetics_minimization.not_found_min_spec n b f __) -->
  return (matita_arithmetics_minimization.not_found_min_spec n b f __).

def min_spec_ind :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      Q_ :
        (x_1075 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         _x_1076 :
           cic.Term cic.prop
             (matita_arithmetics_minimization.min_spec _n _b _f x_1075) ->
         cic.Univ cic.prop) ->
      _H_found_min_spec :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         x_1080 : cic.Term cic.prop (matita_arithmetics_nat.le _b m) ->
         x_1079 :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m (matita_arithmetics_nat.plus _n _b)) ->
         x_1078 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (_f m) matita_basics_bool.true) ->
         x_1077 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le _b i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term cic.prop
           (Q_ m
              (matita_arithmetics_minimization.found_min_spec _n _b _f m
                 x_1080 x_1079 x_1078 x_1077))) ->
      _H_not_found_min_spec :
        (x_1081 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le _b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus _n _b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term cic.prop
           (Q_ (matita_arithmetics_nat.plus _n _b)
              (matita_arithmetics_minimization.not_found_min_spec _n _b _f
                 x_1081))) ->
      x_1075 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x_1076 :
        cic.Term cic.prop
          (matita_arithmetics_minimization.min_spec _n _b _f x_1075) ->
      cic.Term cic.prop (Q_ x_1075 x_1076).

def min_spec_ind_body :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      Q_ :
        (x_1075 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         _x_1076 :
           cic.Term cic.prop
             (matita_arithmetics_minimization.min_spec _n _b _f x_1075) ->
         cic.Univ cic.prop) ->
      _H_found_min_spec :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         x_1080 : cic.Term cic.prop (matita_arithmetics_nat.le _b m) ->
         x_1079 :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m (matita_arithmetics_nat.plus _n _b)) ->
         x_1078 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (_f m) matita_basics_bool.true) ->
         x_1077 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le _b i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term cic.prop
           (Q_ m
              (matita_arithmetics_minimization.found_min_spec _n _b _f m
                 x_1080 x_1079 x_1078 x_1077))) ->
      _H_not_found_min_spec :
        (x_1081 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le _b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus _n _b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (_f i) matita_basics_bool.false)) ->
         cic.Term cic.prop
           (Q_ (matita_arithmetics_nat.plus _n _b)
              (matita_arithmetics_minimization.not_found_min_spec _n _b _f
                 x_1081))) ->
      x_1075 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x_1076 :
        cic.Term cic.prop
          (matita_arithmetics_minimization.min_spec _n _b _f x_1075) ->
      cic.Term cic.prop (Q_ x_1075 x_1076).

[ _n, _b, _f, Q_, _H_found_min_spec, _H_not_found_min_spec, x_1075, x_1076 ]
  min_spec_ind _n _b _f Q_ _H_found_min_spec _H_not_found_min_spec x_1075
    x_1076 -->
  matita_arithmetics_minimization.filter_min_spec _n _b _f x_1075 cic.prop
    (x_1076 :
       cic.Term cic.prop
         (matita_arithmetics_minimization.min_spec _n _b _f x_1075) =>
     Q_ x_1075 x_1076)
    (matita_arithmetics_minimization.min_spec_ind_body _n _b _f Q_
       _H_found_min_spec _H_not_found_min_spec x_1075)
    x_1076.

[ _n, _b, _f, Q_, _H_found_min_spec, _H_not_found_min_spec, x_1075, x_1076 ]
  min_spec_ind_body _n _b _f Q_ _H_found_min_spec _H_not_found_min_spec
    x_1075 x_1076 -->
  matita_arithmetics_minimization.match_min_spec _n _b _f cic.prop Q_
    (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     x_1080 : cic.Term cic.prop (matita_arithmetics_nat.le _b m) =>
     x_1079 :
       cic.Term cic.prop
         (matita_arithmetics_nat.lt m (matita_arithmetics_nat.plus _n _b)) =>
     x_1078 :
       cic.Term cic.prop
         (matita_basics_logic.eq
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
          _f m) matita_basics_bool.true) =>
     x_1077 :
       (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
        __ : cic.Term cic.prop (matita_arithmetics_nat.le _b i) ->
        __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (_f i) matita_basics_bool.false)) =>
     _H_found_min_spec m x_1080 x_1079 x_1078 x_1077)
    (x_1081 :
       (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
        __ : cic.Term cic.prop (matita_arithmetics_nat.le _b i) ->
        __1 :
          cic.Term cic.prop
            (matita_arithmetics_nat.lt i (matita_arithmetics_nat.plus _n _b)) ->
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (_f i) matita_basics_bool.false)) =>
     _H_not_found_min_spec x_1081)
    x_1075 x_1076.

def min_spec_inv_ind :
      x1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x2 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x3 :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      x4 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _Hterm :
        cic.Term cic.prop
          (matita_arithmetics_minimization.min_spec x1 x2 x3 x4) ->
      P :
        (_z1890 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Univ cic.prop) ->
      _H1 :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         _x_1080 : cic.Term cic.prop (matita_arithmetics_nat.le x2 m) ->
         _x_1079 :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m (matita_arithmetics_nat.plus x1 x2)) ->
         _x_1078 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (x3 m) matita_basics_bool.true) ->
         _x_1077 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le x2 i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (x3 i) matita_basics_bool.false)) ->
         _z1891 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x4 m) ->
         cic.Term cic.prop (P m)) ->
      _H2 :
        (_x_1081 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le x2 i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus x1 x2)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (x3 i) matita_basics_bool.false)) ->
         _z1891 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x4 (matita_arithmetics_nat.plus x1 x2)) ->
         cic.Term cic.prop (P (matita_arithmetics_nat.plus x1 x2))) ->
      cic.Term cic.prop (P x4) :=
      x1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      x2 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      x3 :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      x4 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          (matita_arithmetics_minimization.min_spec x1 x2 x3 x4) =>
      P :
        (_z1890 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Univ cic.prop) =>
      H1 :
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         _x_1080 : cic.Term cic.prop (matita_arithmetics_nat.le x2 m) ->
         _x_1079 :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m (matita_arithmetics_nat.plus x1 x2)) ->
         _x_1078 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (x3 m) matita_basics_bool.true) ->
         _x_1077 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le x2 i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (x3 i) matita_basics_bool.false)) ->
         _z1891 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x4 m) ->
         cic.Term cic.prop (P m)) =>
      H2 :
        (_x_1081 :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le x2 i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus x1 x2)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (x3 i) matita_basics_bool.false)) ->
         _z1891 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x4 (matita_arithmetics_nat.plus x1 x2)) ->
         cic.Term cic.prop (P (matita_arithmetics_nat.plus x1 x2))) =>
      (Hcut :
         (_z1891 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 x4 x4) ->
          cic.Term cic.prop (P x4)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) x4))
        (matita_arithmetics_minimization.min_spec_ind x1 x2 x3
           (x_1075 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            _x_1076 :
              cic.Term cic.prop
                (matita_arithmetics_minimization.min_spec x1 x2 x3 x_1075) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 x4 x_1075)
              (_z1891 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x4 x_1075) =>
               P x_1075))
           H1 H2 x4 Hterm).

def min_spec_to_min :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop (matita_arithmetics_minimization.min_spec n b f m) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min n b f) m)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      spec :
        cic.Term cic.prop (matita_arithmetics_minimization.min_spec n b f m) =>
      matita_arithmetics_minimization.match_min_spec n b f cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         _0 :
           cic.Term cic.prop
             (matita_arithmetics_minimization.min_spec n b f __) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min n b f) __)
        (m0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         lem : cic.Term cic.prop (matita_arithmetics_nat.le b m0) =>
         ltm :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m0 (matita_arithmetics_nat.plus n b)) =>
         fm :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m0) matita_basics_bool.true) =>
         ismin :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m0) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         matita_arithmetics_minimization.min_exists f
           (matita_arithmetics_nat.plus n b) m0 ltm
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     x matita_basics_bool.true)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true)
              (f m0) fm)
           n b lem ismin
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus n b)))
        (ffalse :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus n b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         matita_arithmetics_minimization.min_not_exists f n b ffalse)
        m spec.

def min_to_min_spec :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_minimization.min n b f) m) ->
      cic.Term cic.prop (matita_arithmetics_minimization.min_spec n b f m) :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod cic.prop cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.min __ b f) m)
           (__1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_minimization.min __ b f) m) =>
            matita_arithmetics_minimization.min_spec __ b f m))
        (eqm :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.min matita_arithmetics_nat.O
                   b f)
                m) =>
         matita_basics_logic.eq_ind
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min matita_arithmetics_nat.O b f)
           (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_minimization.min
                      matita_arithmetics_nat.O b f)
                   x_1) =>
            matita_arithmetics_minimization.min_spec matita_arithmetics_nat.O
              b f x_1)
           (matita_arithmetics_minimization.not_found_min_spec
              matita_arithmetics_nat.O b f
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               lei : cic.Term cic.prop (matita_arithmetics_nat.le b i) =>
               lti :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus matita_arithmetics_nat.O b)) =>
               matita_basics_logic.False_ind
                 (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.false)
                 (matita_basics_logic.absurd
                    (matita_arithmetics_nat.lt i
                       (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                          b))
                    lti
                    (matita_arithmetics_nat.le_to_not_lt
                       (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                          b)
                       i lei))))
           m eqm)
        (n0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         eqm :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_minimization.min
                   (matita_arithmetics_nat.S n0) b f)
                m) =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   x m) =>
            cic.prod cic.prop cic.prop
              (matita_arithmetics_nat.le x
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.S n0) b))
              (__1 :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.le x
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.S n0) b)) =>
               matita_arithmetics_minimization.min_spec
                 (matita_arithmetics_nat.S n0) b f m))
           (lem :
              cic.Term cic.prop
                (matita_arithmetics_nat.le m
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.S n0)
                      b)) =>
            matita_basics_logic.match_Or
              (matita_arithmetics_nat.lt m
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.S n0) b))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 m
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.S n0) b))
              cic.prop
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.Or
                      (matita_arithmetics_nat.lt m
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.S n0) b))
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         m
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.S n0) b))) =>
               matita_arithmetics_minimization.min_spec
                 (matita_arithmetics_nat.S n0) b f m)
              (mcase :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt m
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.S n0) b)) =>
               matita_arithmetics_minimization.found_min_spec
                 (matita_arithmetics_nat.S n0) b f m
                 (matita_basics_logic.eq_coerc
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.le b
                          (matita_arithmetics_minimization.min
                             (matita_arithmetics_nat.S n0) b f)))
                    (cic.lift cic.prop univs.Type0
                       (matita_arithmetics_nat.le b m))
                    (matita_arithmetics_minimization.le_min_l f
                       (matita_arithmetics_nat.S n0) b)
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le b x))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.le b m)))
                             __))
                       (matita_basics_logic.refl
                          (cic.lift (cic.succ univs.Type0) univs.Type2
                             (cic.univ univs.Type0))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.le b m)))
                       (matita_arithmetics_minimization.min
                          (matita_arithmetics_nat.S n0) b f)
                       eqm))
                 mcase
                 (matita_arithmetics_minimization.fmin_true f
                    (matita_arithmetics_nat.S n0) m b
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              m x)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          m)
                       (matita_arithmetics_minimization.min
                          (matita_arithmetics_nat.S n0) b f)
                       eqm)
                    mcase)
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  H : cic.Term cic.prop (matita_arithmetics_nat.le b i) =>
                  H1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) =>
                  matita_arithmetics_minimization.lt_min_to_false f
                    (matita_arithmetics_nat.S n0) i b H
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt i m))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_minimization.min
                                (matita_arithmetics_nat.S n0) b f)))
                       H1
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          m
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt i m))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt i x)))
                                __))
                          (matita_basics_logic.refl
                             (cic.lift (cic.succ univs.Type0) univs.Type2
                                (cic.univ univs.Type0))
                             (cic.lift cic.prop univs.Type0
                                (matita_arithmetics_nat.lt i m)))
                          (matita_arithmetics_minimization.min
                             (matita_arithmetics_nat.S n0) b f)
                          eqm))))
              (mcase :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      m
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.S n0) b)) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.S n0) b)
                 (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.S n0) b)) =>
                  matita_arithmetics_minimization.min_spec
                    (matita_arithmetics_nat.S n0) b f x)
                 (matita_arithmetics_minimization.not_found_min_spec
                    (matita_arithmetics_nat.S n0) b f
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     lebi :
                       cic.Term cic.prop (matita_arithmetics_nat.le b i) =>
                     lti :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt i
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.S n0) b)) =>
                     matita_arithmetics_minimization.lt_min_to_false f
                       (matita_arithmetics_nat.S n0) i b lebi
                       (matita_basics_logic.eq_coerc
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt i
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.S n0) b)))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt i
                                (matita_arithmetics_minimization.min
                                   (matita_arithmetics_nat.S n0) b f)))
                          lti
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus b
                                (matita_arithmetics_nat.S n0))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt i x))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt i
                                          (matita_arithmetics_minimization.min
                                             (matita_arithmetics_nat.S n0) b
                                             f))))
                                   __))
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                m
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift (cic.succ univs.Type0)
                                          univs.Type2 (cic.univ univs.Type0))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt i x))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt i
                                             (matita_arithmetics_minimization.min
                                                (matita_arithmetics_nat.S n0)
                                                b f))))
                                      __))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   m
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift (cic.succ univs.Type0)
                                             univs.Type2
                                             (cic.univ univs.Type0))
                                          (cic.lift cic.prop univs.Type0
                                             (matita_arithmetics_nat.lt i m))
                                          (cic.lift cic.prop univs.Type0
                                             (matita_arithmetics_nat.lt i x)))
                                         __))
                                   (matita_basics_logic.refl
                                      (cic.lift (cic.succ univs.Type0)
                                         univs.Type2 (cic.univ univs.Type0))
                                      (cic.lift cic.prop univs.Type0
                                         (matita_arithmetics_nat.lt i m)))
                                   (matita_arithmetics_minimization.min
                                      (matita_arithmetics_nat.S n0) b f)
                                   eqm)
                                (matita_arithmetics_nat.plus b
                                   (matita_arithmetics_nat.S n0))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.S n0) b)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          m x)
                                         __))
                                   mcase
                                   (matita_arithmetics_nat.plus b
                                      (matita_arithmetics_nat.S n0))
                                   (matita_arithmetics_nat.commutative_plus
                                      (matita_arithmetics_nat.S n0) b)))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S n0) b)
                             (matita_arithmetics_nat.commutative_plus
                                (matita_arithmetics_nat.S n0) b)))))
                 m mcase)
              (matita_arithmetics_nat.le_to_or_lt_eq m
                 (matita_arithmetics_nat.plus (matita_arithmetics_nat.S n0) b)
                 lem))
           (matita_arithmetics_minimization.min (matita_arithmetics_nat.S n0)
              b f)
           eqm
           (matita_arithmetics_minimization.le_min_r f
              (matita_arithmetics_nat.S n0) b))
        n.

def min_f_g :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      g :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
         __1 :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt i (matita_arithmetics_nat.plus n b)) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) (g i))) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_minimization.min n b f)
           (matita_arithmetics_minimization.min n b g))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      g :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.le b i)
                    (__ :
                       cic.Term cic.prop (matita_arithmetics_nat.le b i) =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt i
                          (matita_arithmetics_nat.plus _x_365 b))
                       (__1 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt i
                               (matita_arithmetics_nat.plus _x_365 b)) =>
                        matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f i) (g i)))))
              (__ :
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
                  __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
                  __1 :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus _x_365 b)) ->
                  cic.Term cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f i) (g i))) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.min _x_365 b f)
                 (matita_arithmetics_minimization.min _x_365 b g))))
        (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         auto :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus matita_arithmetics_nat.O b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) (g i))) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2
                     matita_arithmetics_nat.nat)
                  x
                  (matita_arithmetics_minimization.min
                     matita_arithmetics_nat.O b g))
                 __))
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_arithmetics_nat.nat)
                     b x)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 b)
              (matita_arithmetics_minimization.min matita_arithmetics_nat.O b
                 g)
              (matita_arithmetics_minimization.min_O_f g b))
           (matita_arithmetics_minimization.min matita_arithmetics_nat.O b f)
           (matita_arithmetics_minimization.min_O_f f b))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
               __1 :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus m b)) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) (g i))) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_minimization.min m b f)
                 (matita_arithmetics_minimization.min m b g))) =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         ext :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.S m)
                      b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) (g i))) =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) (
         g b)
           (x : cic.Term univs.Type0 matita_basics_bool.bool =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   x (g b)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 b
                 (matita_arithmetics_minimization.min m
                    (matita_arithmetics_nat.S b) f)
                 x)
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 b
                 (matita_arithmetics_minimization.min m
                    (matita_arithmetics_nat.S b) g)
                 (g b)))
           (matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.min m
                 (matita_arithmetics_nat.S b) g)
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_minimization.min m
                         (matita_arithmetics_nat.S b) g)) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    b x (g b))
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    b
                    (matita_arithmetics_minimization.min m
                       (matita_arithmetics_nat.S b) g)
                    (g b)))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_basics_bool.match_bool univs.Type0
                    (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    b
                    (matita_arithmetics_minimization.min m
                       (matita_arithmetics_nat.S b) g)
                    (g b)))
              (matita_arithmetics_minimization.min m
                 (matita_arithmetics_nat.S b) f)
              (Hind (matita_arithmetics_nat.S b)
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  ltib :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.le (matita_arithmetics_nat.S b)
                         i) =>
                  ltim :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus m
                            (matita_arithmetics_nat.S b))) =>
                  ext i (matita_arithmetics_nat.lt_to_le b i ltib)
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.plus m
                                (matita_arithmetics_nat.S b))))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt i
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S m) b)))
                       ltim
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.S m))
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt i
                                       (matita_arithmetics_nat.plus m
                                          (matita_arithmetics_nat.S b))))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt i x)))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus b
                                (matita_arithmetics_nat.S m))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt i x))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt i
                                          (matita_arithmetics_nat.plus b
                                             (matita_arithmetics_nat.S m)))))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift (cic.succ univs.Type0) univs.Type2
                                   (cic.univ univs.Type0))
                                (cic.lift cic.prop univs.Type0
                                   (matita_arithmetics_nat.lt i
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.S m)))))
                             (matita_arithmetics_nat.plus m
                                (matita_arithmetics_nat.S b))
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.plus m b))
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       x
                                       (matita_arithmetics_nat.plus b
                                          (matita_arithmetics_nat.S m)))
                                      __))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus b m)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.S x)
                                          (matita_arithmetics_nat.plus b
                                             (matita_arithmetics_nat.S m)))
                                         __))
                                   (matita_arithmetics_nat.plus_n_Sm b m)
                                   (matita_arithmetics_nat.plus m b)
                                   (matita_arithmetics_nat.commutative_plus b
                                      m))
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.S b))
                                (matita_arithmetics_nat.plus_n_Sm m b)))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S m) b)
                          (matita_arithmetics_nat.commutative_plus
                             (matita_arithmetics_nat.S m) b))))))
           (f b)
           (ext b (matita_arithmetics_nat.le_n b)
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop univs.Type0
                    (matita_arithmetics_nat.lt b
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.plus b
                             matita_arithmetics_nat.O)
                          (matita_arithmetics_nat.S m))))
                 (cic.lift cic.prop univs.Type0
                    (matita_arithmetics_nat.lt b
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.S m) b)))
                 (matita_arithmetics_nat.lt_plus_Sn_r b
                    matita_arithmetics_nat.O m)
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus b
                       (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                          (matita_arithmetics_nat.S m)))
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift (cic.succ univs.Type0) univs.Type2
                              (cic.univ univs.Type0))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.lt b x))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_nat.lt b
                                 (matita_arithmetics_nat.plus
                                    (matita_arithmetics_nat.S m) b))))
                          __))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus b
                          (matita_arithmetics_nat.S m))
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt b
                                    (matita_arithmetics_nat.plus b
                                       (matita_arithmetics_nat.plus
                                          matita_arithmetics_nat.O
                                          (matita_arithmetics_nat.S m)))))
                              (cic.lift cic.prop univs.Type0
                                 (matita_arithmetics_nat.lt b x)))
                             __))
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S m)
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt b
                                       (matita_arithmetics_nat.plus b x)))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt b
                                       (matita_arithmetics_nat.plus b
                                          (matita_arithmetics_nat.S m)))))
                                __))
                          (matita_basics_logic.refl
                             (cic.lift (cic.succ univs.Type0) univs.Type2
                                (cic.univ univs.Type0))
                             (cic.lift cic.prop univs.Type0
                                (matita_arithmetics_nat.lt b
                                   (matita_arithmetics_nat.plus b
                                      (matita_arithmetics_nat.S m)))))
                          (matita_arithmetics_nat.plus
                             matita_arithmetics_nat.O
                             (matita_arithmetics_nat.S m))
                          (matita_arithmetics_nat.plus_O_n
                             (matita_arithmetics_nat.S m)))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.S m) b)
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.S m) b))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.plus b
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.S m))
                    (matita_arithmetics_nat.associative_plus b
                       matita_arithmetics_nat.O (matita_arithmetics_nat.S m))))))
        n.

def le_min_f_min_g :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      g :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
         __1 :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt i (matita_arithmetics_nat.plus n b)) ->
         __2 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f i) matita_basics_bool.true) ->
         cic.Term cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (g i) matita_basics_bool.true)) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le
           (matita_arithmetics_minimization.min n b g)
           (matita_arithmetics_minimization.min n b f))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      g :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              (cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop (matita_arithmetics_nat.le b i)
                    (__ :
                       cic.Term cic.prop (matita_arithmetics_nat.le b i) =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt i
                          (matita_arithmetics_nat.plus _x_365 b))
                       (__1 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt i
                               (matita_arithmetics_nat.plus _x_365 b)) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (f i) matita_basics_bool.true)
                          (__2 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_basics_bool.bool)
                                  (f i) matita_basics_bool.true) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             (g i) matita_basics_bool.true)))))
              (__ :
                 (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
                  __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
                  __1 :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus _x_365 b)) ->
                  __2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true) ->
                  cic.Term cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (g i) matita_basics_bool.true)) =>
               matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.min _x_365 b g)
                 (matita_arithmetics_minimization.min _x_365 b f))))
        (b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         auto :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus matita_arithmetics_nat.O b)) ->
            __2 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (g i) matita_basics_bool.true)) =>
         matita_arithmetics_nat.le_n
           (matita_arithmetics_minimization.min matita_arithmetics_nat.O b g))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
               __1 :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus m b)) ->
               __2 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (g i) matita_basics_bool.true)) ->
            cic.Term cic.prop
              (matita_arithmetics_nat.le
                 (matita_arithmetics_minimization.min m b g)
                 (matita_arithmetics_minimization.min m b f))) =>
         b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         ext :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus (matita_arithmetics_nat.S m)
                      b)) ->
            __2 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (g i) matita_basics_bool.true)) =>
         matita_basics_logic.match_Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f b) matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f b) matita_basics_bool.false)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.Or
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.true)
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f b) matita_basics_bool.false)) =>
            matita_arithmetics_nat.le
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 b
                 (matita_arithmetics_minimization.min m
                    (matita_arithmetics_nat.S b) g)
                 (g b))
              (matita_basics_bool.match_bool univs.Type0
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 b
                 (matita_arithmetics_minimization.min m
                    (matita_arithmetics_nat.S b) f)
                 (f b)))
           (Heq :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f b) matita_basics_bool.true) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.true) =>
               matita_arithmetics_nat.le
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    b
                    (matita_arithmetics_minimization.min m
                       (matita_arithmetics_nat.S b) g)
                    (g b))
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    b
                    (matita_arithmetics_minimization.min m
                       (matita_arithmetics_nat.S b) f)
                    x))
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (x : cic.Term univs.Type0 matita_basics_bool.bool =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         x matita_basics_bool.true) =>
                  matita_arithmetics_nat.le
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       b
                       (matita_arithmetics_minimization.min m
                          (matita_arithmetics_nat.S b) g)
                       x)
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       b
                       (matita_arithmetics_minimization.min m
                          (matita_arithmetics_nat.S b) f)
                       matita_basics_bool.true))
                 (matita_arithmetics_nat.le_n
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       b
                       (matita_arithmetics_minimization.min m
                          (matita_arithmetics_nat.S b) g)
                       matita_basics_bool.true))
                 (g b)
                 (ext b (matita_arithmetics_nat.le_n b)
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt b
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus b
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.S m))))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt b
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S m) b)))
                       (matita_arithmetics_nat.lt_plus_Sn_r b
                          matita_arithmetics_nat.O m)
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.plus
                                matita_arithmetics_nat.O
                                (matita_arithmetics_nat.S m)))
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt b x))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt b
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.S m) b))))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus b
                                (matita_arithmetics_nat.S m))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt b
                                          (matita_arithmetics_nat.plus b
                                             (matita_arithmetics_nat.plus
                                                matita_arithmetics_nat.O
                                                (matita_arithmetics_nat.S m)))))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt b x)))
                                   __))
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S m)
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift (cic.succ univs.Type0)
                                          univs.Type2 (cic.univ univs.Type0))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt b
                                             (matita_arithmetics_nat.plus b x)))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt b
                                             (matita_arithmetics_nat.plus b
                                                (matita_arithmetics_nat.S m)))))
                                      __))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.succ univs.Type0)
                                      univs.Type2 (cic.univ univs.Type0))
                                   (cic.lift cic.prop univs.Type0
                                      (matita_arithmetics_nat.lt b
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.S m)))))
                                (matita_arithmetics_nat.plus
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.S m))
                                (matita_arithmetics_nat.plus_O_n
                                   (matita_arithmetics_nat.S m)))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S m) b)
                             (matita_arithmetics_nat.commutative_plus
                                (matita_arithmetics_nat.S m) b))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus b
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.S m))
                          (matita_arithmetics_nat.associative_plus b
                             matita_arithmetics_nat.O
                             (matita_arithmetics_nat.S m))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              x matita_basics_bool.true)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true)
                       (f b) Heq)))
              (f b) Heq)
           (Heq :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f b) matita_basics_bool.false) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false
              (x : cic.Term univs.Type0 matita_basics_bool.bool =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      x matita_basics_bool.false) =>
               matita_arithmetics_nat.le
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    b
                    (matita_arithmetics_minimization.min m
                       (matita_arithmetics_nat.S b) g)
                    (g b))
                 (matita_basics_bool.match_bool univs.Type0
                    (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    b
                    (matita_arithmetics_minimization.min m
                       (matita_arithmetics_nat.S b) f)
                    x))
              (matita_basics_bool.match_bool cic.prop
                 (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                  matita_arithmetics_nat.le
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       b
                       (matita_arithmetics_minimization.min m
                          (matita_arithmetics_nat.S b) g)
                       __)
                    (matita_basics_bool.match_bool univs.Type0
                       (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       b
                       (matita_arithmetics_minimization.min m
                          (matita_arithmetics_nat.S b) f)
                       matita_basics_bool.false))
                 (matita_arithmetics_nat.lt_to_le b
                    (matita_arithmetics_minimization.min m
                       (matita_arithmetics_nat.S b) f)
                    (matita_arithmetics_minimization.le_min_l f m
                       (matita_arithmetics_nat.S b)))
                 (Hind (matita_arithmetics_nat.S b)
                    (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     ltb :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S b) i) =>
                     ltim :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt i
                            (matita_arithmetics_nat.plus m
                               (matita_arithmetics_nat.S b))) =>
                     fi :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f i) matita_basics_bool.true) =>
                     ext i (matita_arithmetics_nat.lt_to_le b i ltb)
                       (matita_basics_logic.eq_coerc
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt i
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.S b))))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt i
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.S m) b)))
                          ltim
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus b
                                (matita_arithmetics_nat.S m))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt i
                                          (matita_arithmetics_nat.plus m
                                             (matita_arithmetics_nat.S b))))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt i x)))
                                   __))
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus b
                                   (matita_arithmetics_nat.S m))
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift (cic.succ univs.Type0)
                                          univs.Type2 (cic.univ univs.Type0))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt i x))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt i
                                             (matita_arithmetics_nat.plus b
                                                (matita_arithmetics_nat.S m)))))
                                      __))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.succ univs.Type0)
                                      univs.Type2 (cic.univ univs.Type0))
                                   (cic.lift cic.prop univs.Type0
                                      (matita_arithmetics_nat.lt i
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.S m)))))
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.S b))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.plus m b))
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          x
                                          (matita_arithmetics_nat.plus b
                                             (matita_arithmetics_nat.S m)))
                                         __))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus b m)
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.S x)
                                             (matita_arithmetics_nat.plus b
                                                (matita_arithmetics_nat.S m)))
                                            __))
                                      (matita_arithmetics_nat.plus_n_Sm b m)
                                      (matita_arithmetics_nat.plus m b)
                                      (matita_arithmetics_nat.commutative_plus
                                         b m))
                                   (matita_arithmetics_nat.plus m
                                      (matita_arithmetics_nat.S b))
                                   (matita_arithmetics_nat.plus_n_Sm m b)))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S m) b)
                             (matita_arithmetics_nat.commutative_plus
                                (matita_arithmetics_nat.S m) b)))
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true
                          (__ :
                             cic.Term univs.Type0 matita_basics_bool.bool =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0 matita_basics_bool.bool =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_basics_bool.bool)
                                 x matita_basics_bool.true)
                                __))
                          (matita_basics_logic.refl
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             matita_basics_bool.true)
                          (f i) fi)))
                 (g b))
              (f b) Heq)
           (matita_basics_bool.true_or_false (f b)))
        n.

def f_min_true :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.ex matita_arithmetics_nat.nat
             (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
              matita_basics_logic.And
                (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus n b)))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true))) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (f (matita_arithmetics_minimization.min n b f))
           matita_basics_bool.true)
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_minimization.match_min_spec n b f cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         _0 :
           cic.Term cic.prop
             (matita_arithmetics_minimization.min_spec n b f __) =>
         cic.prod cic.prop cic.prop
           (matita_basics_logic.ex matita_arithmetics_nat.nat
              (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_logic.And
                 (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                    (matita_arithmetics_nat.lt i
                       (matita_arithmetics_nat.plus n b)))
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true)))
           (__1 :
              cic.Term cic.prop
                (matita_basics_logic.ex matita_arithmetics_nat.nat
                   (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                    matita_basics_logic.And
                      (matita_basics_logic.And
                         (matita_arithmetics_nat.le b i)
                         (matita_arithmetics_nat.lt i
                            (matita_arithmetics_nat.plus n b)))
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f __) matita_basics_bool.true))
        (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         auto : cic.Term cic.prop (matita_arithmetics_nat.le b m) =>
         auto' :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt m (matita_arithmetics_nat.plus n b)) =>
         auto'' :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                (f m) matita_basics_bool.true) =>
         auto''' :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 : cic.Term cic.prop (matita_arithmetics_nat.lt i m) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         auto'''' :
           cic.Term cic.prop
             (matita_basics_logic.ex matita_arithmetics_nat.nat
                (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                 matita_basics_logic.And
                   (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus n b)))
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true))) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           matita_basics_bool.true
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  x matita_basics_bool.true)
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true)
           (f m) auto'')
        (Hall :
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ : cic.Term cic.prop (matita_arithmetics_nat.le b i) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt i
                   (matita_arithmetics_nat.plus n b)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.false)) =>
         _clearme :
           cic.Term cic.prop
             (matita_basics_logic.ex matita_arithmetics_nat.nat
                (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                 matita_basics_logic.And
                   (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus n b)))
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true))) =>
         matita_basics_logic.match_ex matita_arithmetics_nat.nat
           (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            matita_basics_logic.And
              (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                 (matita_arithmetics_nat.lt i
                    (matita_arithmetics_nat.plus n b)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f i) matita_basics_bool.true))
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.ex matita_arithmetics_nat.nat
                   (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                    matita_basics_logic.And
                      (matita_basics_logic.And
                         (matita_arithmetics_nat.le b i)
                         (matita_arithmetics_nat.lt i
                            (matita_arithmetics_nat.plus n b)))
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f (matita_arithmetics_nat.plus n b)) matita_basics_bool.true)
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            _clearme0 :
              cic.Term cic.prop
                (matita_basics_logic.And
                   (matita_basics_logic.And (matita_arithmetics_nat.le b x)
                      (matita_arithmetics_nat.lt x
                         (matita_arithmetics_nat.plus n b)))
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f x) matita_basics_bool.true)) =>
            matita_basics_logic.match_And
              (matita_basics_logic.And (matita_arithmetics_nat.le b x)
                 (matita_arithmetics_nat.lt x
                    (matita_arithmetics_nat.plus n b)))
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f x) matita_basics_bool.true)
              cic.prop
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.And
                      (matita_basics_logic.And
                         (matita_arithmetics_nat.le b x)
                         (matita_arithmetics_nat.lt x
                            (matita_arithmetics_nat.plus n b)))
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f x) matita_basics_bool.true)) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (f (matita_arithmetics_nat.plus n b))
                 matita_basics_bool.true)
              (_clearme1 :
                 cic.Term cic.prop
                   (matita_basics_logic.And (matita_arithmetics_nat.le b x)
                      (matita_arithmetics_nat.lt x
                         (matita_arithmetics_nat.plus n b))) =>
               matita_basics_logic.match_And (matita_arithmetics_nat.le b x)
                 (matita_arithmetics_nat.lt x
                    (matita_arithmetics_nat.plus n b))
                 cic.prop
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.And
                         (matita_arithmetics_nat.le b x)
                         (matita_arithmetics_nat.lt x
                            (matita_arithmetics_nat.plus n b))) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f x) matita_basics_bool.true)
                    (__1 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_basics_bool.bool)
                            (f x) matita_basics_bool.true) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f (matita_arithmetics_nat.plus n b))
                       matita_basics_bool.true))
                 (leb : cic.Term cic.prop (matita_arithmetics_nat.le b x) =>
                  ltx :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.lt x
                         (matita_arithmetics_nat.plus n b)) =>
                  fx :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f x) matita_basics_bool.true) =>
                  matita_basics_logic.False_ind
                    (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       (f (matita_arithmetics_nat.plus n b))
                       matita_basics_bool.true)
                    (matita_basics_logic.absurd
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          (f x) matita_basics_bool.true)
                       fx
                       (matita_basics_logic.eq_ind_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.false
                          (x0 :
                             cic.Term univs.Type0 matita_basics_bool.bool =>
                           __ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_basics_bool.bool)
                                  x0 matita_basics_bool.false) =>
                           matita_basics_logic.Not
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_basics_bool.bool)
                                x0 matita_basics_bool.true))
                          (matita_basics_logic.sym_not_eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             matita_basics_bool.true matita_basics_bool.false
                             matita_basics_bool.not_eq_true_false)
                          (f x) (Hall x leb ltx))))
                 _clearme1)
              _clearme0)
           _clearme)
        (matita_arithmetics_minimization.min n b f)
        (matita_arithmetics_minimization.min_to_min_spec f n b
           (matita_arithmetics_minimization.min n b f)
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_minimization.min n b f))).

def lt_min :
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.ex matita_arithmetics_nat.nat
             (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
              matita_basics_logic.And
                (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus n b)))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true))) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.lt
           (matita_arithmetics_minimization.min n b f)
           (matita_arithmetics_nat.plus n b))
      :=
      f :
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
         cic.Term univs.Type0 matita_basics_bool.bool) =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_basics_logic.ex matita_arithmetics_nat.nat
             (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
              matita_basics_logic.And
                (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus n b)))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true))) =>
      matita_basics_logic.match_ex matita_arithmetics_nat.nat
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.And
           (matita_basics_logic.And (matita_arithmetics_nat.le b i)
              (matita_arithmetics_nat.lt i (matita_arithmetics_nat.plus n b)))
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.true))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.ex matita_arithmetics_nat.nat
                (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                 matita_basics_logic.And
                   (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus n b)))
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true))) =>
         matita_arithmetics_nat.lt
           (matita_arithmetics_minimization.min n b f)
           (matita_arithmetics_nat.plus n b))
        (i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         _clearme :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus n b)))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (f i) matita_basics_bool.true)) =>
         matita_basics_logic.match_And
           (matita_basics_logic.And (matita_arithmetics_nat.le b i)
              (matita_arithmetics_nat.lt i (matita_arithmetics_nat.plus n b)))
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (f i) matita_basics_bool.true)
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.And
                   (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus n b)))
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true)) =>
            matita_arithmetics_nat.lt
              (matita_arithmetics_minimization.min n b f)
              (matita_arithmetics_nat.plus n b))
           (_clearme0 :
              cic.Term cic.prop
                (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus n b))) =>
            matita_basics_logic.match_And (matita_arithmetics_nat.le b i)
              (matita_arithmetics_nat.lt i (matita_arithmetics_nat.plus n b))
              cic.prop
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.And (matita_arithmetics_nat.le b i)
                      (matita_arithmetics_nat.lt i
                         (matita_arithmetics_nat.plus n b))) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (f i) matita_basics_bool.true)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         (f i) matita_basics_bool.true) =>
                  matita_arithmetics_nat.lt
                    (matita_arithmetics_minimization.min n b f)
                    (matita_arithmetics_nat.plus n b)))
              (lebi : cic.Term cic.prop (matita_arithmetics_nat.le b i) =>
               ltin :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.lt i
                      (matita_arithmetics_nat.plus n b)) =>
               fi_true :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (f i) matita_basics_bool.true) =>
               matita_arithmetics_nat.le_to_lt_to_lt
                 (matita_arithmetics_minimization.min n b f) i
                 (matita_arithmetics_nat.plus n b)
                 (matita_arithmetics_minimization.true_to_le_min f n i b lebi
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              x matita_basics_bool.true)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true)
                       (f i) fi_true))
                 ltin)
              _clearme0)
           _clearme)
        H.


