(; This file was automatically generated from Matita. ;)

#NAME matita_basics_bool.

bool : cic.Univ univs.Type0.

true : cic.Term univs.Type0 matita_basics_bool.bool.

false : cic.Term univs.Type0 matita_basics_bool.bool.

def match_bool :
      return_sort : cic.Sort ->
      return_type :
        (z : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ return_sort) ->
      case_true :
        cic.Term return_sort (return_type matita_basics_bool.true) ->
      case_false :
        cic.Term return_sort (return_type matita_basics_bool.false) ->
      z : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term return_sort (return_type z).

[ return_sort, return_type, case_true, case_false ]
  match_bool return_sort return_type case_true case_false
    matita_basics_bool.true -->
  case_true.

[ return_sort, return_type, case_true, case_false ]
  match_bool return_sort return_type case_true case_false
    matita_basics_bool.false -->
  case_false.

def filter_bool :
      return_sort : cic.Sort ->
      return_type :
        (z : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ return_sort) ->
      return :
        (z : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Term return_sort (return_type z)) ->
      z : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term return_sort (return_type z).

[ return_sort, return_type, return ]
  filter_bool return_sort return_type return matita_basics_bool.true -->
  return matita_basics_bool.true.

[ return_sort, return_type, return ]
  filter_bool return_sort return_type return matita_basics_bool.false -->
  return matita_basics_bool.false.

def bool_ind :
      Q_ :
        (_x_326 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_326 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_326).

def bool_ind_body :
      Q_ :
        (_x_326 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_326 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_326).

[ Q_, _H_true, _H_false, x_326 ] bool_ind Q_ _H_true _H_false x_326 -->
  matita_basics_bool.filter_bool cic.prop
    (x_326 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_326)
    (matita_basics_bool.bool_ind_body Q_ _H_true _H_false) x_326.

[ Q_, _H_true, _H_false, x_326 ] bool_ind_body Q_ _H_true _H_false x_326 -->
  matita_basics_bool.match_bool cic.prop Q_ _H_true _H_false x_326.

def bool_rect_Type4 :
      Q_ :
        (_x_329 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type4) ->
      _H_true : cic.Term univs.Type4 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type4 (Q_ matita_basics_bool.false) ->
      x_329 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type4 (Q_ x_329).

def bool_rect_Type4_body :
      Q_ :
        (_x_329 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type4) ->
      _H_true : cic.Term univs.Type4 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type4 (Q_ matita_basics_bool.false) ->
      x_329 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type4 (Q_ x_329).

[ Q_, _H_true, _H_false, x_329 ]
  bool_rect_Type4 Q_ _H_true _H_false x_329 -->
  matita_basics_bool.filter_bool univs.Type4
    (x_329 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_329)
    (matita_basics_bool.bool_rect_Type4_body Q_ _H_true _H_false) x_329.

[ Q_, _H_true, _H_false, x_329 ]
  bool_rect_Type4_body Q_ _H_true _H_false x_329 -->
  matita_basics_bool.match_bool univs.Type4 Q_ _H_true _H_false x_329.

def bool_rect_Type5 :
      Q_ :
        (_x_332 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type5) ->
      _H_true : cic.Term univs.Type5 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type5 (Q_ matita_basics_bool.false) ->
      x_332 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type5 (Q_ x_332).

def bool_rect_Type5_body :
      Q_ :
        (_x_332 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type5) ->
      _H_true : cic.Term univs.Type5 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type5 (Q_ matita_basics_bool.false) ->
      x_332 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type5 (Q_ x_332).

[ Q_, _H_true, _H_false, x_332 ]
  bool_rect_Type5 Q_ _H_true _H_false x_332 -->
  matita_basics_bool.filter_bool univs.Type5
    (x_332 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_332)
    (matita_basics_bool.bool_rect_Type5_body Q_ _H_true _H_false) x_332.

[ Q_, _H_true, _H_false, x_332 ]
  bool_rect_Type5_body Q_ _H_true _H_false x_332 -->
  matita_basics_bool.match_bool univs.Type5 Q_ _H_true _H_false x_332.

def bool_rect_Type3 :
      Q_ :
        (_x_335 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type3) ->
      _H_true : cic.Term univs.Type3 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type3 (Q_ matita_basics_bool.false) ->
      x_335 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type3 (Q_ x_335).

def bool_rect_Type3_body :
      Q_ :
        (_x_335 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type3) ->
      _H_true : cic.Term univs.Type3 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type3 (Q_ matita_basics_bool.false) ->
      x_335 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type3 (Q_ x_335).

[ Q_, _H_true, _H_false, x_335 ]
  bool_rect_Type3 Q_ _H_true _H_false x_335 -->
  matita_basics_bool.filter_bool univs.Type3
    (x_335 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_335)
    (matita_basics_bool.bool_rect_Type3_body Q_ _H_true _H_false) x_335.

[ Q_, _H_true, _H_false, x_335 ]
  bool_rect_Type3_body Q_ _H_true _H_false x_335 -->
  matita_basics_bool.match_bool univs.Type3 Q_ _H_true _H_false x_335.

def bool_rect_Type2 :
      Q_ :
        (_x_338 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type2) ->
      _H_true : cic.Term univs.Type2 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type2 (Q_ matita_basics_bool.false) ->
      x_338 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type2 (Q_ x_338).

def bool_rect_Type2_body :
      Q_ :
        (_x_338 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type2) ->
      _H_true : cic.Term univs.Type2 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type2 (Q_ matita_basics_bool.false) ->
      x_338 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type2 (Q_ x_338).

[ Q_, _H_true, _H_false, x_338 ]
  bool_rect_Type2 Q_ _H_true _H_false x_338 -->
  matita_basics_bool.filter_bool univs.Type2
    (x_338 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_338)
    (matita_basics_bool.bool_rect_Type2_body Q_ _H_true _H_false) x_338.

[ Q_, _H_true, _H_false, x_338 ]
  bool_rect_Type2_body Q_ _H_true _H_false x_338 -->
  matita_basics_bool.match_bool univs.Type2 Q_ _H_true _H_false x_338.

def bool_rect_Type1 :
      Q_ :
        (_x_341 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type1) ->
      _H_true : cic.Term univs.Type1 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type1 (Q_ matita_basics_bool.false) ->
      x_341 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type1 (Q_ x_341).

def bool_rect_Type1_body :
      Q_ :
        (_x_341 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type1) ->
      _H_true : cic.Term univs.Type1 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type1 (Q_ matita_basics_bool.false) ->
      x_341 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type1 (Q_ x_341).

[ Q_, _H_true, _H_false, x_341 ]
  bool_rect_Type1 Q_ _H_true _H_false x_341 -->
  matita_basics_bool.filter_bool univs.Type1
    (x_341 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_341)
    (matita_basics_bool.bool_rect_Type1_body Q_ _H_true _H_false) x_341.

[ Q_, _H_true, _H_false, x_341 ]
  bool_rect_Type1_body Q_ _H_true _H_false x_341 -->
  matita_basics_bool.match_bool univs.Type1 Q_ _H_true _H_false x_341.

def bool_rect_Type0 :
      Q_ :
        (_x_344 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type0) ->
      _H_true : cic.Term univs.Type0 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type0 (Q_ matita_basics_bool.false) ->
      x_344 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type0 (Q_ x_344).

def bool_rect_Type0_body :
      Q_ :
        (_x_344 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type0) ->
      _H_true : cic.Term univs.Type0 (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term univs.Type0 (Q_ matita_basics_bool.false) ->
      x_344 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type0 (Q_ x_344).

[ Q_, _H_true, _H_false, x_344 ]
  bool_rect_Type0 Q_ _H_true _H_false x_344 -->
  matita_basics_bool.filter_bool univs.Type0
    (x_344 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_344)
    (matita_basics_bool.bool_rect_Type0_body Q_ _H_true _H_false) x_344.

[ Q_, _H_true, _H_false, x_344 ]
  bool_rect_Type0_body Q_ _H_true _H_false x_344 -->
  matita_basics_bool.match_bool univs.Type0 Q_ _H_true _H_false x_344.

def bool_rect_CProp4 :
      Q_ :
        (_x_347 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_347 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_347).

def bool_rect_CProp4_body :
      Q_ :
        (_x_347 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_347 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_347).

[ Q_, _H_true, _H_false, x_347 ]
  bool_rect_CProp4 Q_ _H_true _H_false x_347 -->
  matita_basics_bool.filter_bool cic.prop
    (x_347 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_347)
    (matita_basics_bool.bool_rect_CProp4_body Q_ _H_true _H_false) x_347.

[ Q_, _H_true, _H_false, x_347 ]
  bool_rect_CProp4_body Q_ _H_true _H_false x_347 -->
  matita_basics_bool.match_bool cic.prop Q_ _H_true _H_false x_347.

def bool_rect_CProp5 :
      Q_ :
        (_x_350 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_350 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_350).

def bool_rect_CProp5_body :
      Q_ :
        (_x_350 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_350 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_350).

[ Q_, _H_true, _H_false, x_350 ]
  bool_rect_CProp5 Q_ _H_true _H_false x_350 -->
  matita_basics_bool.filter_bool cic.prop
    (x_350 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_350)
    (matita_basics_bool.bool_rect_CProp5_body Q_ _H_true _H_false) x_350.

[ Q_, _H_true, _H_false, x_350 ]
  bool_rect_CProp5_body Q_ _H_true _H_false x_350 -->
  matita_basics_bool.match_bool cic.prop Q_ _H_true _H_false x_350.

def bool_rect_CProp3 :
      Q_ :
        (_x_353 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_353 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_353).

def bool_rect_CProp3_body :
      Q_ :
        (_x_353 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_353 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_353).

[ Q_, _H_true, _H_false, x_353 ]
  bool_rect_CProp3 Q_ _H_true _H_false x_353 -->
  matita_basics_bool.filter_bool cic.prop
    (x_353 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_353)
    (matita_basics_bool.bool_rect_CProp3_body Q_ _H_true _H_false) x_353.

[ Q_, _H_true, _H_false, x_353 ]
  bool_rect_CProp3_body Q_ _H_true _H_false x_353 -->
  matita_basics_bool.match_bool cic.prop Q_ _H_true _H_false x_353.

def bool_rect_CProp2 :
      Q_ :
        (_x_356 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_356 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_356).

def bool_rect_CProp2_body :
      Q_ :
        (_x_356 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_356 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_356).

[ Q_, _H_true, _H_false, x_356 ]
  bool_rect_CProp2 Q_ _H_true _H_false x_356 -->
  matita_basics_bool.filter_bool cic.prop
    (x_356 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_356)
    (matita_basics_bool.bool_rect_CProp2_body Q_ _H_true _H_false) x_356.

[ Q_, _H_true, _H_false, x_356 ]
  bool_rect_CProp2_body Q_ _H_true _H_false x_356 -->
  matita_basics_bool.match_bool cic.prop Q_ _H_true _H_false x_356.

def bool_rect_CProp1 :
      Q_ :
        (_x_359 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_359 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_359).

def bool_rect_CProp1_body :
      Q_ :
        (_x_359 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_359 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_359).

[ Q_, _H_true, _H_false, x_359 ]
  bool_rect_CProp1 Q_ _H_true _H_false x_359 -->
  matita_basics_bool.filter_bool cic.prop
    (x_359 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_359)
    (matita_basics_bool.bool_rect_CProp1_body Q_ _H_true _H_false) x_359.

[ Q_, _H_true, _H_false, x_359 ]
  bool_rect_CProp1_body Q_ _H_true _H_false x_359 -->
  matita_basics_bool.match_bool cic.prop Q_ _H_true _H_false x_359.

def bool_rect_CProp0 :
      Q_ :
        (_x_362 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_362 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_362).

def bool_rect_CProp0_body :
      Q_ :
        (_x_362 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H_true : cic.Term cic.prop (Q_ matita_basics_bool.true) ->
      _H_false : cic.Term cic.prop (Q_ matita_basics_bool.false) ->
      x_362 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop (Q_ x_362).

[ Q_, _H_true, _H_false, x_362 ]
  bool_rect_CProp0 Q_ _H_true _H_false x_362 -->
  matita_basics_bool.filter_bool cic.prop
    (x_362 : cic.Term univs.Type0 matita_basics_bool.bool => Q_ x_362)
    (matita_basics_bool.bool_rect_CProp0_body Q_ _H_true _H_false) x_362.

[ Q_, _H_true, _H_false, x_362 ]
  bool_rect_CProp0_body Q_ _H_true _H_false x_362 -->
  matita_basics_bool.match_bool cic.prop Q_ _H_true _H_false x_362.

def bool_inv_ind :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z587 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H1 :
        (_z588 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) ->
      _H2 :
        (_z588 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) ->
      cic.Term cic.prop (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z587 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) =>
      H1 :
        (_z588 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) =>
      H2 :
        (_z588 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) =>
      (Hcut :
         (_z588 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term cic.prop (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_ind
           (_x_326 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_326)
              (_z588 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_326) =>
               P _x_326))
           H1 H2 Hterm).

def bool_inv_rect_Type4 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z593 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type4) ->
      _H1 :
        (_z594 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type4 (P matita_basics_bool.true)) ->
      _H2 :
        (_z594 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type4 (P matita_basics_bool.false)) ->
      cic.Term univs.Type4 (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z593 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type4) =>
      H1 :
        (_z594 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type4 (P matita_basics_bool.true)) =>
      H2 :
        (_z594 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type4 (P matita_basics_bool.false)) =>
      (Hcut :
         (_z594 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term univs.Type4 (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_Type4
           (_x_329 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop univs.Type4
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_329)
              (_z594 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_329) =>
               P _x_329))
           H1 H2 Hterm).

def bool_inv_rect_Type3 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z599 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type3) ->
      _H1 :
        (_z600 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type3 (P matita_basics_bool.true)) ->
      _H2 :
        (_z600 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type3 (P matita_basics_bool.false)) ->
      cic.Term univs.Type3 (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z599 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type3) =>
      H1 :
        (_z600 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type3 (P matita_basics_bool.true)) =>
      H2 :
        (_z600 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type3 (P matita_basics_bool.false)) =>
      (Hcut :
         (_z600 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term univs.Type3 (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_Type3
           (_x_335 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop univs.Type3
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_335)
              (_z600 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_335) =>
               P _x_335))
           H1 H2 Hterm).

def bool_inv_rect_Type2 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z605 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type2) ->
      _H1 :
        (_z606 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type2 (P matita_basics_bool.true)) ->
      _H2 :
        (_z606 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type2 (P matita_basics_bool.false)) ->
      cic.Term univs.Type2 (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z605 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type2) =>
      H1 :
        (_z606 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type2 (P matita_basics_bool.true)) =>
      H2 :
        (_z606 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type2 (P matita_basics_bool.false)) =>
      (Hcut :
         (_z606 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term univs.Type2 (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_Type2
           (_x_338 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop univs.Type2
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_338)
              (_z606 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_338) =>
               P _x_338))
           H1 H2 Hterm).

def bool_inv_rect_Type1 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z611 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type1) ->
      _H1 :
        (_z612 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type1 (P matita_basics_bool.true)) ->
      _H2 :
        (_z612 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type1 (P matita_basics_bool.false)) ->
      cic.Term univs.Type1 (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z611 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type1) =>
      H1 :
        (_z612 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type1 (P matita_basics_bool.true)) =>
      H2 :
        (_z612 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type1 (P matita_basics_bool.false)) =>
      (Hcut :
         (_z612 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term univs.Type1 (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_Type1
           (_x_341 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop univs.Type1
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_341)
              (_z612 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_341) =>
               P _x_341))
           H1 H2 Hterm).

def bool_inv_rect_Type0 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z617 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type0) ->
      _H1 :
        (_z618 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type0 (P matita_basics_bool.true)) ->
      _H2 :
        (_z618 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type0 (P matita_basics_bool.false)) ->
      cic.Term univs.Type0 (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z617 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ univs.Type0) =>
      H1 :
        (_z618 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term univs.Type0 (P matita_basics_bool.true)) =>
      H2 :
        (_z618 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term univs.Type0 (P matita_basics_bool.false)) =>
      (Hcut :
         (_z618 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term univs.Type0 (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_Type0
           (_x_344 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop univs.Type0
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_344)
              (_z618 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_344) =>
               P _x_344))
           H1 H2 Hterm).

def bool_inv_rect_CProp4 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z623 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H1 :
        (_z624 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) ->
      _H2 :
        (_z624 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) ->
      cic.Term cic.prop (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z623 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) =>
      H1 :
        (_z624 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) =>
      H2 :
        (_z624 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) =>
      (Hcut :
         (_z624 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term cic.prop (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_CProp4
           (_x_347 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_347)
              (_z624 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_347) =>
               P _x_347))
           H1 H2 Hterm).

def bool_inv_rect_CProp3 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z629 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H1 :
        (_z630 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) ->
      _H2 :
        (_z630 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) ->
      cic.Term cic.prop (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z629 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) =>
      H1 :
        (_z630 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) =>
      H2 :
        (_z630 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) =>
      (Hcut :
         (_z630 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term cic.prop (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_CProp3
           (_x_353 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_353)
              (_z630 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_353) =>
               P _x_353))
           H1 H2 Hterm).

def bool_inv_rect_CProp2 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z635 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H1 :
        (_z636 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) ->
      _H2 :
        (_z636 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) ->
      cic.Term cic.prop (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z635 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) =>
      H1 :
        (_z636 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) =>
      H2 :
        (_z636 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) =>
      (Hcut :
         (_z636 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term cic.prop (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_CProp2
           (_x_356 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_356)
              (_z636 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_356) =>
               P _x_356))
           H1 H2 Hterm).

def bool_inv_rect_CProp1 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z641 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H1 :
        (_z642 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) ->
      _H2 :
        (_z642 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) ->
      cic.Term cic.prop (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z641 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) =>
      H1 :
        (_z642 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) =>
      H2 :
        (_z642 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) =>
      (Hcut :
         (_z642 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term cic.prop (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_CProp1
           (_x_359 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_359)
              (_z642 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_359) =>
               P _x_359))
           H1 H2 Hterm).

def bool_inv_rect_CProp0 :
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (_z647 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      _H1 :
        (_z648 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) ->
      _H2 :
        (_z648 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) ->
      cic.Term cic.prop (P Hterm) :=
      Hterm : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (_z647 : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) =>
      H1 :
        (_z648 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.true) ->
         cic.Term cic.prop (P matita_basics_bool.true)) =>
      H2 :
        (_z648 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                Hterm matita_basics_bool.false) ->
         cic.Term cic.prop (P matita_basics_bool.false)) =>
      (Hcut :
         (_z648 :
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm Hterm) ->
          cic.Term cic.prop (P Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) Hterm))
        (matita_basics_bool.bool_rect_CProp0
           (_x_362 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 Hterm _x_362)
              (_z648 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      Hterm _x_362) =>
               P _x_362))
           H1 H2 Hterm).

def bool_discr :
      x : cic.Term univs.Type0 matita_basics_bool.bool ->
      y : cic.Term univs.Type0 matita_basics_bool.bool ->
      _e :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x y) ->
      cic.Term univs.Type2
        (matita_basics_bool.match_bool (cic.succ univs.Type2)
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.univ univs.Type2)
           (matita_basics_bool.match_bool (cic.succ univs.Type2)
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.univ univs.Type2)
              (cic.prod (cic.succ univs.Type1) univs.Type1
                 (cic.univ univs.Type1)
                 (P : cic.Univ univs.Type1 =>
                  cic.prod univs.Type1 univs.Type1 P
                    (_z19 : cic.Term univs.Type1 P => P)))
              (cic.prod (cic.succ univs.Type1) univs.Type1
                 (cic.univ univs.Type1) (P : cic.Univ univs.Type1 => P))
              y)
           (matita_basics_bool.match_bool (cic.succ univs.Type2)
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.univ univs.Type2)
              (cic.prod (cic.succ univs.Type1) univs.Type1
                 (cic.univ univs.Type1) (P : cic.Univ univs.Type1 => P))
              (cic.prod (cic.succ univs.Type1) univs.Type1
                 (cic.univ univs.Type1)
                 (P : cic.Univ univs.Type1 =>
                  cic.prod univs.Type1 univs.Type1 P
                    (_z20 : cic.Term univs.Type1 P => P)))
              y)
           x)
      :=
      x : cic.Term univs.Type0 matita_basics_bool.bool =>
      y : cic.Term univs.Type0 matita_basics_bool.bool =>
      Deq :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x y) =>
      matita_basics_logic.eq_rect_Type2
        (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x
        (x_13 : cic.Term univs.Type0 matita_basics_bool.bool =>
         _x_14 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x
                x_13) =>
         matita_basics_bool.match_bool (cic.succ univs.Type2)
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.univ univs.Type2)
           (matita_basics_bool.match_bool (cic.succ univs.Type2)
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.univ univs.Type2)
              (cic.prod (cic.succ univs.Type1) univs.Type1
                 (cic.univ univs.Type1)
                 (P : cic.Univ univs.Type1 =>
                  cic.prod univs.Type1 univs.Type1 P
                    (_z19 : cic.Term univs.Type1 P => P)))
              (cic.prod (cic.succ univs.Type1) univs.Type1
                 (cic.univ univs.Type1) (P : cic.Univ univs.Type1 => P))
              x_13)
           (matita_basics_bool.match_bool (cic.succ univs.Type2)
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.univ univs.Type2)
              (cic.prod (cic.succ univs.Type1) univs.Type1
                 (cic.univ univs.Type1) (P : cic.Univ univs.Type1 => P))
              (cic.prod (cic.succ univs.Type1) univs.Type1
                 (cic.univ univs.Type1)
                 (P : cic.Univ univs.Type1 =>
                  cic.prod univs.Type1 univs.Type1 P
                    (_z20 : cic.Term univs.Type1 P => P)))
              x_13)
           x)
        (matita_basics_bool.match_bool univs.Type2
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_basics_bool.match_bool (cic.succ univs.Type2)
              (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.univ univs.Type2)
              (matita_basics_bool.match_bool (cic.succ univs.Type2)
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  cic.univ univs.Type2)
                 (cic.prod (cic.succ univs.Type1) univs.Type1
                    (cic.univ univs.Type1)
                    (P : cic.Univ univs.Type1 =>
                     cic.prod univs.Type1 univs.Type1 P
                       (_z19 : cic.Term univs.Type1 P => P)))
                 (cic.prod (cic.succ univs.Type1) univs.Type1
                    (cic.univ univs.Type1) (P : cic.Univ univs.Type1 => P))
                 __)
              (matita_basics_bool.match_bool (cic.succ univs.Type2)
                 (_0 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  cic.univ univs.Type2)
                 (cic.prod (cic.succ univs.Type1) univs.Type1
                    (cic.univ univs.Type1) (P : cic.Univ univs.Type1 => P))
                 (cic.prod (cic.succ univs.Type1) univs.Type1
                    (cic.univ univs.Type1)
                    (P : cic.Univ univs.Type1 =>
                     cic.prod univs.Type1 univs.Type1 P
                       (_z20 : cic.Term univs.Type1 P => P)))
                 __)
              __)
           (P : cic.Univ univs.Type1 => DH : cic.Term univs.Type1 P => DH)
           (P : cic.Univ univs.Type1 => DH : cic.Term univs.Type1 P => DH) x)
        y Deq.

def not_eq_true_false :
      cic.Term cic.prop
        (matita_basics_logic.Not
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true matita_basics_bool.false))
      :=
      matita_basics_logic.nmk
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           matita_basics_bool.true matita_basics_bool.false)
        (Heq :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                matita_basics_bool.true matita_basics_bool.false) =>
         matita_basics_bool.bool_discr matita_basics_bool.true
           matita_basics_bool.false Heq
           (cic.lift cic.prop univs.Type1 matita_basics_logic.False)).

def notb :
      __ : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type0 matita_basics_bool.bool :=
      b : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool univs.Type0
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_bool.bool)
        matita_basics_bool.false matita_basics_bool.true b.

def notb_elim :
      b : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (__ : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      __ :
        cic.Term cic.prop
          (matita_basics_bool.match_bool (cic.type cic.z)
             (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
              cic.univ cic.prop)
             (P matita_basics_bool.false) (P matita_basics_bool.true) b) ->
      cic.Term cic.prop (P (matita_basics_bool.notb b)) :=
      b : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (__ : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) =>
      matita_basics_bool.bool_ind
        (_x_326 : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.prod cic.prop cic.prop
           (matita_basics_bool.match_bool (cic.type cic.z)
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.univ cic.prop)
              (P matita_basics_bool.false) (P matita_basics_bool.true) _x_326)
           (__ :
              cic.Term cic.prop
                (matita_basics_bool.match_bool (cic.type cic.z)
                   (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                    cic.univ cic.prop)
                   (P matita_basics_bool.false) (P matita_basics_bool.true)
                   _x_326) =>
            P (matita_basics_bool.notb _x_326)))
        (auto : cic.Term cic.prop (P matita_basics_bool.false) => auto)
        (auto : cic.Term cic.prop (P matita_basics_bool.true) => auto) b.

def notb_notb :
      b : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.notb (matita_basics_bool.notb b)) b)
      :=
      b : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.bool_ind
        (_x_326 : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.notb (matita_basics_bool.notb _x_326)) _x_326)
        (matita_basics_logic.refl
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.notb
              (matita_basics_bool.notb matita_basics_bool.true)))
        (matita_basics_logic.refl
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.notb
              (matita_basics_bool.notb matita_basics_bool.false)))
        b.

def injective_notb :
      cic.Term cic.prop
        (matita_basics_relations.{|injective|} matita_basics_bool.bool
           matita_basics_bool.bool matita_basics_bool.notb)
      :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      H :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (matita_basics_bool.notb b1) (matita_basics_bool.notb b2)) =>
      matita_basics_logic.rewrite_r
        (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.lift cic.prop univs.Type2
           ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
             matita_basics_logic.eq
               (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x
               b2)
              __))
        (matita_basics_logic.refl
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2)
        b1
        (matita_basics_logic.rewrite_l
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.notb (matita_basics_bool.notb b1))
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  x b2)
                 __))
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (matita_basics_bool.notb b2)
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     (matita_basics_bool.notb x) b2)
                    __))
              (matita_basics_bool.notb_notb b2) (matita_basics_bool.notb b1)
              H)
           b1 (matita_basics_bool.notb_notb b1)).

def noteq_to_eqnot :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.Not
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
                b2)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
           (matita_basics_bool.notb b2))
      :=
      _clearme : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool cic.prop
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.prod univs.Type0 cic.prop matita_basics_bool.bool
           (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    __ b2))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.Not
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         __ b2)) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 __ (matita_basics_bool.notb b2))))
        (_clearme0 : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true __))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.Not
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         matita_basics_bool.true __)) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true (matita_basics_bool.notb __)))
           (H :
              cic.Term cic.prop
                (matita_basics_logic.Not
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      matita_basics_bool.true matita_basics_bool.true)) =>
            matita_basics_logic.False_ind
              (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (matita_basics_bool.notb matita_basics_bool.true))
              (matita_basics_logic.absurd
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true matita_basics_bool.true)
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true)
                 H))
           (auto :
              cic.Term cic.prop
                (matita_basics_logic.Not
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      matita_basics_bool.true matita_basics_bool.false)) =>
            matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true)
           _clearme0)
        (_clearme0 : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.false __))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.Not
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         matita_basics_bool.false __)) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false (matita_basics_bool.notb __)))
           (auto :
              cic.Term cic.prop
                (matita_basics_logic.Not
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      matita_basics_bool.false matita_basics_bool.true)) =>
            matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false)
           (H :
              cic.Term cic.prop
                (matita_basics_logic.Not
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      matita_basics_bool.false matita_basics_bool.false)) =>
            matita_basics_logic.False_ind
              (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false
                 (matita_basics_bool.notb matita_basics_bool.false))
              (matita_basics_logic.absurd
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.false matita_basics_bool.false)
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.false)
                 H))
           _clearme0)
        _clearme.

def eqnot_to_noteq :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
             (matita_basics_bool.notb b2)) ->
      cic.Term cic.prop
        (matita_basics_logic.Not
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
              b2))
      :=
      _clearme : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool cic.prop
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.prod univs.Type0 cic.prop matita_basics_bool.bool
           (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 __ (matita_basics_bool.notb b2))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      __ (matita_basics_bool.notb b2)) =>
               matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    __ b2))))
        (_clearme0 : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true (matita_basics_bool.notb __))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      matita_basics_bool.true (matita_basics_bool.notb __)) =>
               matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true __)))
           (auto :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   matita_basics_bool.true matita_basics_bool.false) =>
            matita_basics_logic.eq_coerc
              (cic.lift cic.prop univs.Type0
                 (matita_basics_logic.Not
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true matita_basics_bool.false)))
              (cic.lift cic.prop univs.Type0
                 (matita_basics_logic.Not
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true matita_basics_bool.true)))
              matita_basics_bool.not_eq_true_false
              (matita_basics_logic.rewrite_l
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                      matita_basics_logic.eq
                        (cic.lift (cic.succ univs.Type0) univs.Type2
                           (cic.univ univs.Type0))
                        (cic.lift cic.prop univs.Type0
                           (matita_basics_logic.Not
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_basics_bool.bool)
                                 matita_basics_bool.true x)))
                        (cic.lift cic.prop univs.Type0
                           (matita_basics_logic.Not
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_basics_bool.bool)
                                 matita_basics_bool.true
                                 matita_basics_bool.true))))
                       __))
                 (matita_basics_logic.refl
                    (cic.lift (cic.succ univs.Type0) univs.Type2
                       (cic.univ univs.Type0))
                    (cic.lift cic.prop univs.Type0
                       (matita_basics_logic.Not
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_basics_bool.bool)
                             matita_basics_bool.true matita_basics_bool.true))))
                 matita_basics_bool.false auto))
           (auto :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   matita_basics_bool.true matita_basics_bool.true) =>
            matita_basics_bool.not_eq_true_false)
           _clearme0)
        (_clearme0 : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false (matita_basics_bool.notb __))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      matita_basics_bool.false (matita_basics_bool.notb __)) =>
               matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.false __)))
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   matita_basics_bool.false matita_basics_bool.false) =>
            matita_basics_logic.not_to_not
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false matita_basics_bool.true)
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true matita_basics_bool.false)
              (auto :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      matita_basics_bool.false matita_basics_bool.true) =>
               matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (__1 : cic.Term univs.Type0 matita_basics_bool.bool =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_basics_bool.bool)
                        matita_basics_bool.true x)
                       __1))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true)
                 matita_basics_bool.false auto)
              matita_basics_bool.not_eq_true_false)
           (auto :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   matita_basics_bool.false matita_basics_bool.true) =>
            matita_basics_logic.eq_coerc
              (cic.lift cic.prop univs.Type0
                 (matita_basics_logic.Not
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true matita_basics_bool.false)))
              (cic.lift cic.prop univs.Type0
                 (matita_basics_logic.Not
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.false matita_basics_bool.false)))
              matita_basics_bool.not_eq_true_false
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true
                 (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                      matita_basics_logic.eq
                        (cic.lift (cic.succ univs.Type0) univs.Type2
                           (cic.univ univs.Type0))
                        (cic.lift cic.prop univs.Type0
                           (matita_basics_logic.Not
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_basics_bool.bool)
                                 matita_basics_bool.true x)))
                        (cic.lift cic.prop univs.Type0
                           (matita_basics_logic.Not
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_basics_bool.bool)
                                 matita_basics_bool.false
                                 matita_basics_bool.false))))
                       __))
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true
                    (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                     cic.lift cic.prop univs.Type2
                       ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                         matita_basics_logic.eq
                           (cic.lift (cic.succ univs.Type0) univs.Type2
                              (cic.univ univs.Type0))
                           (cic.lift cic.prop univs.Type0
                              (matita_basics_logic.Not
                                 (matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_basics_bool.bool)
                                    matita_basics_bool.true
                                    matita_basics_bool.true)))
                           (cic.lift cic.prop univs.Type0
                              (matita_basics_logic.Not
                                 (matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_basics_bool.bool)
                                    x matita_basics_bool.false))))
                          __))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_basics_logic.Not
                                    (matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_basics_bool.bool)
                                       matita_basics_bool.true
                                       matita_basics_bool.true)))
                              (cic.lift cic.prop univs.Type0
                                 (matita_basics_logic.Not
                                    (matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_basics_bool.bool)
                                       matita_basics_bool.true x))))
                             __))
                       (matita_basics_logic.refl
                          (cic.lift (cic.succ univs.Type0) univs.Type2
                             (cic.univ univs.Type0))
                          (cic.lift cic.prop univs.Type0
                             (matita_basics_logic.Not
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_basics_bool.bool)
                                   matita_basics_bool.true
                                   matita_basics_bool.true))))
                       matita_basics_bool.false auto)
                    matita_basics_bool.false auto)
                 matita_basics_bool.false auto))
           _clearme0)
        _clearme.

def andb :
      __ : cic.Term univs.Type0 matita_basics_bool.bool ->
      __1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type0 matita_basics_bool.bool :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool univs.Type0
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_bool.bool)
        b2 matita_basics_bool.false b1.

def andb_elim :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (__ : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      __ :
        cic.Term cic.prop
          (matita_basics_bool.match_bool (cic.type cic.z)
             (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
              cic.univ cic.prop)
             (P b2) (P matita_basics_bool.false) b1) ->
      cic.Term cic.prop (P (matita_basics_bool.andb b1 b2)) :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (__ : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) =>
      matita_basics_bool.bool_ind
        (_x_326 : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.prod cic.prop cic.prop
           (matita_basics_bool.match_bool (cic.type cic.z)
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.univ cic.prop)
              (P b2) (P matita_basics_bool.false) _x_326)
           (__ :
              cic.Term cic.prop
                (matita_basics_bool.match_bool (cic.type cic.z)
                   (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                    cic.univ cic.prop)
                   (P b2) (P matita_basics_bool.false) _x_326) =>
            P (matita_basics_bool.andb _x_326 b2)))
        (auto : cic.Term cic.prop (P b2) => auto)
        (auto : cic.Term cic.prop (P matita_basics_bool.false) => auto) b1.

def true_to_andb_true :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
             matita_basics_bool.true) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
             matita_basics_bool.true) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.andb b1 b2) matita_basics_bool.true)
      :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool cic.prop
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.prod univs.Type0 cic.prop matita_basics_bool.bool
           (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 __ matita_basics_bool.true)
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      __ matita_basics_bool.true) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    b2 matita_basics_bool.true)
                 (__2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         b2 matita_basics_bool.true) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    (matita_basics_bool.andb __ b2) matita_basics_bool.true))))
        (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
         auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                matita_basics_bool.true matita_basics_bool.true) =>
         auto' :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
                matita_basics_bool.true) =>
         matita_basics_logic.rewrite_l
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  b2 x)
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2)
           matita_basics_bool.true auto')
        (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
         auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                matita_basics_bool.false matita_basics_bool.true) =>
         auto' :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
                matita_basics_bool.true) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  x matita_basics_bool.true)
                 __))
           (matita_basics_logic.rewrite_l
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     b2 x)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 b2)
              matita_basics_bool.true auto')
           matita_basics_bool.false
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     matita_basics_bool.false x)
                    __))
              auto b2 auto'))
        b1.

def andb_true_l :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (matita_basics_bool.andb b1 b2) matita_basics_bool.true) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
           matita_basics_bool.true)
      :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool cic.prop
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.prod univs.Type0 cic.prop matita_basics_bool.bool
           (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (matita_basics_bool.andb __ b2) matita_basics_bool.true)
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (matita_basics_bool.andb __ b2) matita_basics_bool.true) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 __ matita_basics_bool.true)))
        (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
         auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
                matita_basics_bool.true) =>
         matita_basics_logic.rewrite_l
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  x matita_basics_bool.true)
                 __))
           (matita_basics_logic.rewrite_l
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     b2 x)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 b2)
              matita_basics_bool.true auto)
           matita_basics_bool.true auto)
        (_b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
         auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                matita_basics_bool.false matita_basics_bool.true) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           matita_basics_bool.true
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  x matita_basics_bool.true)
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true)
           matita_basics_bool.false auto)
        b1.

def andb_true_r :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (matita_basics_bool.andb b1 b2) matita_basics_bool.true) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
           matita_basics_bool.true)
      :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool cic.prop
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.prod cic.prop cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (matita_basics_bool.andb __ b2) matita_basics_bool.true)
           (__1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   (matita_basics_bool.andb __ b2) matita_basics_bool.true) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
              matita_basics_bool.true))
        (auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
                matita_basics_bool.true) =>
         matita_basics_logic.rewrite_l
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                  b2 x)
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2)
           matita_basics_bool.true auto)
        (matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false matita_basics_bool.true)
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      matita_basics_bool.false matita_basics_bool.true) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 __ matita_basics_bool.true))
           (auto :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   matita_basics_bool.false matita_basics_bool.true) =>
            matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true)
           (auto :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                   matita_basics_bool.false matita_basics_bool.true) =>
            matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     x matita_basics_bool.true)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true)
              matita_basics_bool.false auto)
           b2)
        b1.

def andb_true :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (matita_basics_bool.andb b1 b2) matita_basics_bool.true) ->
      cic.Term cic.prop
        (matita_basics_logic.And
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
              matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
              matita_basics_bool.true))
      :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      auto :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (matita_basics_bool.andb b1 b2) matita_basics_bool.true) =>
      matita_basics_logic.conj
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
           matita_basics_bool.true)
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
           matita_basics_bool.true)
        (matita_basics_bool.andb_true_l b1 b2
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     x matita_basics_bool.true)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true)
              (matita_basics_bool.andb b1 b2) auto))
        (matita_basics_bool.andb_true_r b1 b2
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     x matita_basics_bool.true)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true)
              (matita_basics_bool.andb b1 b2) auto)).

def orb :
      __ : cic.Term univs.Type0 matita_basics_bool.bool ->
      __1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type0 matita_basics_bool.bool :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool univs.Type0
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_bool.bool)
        matita_basics_bool.true b2 b1.

def orb_elim :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      P :
        (__ : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) ->
      __ :
        cic.Term cic.prop
          (matita_basics_bool.match_bool (cic.type cic.z)
             (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
              cic.univ cic.prop)
             (P matita_basics_bool.true) (P b2) b1) ->
      cic.Term cic.prop (P (matita_basics_bool.orb b1 b2)) :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      P :
        (__ : cic.Term univs.Type0 matita_basics_bool.bool ->
         cic.Univ cic.prop) =>
      matita_basics_bool.bool_ind
        (_x_326 : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.prod cic.prop cic.prop
           (matita_basics_bool.match_bool (cic.type cic.z)
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.univ cic.prop)
              (P matita_basics_bool.true) (P b2) _x_326)
           (__ :
              cic.Term cic.prop
                (matita_basics_bool.match_bool (cic.type cic.z)
                   (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                    cic.univ cic.prop)
                   (P matita_basics_bool.true) (P b2) _x_326) =>
            P (matita_basics_bool.orb _x_326 b2)))
        (auto : cic.Term cic.prop (P matita_basics_bool.true) => auto)
        (auto : cic.Term cic.prop (P b2) => auto) b1.

def orb_true_r1 :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
             matita_basics_bool.true) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.orb b1 b2) matita_basics_bool.true)
      :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      H :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
             matita_basics_bool.true) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
        matita_basics_bool.true
        (x : cic.Term univs.Type0 matita_basics_bool.bool =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x
                matita_basics_bool.true) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.orb x b2) matita_basics_bool.true)
        (matita_basics_logic.refl
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.orb matita_basics_bool.true b2))
        b1 H.

def orb_true_r2 :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
             matita_basics_bool.true) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.orb b1 b2) matita_basics_bool.true)
      :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      H :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
             matita_basics_bool.true) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
        matita_basics_bool.true
        (x : cic.Term univs.Type0 matita_basics_bool.bool =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) x
                matita_basics_bool.true) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
           (matita_basics_bool.orb b1 x) matita_basics_bool.true)
        (matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (matita_basics_bool.orb __ matita_basics_bool.true)
              matita_basics_bool.true)
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (matita_basics_bool.orb matita_basics_bool.true
                 matita_basics_bool.true))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              (matita_basics_bool.orb matita_basics_bool.false
                 matita_basics_bool.true))
           b1)
        b2 H.

def orb_true_l :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
             (matita_basics_bool.orb b1 b2) matita_basics_bool.true) ->
      cic.Term cic.prop
        (matita_basics_logic.Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
              matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
              matita_basics_bool.true))
      :=
      _clearme : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool cic.prop
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         cic.prod univs.Type0 cic.prop matita_basics_bool.bool
           (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 (matita_basics_bool.orb __ b2) matita_basics_bool.true)
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_basics_bool.bool)
                      (matita_basics_bool.orb __ b2) matita_basics_bool.true) =>
               matita_basics_logic.Or
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    __ matita_basics_bool.true)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    b2 matita_basics_bool.true))))
        (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
         auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                matita_basics_bool.true matita_basics_bool.true) =>
         matita_basics_logic.or_introl
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
              matita_basics_bool.true)
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true))
        (b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
         auto :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
                matita_basics_bool.true) =>
         matita_basics_logic.or_intror
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
              matita_basics_bool.true)
           (matita_basics_logic.rewrite_l
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b2
              (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_basics_bool.bool =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_basics_bool.bool)
                     b2 x)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 b2)
              matita_basics_bool.true auto))
        _clearme.

def xorb :
      __ : cic.Term univs.Type0 matita_basics_bool.bool ->
      __1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term univs.Type0 matita_basics_bool.bool :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool univs.Type0
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_bool.bool)
        (matita_basics_bool.match_bool univs.Type0
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_basics_bool.bool)
           matita_basics_bool.false matita_basics_bool.true b2)
        (matita_basics_bool.match_bool univs.Type0
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_basics_bool.bool)
           matita_basics_bool.true matita_basics_bool.false b2)
        b1.

def bool_to_decidable_eq :
      b1 : cic.Term univs.Type0 matita_basics_bool.bool ->
      b2 : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop
        (matita_basics_logic.decidable
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b1
              b2))
      :=
      b1 : cic.Term univs.Type0 matita_basics_bool.bool =>
      b2 : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool cic.prop
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_logic.decidable
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) __
              b2))
        (matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_basics_logic.decidable
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true __))
           (matita_basics_logic.or_introl
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true matita_basics_bool.true)
              (matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true matita_basics_bool.true))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true))
           (matita_basics_logic.or_intror
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.true matita_basics_bool.false)
              (matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.true matita_basics_bool.false))
              matita_basics_bool.not_eq_true_false)
           b2)
        (matita_basics_bool.match_bool cic.prop
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_basics_logic.decidable
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false __))
           (matita_basics_logic.or_intror
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false matita_basics_bool.true)
              (matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.false matita_basics_bool.true))
              (matita_basics_logic.nmk
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.false matita_basics_bool.true)
                 (auto :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_basics_bool.bool)
                         matita_basics_bool.false matita_basics_bool.true) =>
                  matita_basics_logic.absurd
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true matita_basics_bool.false)
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_basics_bool.bool =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_basics_bool.bool)
                              matita_basics_bool.true x)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_basics_bool.bool)
                          matita_basics_bool.true)
                       matita_basics_bool.false auto)
                    matita_basics_bool.not_eq_true_false)))
           (matita_basics_logic.or_introl
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false matita_basics_bool.false)
              (matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                    matita_basics_bool.false matita_basics_bool.false))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
                 matita_basics_bool.false))
           b2)
        b1.

def true_or_false :
      b : cic.Term univs.Type0 matita_basics_bool.bool ->
      cic.Term cic.prop
        (matita_basics_logic.Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b
              matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) b
              matita_basics_bool.false))
      :=
      b : cic.Term univs.Type0 matita_basics_bool.bool =>
      matita_basics_bool.match_bool cic.prop
        (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
         matita_basics_logic.Or
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) __
              matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool) __
              matita_basics_bool.false))
        (matita_basics_logic.or_introl
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true matita_basics_bool.false)
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.true))
        (matita_basics_relations.RC_reflexive matita_basics_bool.bool
           (__ : cic.Term univs.Type0 matita_basics_bool.bool =>
            _0 : cic.Term univs.Type0 matita_basics_bool.bool =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_basics_bool.bool)
              matita_basics_bool.false matita_basics_bool.true)
           matita_basics_bool.false)
        b.


