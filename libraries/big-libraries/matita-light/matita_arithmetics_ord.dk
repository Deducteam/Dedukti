(; This file was automatically generated from Matita. ;)

#NAME matita_arithmetics_ord.

def p_ord_aux :
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __2 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0
        (matita_basics_types.Prod matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat).

def p_ord_aux_body :
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __2 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0
        (matita_basics_types.Prod matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat).

[ __ ] p_ord_aux __ -->
  matita_arithmetics_nat.filter_nat univs.Type0
    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     cic.prod univs.Type0 univs.Type0 matita_arithmetics_nat.nat
       (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
        cic.prod univs.Type0 univs.Type0 matita_arithmetics_nat.nat
          (__2 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
           matita_basics_types.Prod matita_arithmetics_nat.nat
             matita_arithmetics_nat.nat)))
    matita_arithmetics_ord.p_ord_aux_body __.

[ __ ] p_ord_aux_body __ -->
  n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
  m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
  matita_arithmetics_nat.match_nat univs.Type0
    (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     matita_basics_types.Prod matita_arithmetics_nat.nat
       matita_arithmetics_nat.nat)
    (matita_arithmetics_nat.match_nat univs.Type0
       (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
        matita_basics_types.Prod matita_arithmetics_nat.nat
          matita_arithmetics_nat.nat)
       (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
          matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
       (p0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
        matita_basics_types.match_Prod matita_arithmetics_nat.nat
          matita_arithmetics_nat.nat univs.Type0
          (__1 :
             cic.Term univs.Type0
               (matita_basics_types.Prod matita_arithmetics_nat.nat
                  matita_arithmetics_nat.nat) =>
           matita_basics_types.Prod matita_arithmetics_nat.nat
             matita_arithmetics_nat.nat)
          (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
           r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
           matita_basics_types.mk_Prod matita_arithmetics_nat.nat
             matita_arithmetics_nat.nat (matita_arithmetics_nat.S q) r)
          (matita_arithmetics_ord.p_ord_aux p0
             (matita_arithmetics_div_and_mod.div n m) m))
       __)
    (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
     matita_basics_types.mk_Prod matita_arithmetics_nat.nat
       matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
    (matita_arithmetics_div_and_mod.mod n m).

def p_ord :
      _n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0
        (matita_basics_types.Prod matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat)
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_ord.p_ord_aux n n m.

def p_ord_aux_0 :
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord_aux matita_arithmetics_nat.O n m)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_nat.match_nat univs.Type0
              (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.match_nat univs.Type0
                 (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 (p0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.match_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat univs.Type0
                    (_0 :
                       cic.Term univs.Type0
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat) =>
                     matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat)
                    (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat
                       (matita_arithmetics_nat.S q) r)
                    (matita_arithmetics_ord.p_ord_aux p0
                       (matita_arithmetics_div_and_mod.div n m) m))
                 matita_arithmetics_nat.O)
              (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
              __)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
        (matita_basics_logic.refl
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
        (auto : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.refl
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
        (matita_arithmetics_div_and_mod.mod n m).

def p_ord_aux_Strue :
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_div_and_mod.mod n m)
             matita_arithmetics_nat.O) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord_aux p
                (matita_arithmetics_div_and_mod.div n m) m)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat q r)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord_aux (matita_arithmetics_nat.S p) n m)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_nat.S q) r))
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_div_and_mod.mod n m)
             matita_arithmetics_nat.O) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        matita_arithmetics_nat.O
        (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x matita_arithmetics_nat.O) =>
         cic.prod cic.prop cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_ord.p_ord_aux p
                 (matita_arithmetics_div_and_mod.div n m) m)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat q r))
           (__1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   (matita_arithmetics_ord.p_ord_aux p
                      (matita_arithmetics_div_and_mod.div n m) m)
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat q r)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_nat.match_nat univs.Type0
                 (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.match_nat univs.Type0
                    (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                    (p0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.match_Prod
                       matita_arithmetics_nat.nat matita_arithmetics_nat.nat
                       univs.Type0
                       (_0 :
                          cic.Term univs.Type0
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat) =>
                        matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat)
                       (q0 :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        r0 :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat
                          (matita_arithmetics_nat.S q0) r0)
                       (matita_arithmetics_ord.p_ord_aux p0
                          (matita_arithmetics_div_and_mod.div n m) m))
                    (matita_arithmetics_nat.S p))
                 (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 x)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat (matita_arithmetics_nat.S q) r)))
        (Hord :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat))
                (matita_arithmetics_ord.p_ord_aux p
                   (matita_arithmetics_div_and_mod.div n m) m)
                (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat q r)) =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat q r)
           (x :
              cic.Term univs.Type0
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat) =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   x
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat q r)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_basics_types.match_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat univs.Type0
                 (_0 :
                    cic.Term univs.Type0
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat) =>
                  matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat)
                 (q0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  r0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat (matita_arithmetics_nat.S q0)
                    r0)
                 x)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat (matita_arithmetics_nat.S q) r))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_basics_types.match_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat univs.Type0
                 (_0 :
                    cic.Term univs.Type0
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat) =>
                  matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat)
                 (q0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  r0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat (matita_arithmetics_nat.S q0)
                    r0)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat q r)))
           (matita_arithmetics_ord.p_ord_aux p
              (matita_arithmetics_div_and_mod.div n m) m)
           Hord)
        (matita_arithmetics_div_and_mod.mod n m) H.

def p_ord_aux_false :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      a : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_div_and_mod.mod n m)
             (matita_arithmetics_nat.S a)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord_aux p n m)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod cic.prop cic.prop
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.mod n m)
              (matita_arithmetics_nat.S a))
           (__1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   (matita_arithmetics_nat.S a)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_ord.p_ord_aux __ n m)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O n)))
        (H :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_div_and_mod.mod n m)
                (matita_arithmetics_nat.S a)) =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S a)
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   x (matita_arithmetics_nat.S a)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_nat.match_nat univs.Type0
                 (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.match_nat univs.Type0
                    (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                    (p0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.match_Prod
                       matita_arithmetics_nat.nat matita_arithmetics_nat.nat
                       univs.Type0
                       (_0 :
                          cic.Term univs.Type0
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat) =>
                        matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat)
                       (q :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        r :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat
                          (matita_arithmetics_nat.S q) r)
                       (matita_arithmetics_ord.p_ord_aux p0
                          (matita_arithmetics_div_and_mod.div n m) m))
                    matita_arithmetics_nat.O)
                 (a0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 x)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_nat.match_nat univs.Type0
                 (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.match_nat univs.Type0
                    (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                    (p0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.match_Prod
                       matita_arithmetics_nat.nat matita_arithmetics_nat.nat
                       univs.Type0
                       (_0 :
                          cic.Term univs.Type0
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat) =>
                        matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat)
                       (q :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        r :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat
                          (matita_arithmetics_nat.S q) r)
                       (matita_arithmetics_ord.p_ord_aux p0
                          (matita_arithmetics_div_and_mod.div n m) m))
                    matita_arithmetics_nat.O)
                 (a0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 (matita_arithmetics_nat.S a)))
           (matita_arithmetics_div_and_mod.mod n m) H)
        (p1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         H :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_div_and_mod.mod n m)
                (matita_arithmetics_nat.S a)) =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S a)
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   x (matita_arithmetics_nat.S a)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_nat.match_nat univs.Type0
                 (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.match_nat univs.Type0
                    (_0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                    (p0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.match_Prod
                       matita_arithmetics_nat.nat matita_arithmetics_nat.nat
                       univs.Type0
                       (_0 :
                          cic.Term univs.Type0
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat) =>
                        matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat)
                       (q :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        r :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat
                          (matita_arithmetics_nat.S q) r)
                       (matita_arithmetics_ord.p_ord_aux p0
                          (matita_arithmetics_div_and_mod.div n m) m))
                    (matita_arithmetics_nat.S p1))
                 (a0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 x)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_nat.match_nat univs.Type0
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.match_nat univs.Type0
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                    (p0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_types.match_Prod
                       matita_arithmetics_nat.nat matita_arithmetics_nat.nat
                       univs.Type0
                       (__ :
                          cic.Term univs.Type0
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat) =>
                        matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat)
                       (q :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        r :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat
                          (matita_arithmetics_nat.S q) r)
                       (matita_arithmetics_ord.p_ord_aux p0
                          (matita_arithmetics_div_and_mod.div n m) m))
                    (matita_arithmetics_nat.S p1))
                 (a0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 (matita_arithmetics_nat.S a)))
           (matita_arithmetics_div_and_mod.mod n m) H)
        p.

def p_ord_degenerate :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord_aux p n
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat p n))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_ord.p_ord_aux _x_365 n
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat _x_365 n)))
        (n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
           (__ :
              cic.Term univs.Type0
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat) =>
            cic.lift cic.prop univs.Type2
              ((x :
                  cic.Term univs.Type0
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat) =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2
                     (matita_basics_types.Prod matita_arithmetics_nat.nat
                        matita_arithmetics_nat.nat))
                  x
                  (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                     matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
           (matita_arithmetics_ord.p_ord_aux matita_arithmetics_nat.O n
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_arithmetics_ord.p_ord_aux_0 n
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (p1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord_aux p1 n
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat p1 n))) =>
         n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_nat.S p1)
              (matita_arithmetics_div_and_mod.div n
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (x :
              cic.Term univs.Type0
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat) =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   x
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat
                      (matita_arithmetics_nat.S p1)
                      (matita_arithmetics_div_and_mod.div n
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              x
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat (matita_arithmetics_nat.S p1) n))
           (matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div n
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_div_and_mod.mod n
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div n
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         (matita_arithmetics_div_and_mod.mod n
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)))) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat (matita_arithmetics_nat.S p1)
                    (matita_arithmetics_div_and_mod.div n
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat (matita_arithmetics_nat.S p1)
                    x))
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    (matita_arithmetics_div_and_mod.div n
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           (matita_basics_types.Prod
                              matita_arithmetics_nat.nat
                              matita_arithmetics_nat.nat))
                        (matita_basics_types.mk_Prod
                           matita_arithmetics_nat.nat
                           matita_arithmetics_nat.nat
                           (matita_arithmetics_nat.S p1)
                           (matita_arithmetics_div_and_mod.div n
                              (matita_arithmetics_nat.S
                                 matita_arithmetics_nat.O)))
                        (matita_basics_types.mk_Prod
                           matita_arithmetics_nat.nat
                           matita_arithmetics_nat.nat
                           (matita_arithmetics_nat.S p1)
                           (matita_arithmetics_nat.plus x
                              (matita_arithmetics_div_and_mod.mod n
                                 (matita_arithmetics_nat.S
                                    matita_arithmetics_nat.O)))))
                       __))
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              (matita_basics_types.Prod
                                 matita_arithmetics_nat.nat
                                 matita_arithmetics_nat.nat))
                           (matita_basics_types.mk_Prod
                              matita_arithmetics_nat.nat
                              matita_arithmetics_nat.nat
                              (matita_arithmetics_nat.S p1)
                              (matita_arithmetics_div_and_mod.div n
                                 (matita_arithmetics_nat.S
                                    matita_arithmetics_nat.O)))
                           (matita_basics_types.mk_Prod
                              matita_arithmetics_nat.nat
                              matita_arithmetics_nat.nat
                              (matita_arithmetics_nat.S p1)
                              (matita_arithmetics_nat.plus
                                 (matita_arithmetics_nat.times
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O)
                                    (matita_arithmetics_div_and_mod.div n
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)))
                                 x)))
                          __))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_div_and_mod.div n
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))))
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 (matita_basics_types.Prod
                                    matita_arithmetics_nat.nat
                                    matita_arithmetics_nat.nat))
                              (matita_basics_types.mk_Prod
                                 matita_arithmetics_nat.nat
                                 matita_arithmetics_nat.nat
                                 (matita_arithmetics_nat.S p1)
                                 (matita_arithmetics_div_and_mod.div n
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O)))
                              (matita_basics_types.mk_Prod
                                 matita_arithmetics_nat.nat
                                 matita_arithmetics_nat.nat
                                 (matita_arithmetics_nat.S p1) x))
                             __))
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_div_and_mod.div n
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    (matita_basics_types.Prod
                                       matita_arithmetics_nat.nat
                                       matita_arithmetics_nat.nat))
                                 (matita_basics_types.mk_Prod
                                    matita_arithmetics_nat.nat
                                    matita_arithmetics_nat.nat
                                    (matita_arithmetics_nat.S p1)
                                    (matita_arithmetics_div_and_mod.div n
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)))
                                 (matita_basics_types.mk_Prod
                                    matita_arithmetics_nat.nat
                                    matita_arithmetics_nat.nat
                                    (matita_arithmetics_nat.S p1) x))
                                __))
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_div_and_mod.div n
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       (matita_basics_types.Prod
                                          matita_arithmetics_nat.nat
                                          matita_arithmetics_nat.nat))
                                    (matita_basics_types.mk_Prod
                                       matita_arithmetics_nat.nat
                                       matita_arithmetics_nat.nat
                                       (matita_arithmetics_nat.S p1) x)
                                    (matita_basics_types.mk_Prod
                                       matita_arithmetics_nat.nat
                                       matita_arithmetics_nat.nat
                                       (matita_arithmetics_nat.S p1)
                                       (matita_arithmetics_nat.times
                                          (matita_arithmetics_nat.S
                                             matita_arithmetics_nat.O)
                                          (matita_arithmetics_div_and_mod.div
                                             n
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O)))))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift univs.Type0 univs.Type2
                                   (matita_basics_types.Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat))
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   (matita_arithmetics_nat.S p1)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_div_and_mod.div n
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))))
                             (matita_arithmetics_div_and_mod.div n
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div n
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.times
                                          (matita_arithmetics_nat.S
                                             matita_arithmetics_nat.O)
                                          (matita_arithmetics_div_and_mod.div
                                             n
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O)))
                                       x)
                                      __))
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_div_and_mod.div n
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_div_and_mod.div n
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times_n_1
                                   (matita_arithmetics_div_and_mod.div n
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))))
                          (matita_arithmetics_nat.plus
                             matita_arithmetics_nat.O
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_div_and_mod.div n
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))))
                          (matita_arithmetics_nat.plus_O_n
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_div_and_mod.div n
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_div_and_mod.div n
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_div_and_mod.div n
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          matita_arithmetics_nat.O))
                    (matita_arithmetics_div_and_mod.mod n
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_primes.divides_to_mod_O
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O) n
                       (matita_arithmetics_nat.lt_O_S
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_primes.divides_SO_n n)))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div n
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.commutative_times
                    (matita_arithmetics_div_and_mod.div n
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              n
              (matita_arithmetics_div_and_mod.div_mod n
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (matita_arithmetics_ord.p_ord_aux (matita_arithmetics_nat.S p1) n
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_arithmetics_ord.p_ord_aux_Strue n
              (matita_arithmetics_nat.S matita_arithmetics_nat.O) p1 p1
              (matita_arithmetics_div_and_mod.div n
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        x matita_arithmetics_nat.O)
                       __))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O)
                 (matita_arithmetics_div_and_mod.mod n
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_primes.divides_to_mod_O
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O) n
                    (matita_arithmetics_nat.lt_O_S matita_arithmetics_nat.O)
                    (matita_arithmetics_primes.divides_SO_n n)))
              (Hind
                 (matita_arithmetics_div_and_mod.div n
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
        p.

def p_ord_aux_to_exp :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord_aux p n m)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat q r)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
           (matita_arithmetics_nat.times (matita_arithmetics_exp.exp m q) r))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                    (r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
                       (__ :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt
                               matita_arithmetics_nat.O m) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                (matita_basics_types.Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat))
                             (matita_arithmetics_ord.p_ord_aux _x_365 n m)
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat q r))
                          (__1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_arithmetics_ord.p_ord_aux _x_365 n
                                     m)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat q r)) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             n
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m q) r))))))))
        (n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.nat_case
           (matita_arithmetics_div_and_mod.mod n m)
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
                    (__1 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                            m) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_arithmetics_ord.p_ord_aux
                             matita_arithmetics_nat.O n m)
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat q r))
                       (__2 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_arithmetics_ord.p_ord_aux
                                  matita_arithmetics_nat.O n m)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat q r)) =>
                        matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          n
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp m q) r))))))
           (Hmod :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   matita_arithmetics_nat.O) =>
            q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            posm :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
              (x :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      x
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat matita_arithmetics_nat.O
                         n)) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    x
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat q r))
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         x
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat q r)) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp m q) r)))
              (Hqr :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat matita_arithmetics_nat.O
                         n)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q r)) =>
               matita_basics_types.Prod_discr matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat q r)
                 Hqr
                 (cic.lift cic.prop univs.Type1
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m q) r)))
                 (e0 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_basics_logic.R0 matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O)
                         q) =>
                  matita_basics_logic.eq_ind
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     _x_2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            matita_arithmetics_nat.O x_1) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.O n)
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat x_1 r))
                       (__ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O n)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat x_1 r)) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_basics_logic.R1
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O
                                (x0 :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 p0 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        matita_arithmetics_nat.O x0) =>
                                 matita_arithmetics_nat.nat)
                                n x_1 _x_2)
                             r)
                          (_e1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_logic.R1
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O
                                     (x0 :
                                        cic.Term univs.Type0
                                          matita_arithmetics_nat.nat =>
                                      p0 :
                                        cic.Term cic.prop
                                          (matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             matita_arithmetics_nat.O x0) =>
                                      matita_arithmetics_nat.nat)
                                     n x_1 _x_2)
                                  r) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             n
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m x_1) r))))
                    (Hqr0 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O n)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O r)) =>
                     e00 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_basics_logic.R1
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               (x0 :
                                  cic.Term univs.Type0
                                    matita_arithmetics_nat.nat =>
                                p0 :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       matita_arithmetics_nat.O x0) =>
                                matita_arithmetics_nat.nat)
                               n matita_arithmetics_nat.O
                               (matita_basics_logic.refl
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O))
                            r) =>
                     matita_basics_logic.eq_ind_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       r
                       (x :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               x r) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.mod x m)
                             matita_arithmetics_nat.O)
                          (__1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_div_and_mod.mod x m)
                                  matita_arithmetics_nat.O) =>
                           cic.prod cic.prop cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   (matita_basics_types.Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat))
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O x)
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O r))
                             (__2 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        (matita_basics_types.Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat))
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.O x)
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.O r)) =>
                              matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m
                                      matita_arithmetics_nat.O)
                                   r))))
                       (Hmod0 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_div_and_mod.mod r m)
                               matita_arithmetics_nat.O) =>
                        Hqr1 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O r)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O r)) =>
                        matita_basics_logic.streicherK
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.O r)
                          (__ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.O r)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.O r)) =>
                           cic.lift cic.prop univs.Type2
                             ((__1 :
                                 cic.Term cic.prop
                                   (matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         (matita_basics_types.Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat))
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O r)
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O r)) =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 r
                                 (matita_arithmetics_nat.times
                                    (matita_arithmetics_exp.exp m
                                       matita_arithmetics_nat.O)
                                    r))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m
                                   matita_arithmetics_nat.O)
                                r)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    x
                                    (matita_arithmetics_nat.times
                                       (matita_arithmetics_exp.exp m
                                          matita_arithmetics_nat.O)
                                       r))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m
                                      matita_arithmetics_nat.O)
                                   r))
                             r
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus r
                                   matita_arithmetics_nat.O)
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       x
                                       (matita_arithmetics_nat.times
                                          (matita_arithmetics_exp.exp m
                                             matita_arithmetics_nat.O)
                                          r))
                                      __))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times
                                      matita_arithmetics_nat.O r)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.plus r x)
                                          (matita_arithmetics_nat.times
                                             (matita_arithmetics_exp.exp m
                                                matita_arithmetics_nat.O)
                                             r))
                                         __))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.plus r
                                                (matita_arithmetics_nat.times
                                                   matita_arithmetics_nat.O r))
                                             (matita_arithmetics_nat.times x
                                                r))
                                            __))
                                      (matita_arithmetics_nat.times_Sn_m
                                         matita_arithmetics_nat.O r)
                                      (matita_arithmetics_exp.exp m
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_exp.exp_n_O m))
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.times_O_n r))
                                r (matita_arithmetics_nat.plus_n_O r)))
                          Hqr1)
                       n e00 Hmod Hqr0)
                    q e0 Hqr))
              (matita_arithmetics_ord.p_ord_aux matita_arithmetics_nat.O n m)
              (matita_arithmetics_ord.p_ord_aux_0 n m))
           (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            H :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   (matita_arithmetics_nat.S a)) =>
            q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            posm :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
              (x :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      x
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat matita_arithmetics_nat.O
                         n)) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    x
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat q r))
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         x
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat q r)) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp m q) r)))
              (Hqr :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat matita_arithmetics_nat.O
                         n)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q r)) =>
               matita_basics_types.Prod_discr matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat q r)
                 Hqr
                 (cic.lift cic.prop univs.Type1
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m q) r)))
                 (e0 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_basics_logic.R0 matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O)
                         q) =>
                  matita_basics_logic.eq_ind
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     _x_2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            matita_arithmetics_nat.O x_1) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.O n)
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat x_1 r))
                       (__ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O n)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat x_1 r)) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_basics_logic.R1
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O
                                (x0 :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 p0 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        matita_arithmetics_nat.O x0) =>
                                 matita_arithmetics_nat.nat)
                                n x_1 _x_2)
                             r)
                          (_e1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_logic.R1
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O
                                     (x0 :
                                        cic.Term univs.Type0
                                          matita_arithmetics_nat.nat =>
                                      p0 :
                                        cic.Term cic.prop
                                          (matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             matita_arithmetics_nat.O x0) =>
                                      matita_arithmetics_nat.nat)
                                     n x_1 _x_2)
                                  r) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             n
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m x_1) r))))
                    (Hqr0 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O n)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O r)) =>
                     e00 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_basics_logic.R1
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               (x0 :
                                  cic.Term univs.Type0
                                    matita_arithmetics_nat.nat =>
                                p0 :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       matita_arithmetics_nat.O x0) =>
                                matita_arithmetics_nat.nat)
                               n matita_arithmetics_nat.O
                               (matita_basics_logic.refl
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O))
                            r) =>
                     matita_basics_logic.eq_ind_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       r
                       (x :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               x r) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.mod x m)
                             (matita_arithmetics_nat.S a))
                          (__1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_div_and_mod.mod x m)
                                  (matita_arithmetics_nat.S a)) =>
                           cic.prod cic.prop cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   (matita_basics_types.Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat))
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O x)
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O r))
                             (__2 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        (matita_basics_types.Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat))
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.O x)
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.O r)) =>
                              matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m
                                      matita_arithmetics_nat.O)
                                   r))))
                       (H0 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_div_and_mod.mod r m)
                               (matita_arithmetics_nat.S a)) =>
                        Hqr1 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O r)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O r)) =>
                        matita_basics_logic.streicherK
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.O r)
                          (__ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.O r)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.O r)) =>
                           cic.lift cic.prop univs.Type2
                             ((__1 :
                                 cic.Term cic.prop
                                   (matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         (matita_basics_types.Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat))
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O r)
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O r)) =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 r
                                 (matita_arithmetics_nat.times
                                    (matita_arithmetics_exp.exp m
                                       matita_arithmetics_nat.O)
                                    r))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m
                                   matita_arithmetics_nat.O)
                                r)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    x
                                    (matita_arithmetics_nat.times
                                       (matita_arithmetics_exp.exp m
                                          matita_arithmetics_nat.O)
                                       r))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m
                                      matita_arithmetics_nat.O)
                                   r))
                             r
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus r
                                   matita_arithmetics_nat.O)
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       x
                                       (matita_arithmetics_nat.times
                                          (matita_arithmetics_exp.exp m
                                             matita_arithmetics_nat.O)
                                          r))
                                      __))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times
                                      matita_arithmetics_nat.O r)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.plus r x)
                                          (matita_arithmetics_nat.times
                                             (matita_arithmetics_exp.exp m
                                                matita_arithmetics_nat.O)
                                             r))
                                         __))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.plus r
                                                (matita_arithmetics_nat.times
                                                   matita_arithmetics_nat.O r))
                                             (matita_arithmetics_nat.times x
                                                r))
                                            __))
                                      (matita_arithmetics_nat.times_Sn_m
                                         matita_arithmetics_nat.O r)
                                      (matita_arithmetics_exp.exp m
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_exp.exp_n_O m))
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.times_O_n r))
                                r (matita_arithmetics_nat.plus_n_O r)))
                          Hqr1)
                       n e00 H Hqr0)
                    q e0 Hqr))
              (matita_arithmetics_ord.p_ord_aux matita_arithmetics_nat.O n m)
              (matita_arithmetics_ord.p_ord_aux_false
                 matita_arithmetics_nat.O n m a H)))
        (p1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
            __1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   (matita_arithmetics_ord.p_ord_aux p1 n m)
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat q r)) ->
            cic.Term cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 n
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp m q) r))) =>
         n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.nat_case
           (matita_arithmetics_div_and_mod.mod n m)
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
                    (__1 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                            m) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_arithmetics_ord.p_ord_aux
                             (matita_arithmetics_nat.S p1) n m)
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat q r))
                       (__2 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_arithmetics_ord.p_ord_aux
                                  (matita_arithmetics_nat.S p1) n m)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat q r)) =>
                        matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          n
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp m q) r))))))
           (Hmod :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   matita_arithmetics_nat.O) =>
            q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            posm :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
            matita_basics_types.match_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat cic.prop
              (__ :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_arithmetics_ord.p_ord_aux p1
                       (matita_arithmetics_div_and_mod.div n m) m)
                    __)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_arithmetics_ord.p_ord_aux p1
                            (matita_arithmetics_div_and_mod.div n m) m)
                         __) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_arithmetics_ord.p_ord_aux
                          (matita_arithmetics_nat.S p1) n m)
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat q r))
                    (__2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_arithmetics_ord.p_ord_aux
                               (matita_arithmetics_nat.S p1) n m)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat q r)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m q) r))))
              (q1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               r1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               H1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_arithmetics_ord.p_ord_aux p1
                         (matita_arithmetics_div_and_mod.div n m) m)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q1 r1)) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat (matita_arithmetics_nat.S q1)
                    r1)
                 (x :
                    cic.Term univs.Type0
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat) =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         x
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S q1) r1)) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       x
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat q r))
                    (__1 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            x
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat q r)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m q) r)))
                 (H :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S q1) r1)
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat q r)) =>
                  matita_basics_types.Prod_discr matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat
                       (matita_arithmetics_nat.S q1) r1)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat q r)
                    H
                    (cic.lift cic.prop univs.Type1
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          n
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp m q) r)))
                    (e0 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_basics_logic.R0
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S q1))
                            q) =>
                     matita_basics_logic.eq_ind
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S q1)
                       (x_1 :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        _x_2 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S q1) x_1) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                (matita_basics_types.Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat))
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat
                                (matita_arithmetics_nat.S q1) r1)
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat x_1 r))
                          (__ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S q1) r1)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat x_1 r)) =>
                           cic.prod cic.prop cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_basics_logic.R1
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S q1)
                                   (x0 :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    p0 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S q1) x0) =>
                                    matita_arithmetics_nat.nat)
                                   r1 x_1 _x_2)
                                r)
                             (_e1 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_logic.R1
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S q1)
                                        (x0 :
                                           cic.Term univs.Type0
                                             matita_arithmetics_nat.nat =>
                                         p0 :
                                           cic.Term cic.prop
                                             (matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.S q1)
                                                x0) =>
                                         matita_arithmetics_nat.nat)
                                        r1 x_1 _x_2)
                                     r) =>
                              matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                n
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m x_1) r))))
                       (H0 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S q1) r1)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S q1) r)) =>
                        e00 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_basics_logic.R1
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S q1)
                                  (x0 :
                                     cic.Term univs.Type0
                                       matita_arithmetics_nat.nat =>
                                   p0 :
                                     cic.Term cic.prop
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.S q1) x0) =>
                                   matita_arithmetics_nat.nat)
                                  r1 (matita_arithmetics_nat.S q1)
                                  (matita_basics_logic.refl
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S q1)))
                               r) =>
                        matita_basics_logic.eq_ind_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          r
                          (x :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  x r) =>
                           cic.prod cic.prop cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   (matita_basics_types.Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat))
                                (matita_arithmetics_ord.p_ord_aux p1
                                   (matita_arithmetics_div_and_mod.div n m) m)
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat q1 x))
                             (__1 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        (matita_basics_types.Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat))
                                     (matita_arithmetics_ord.p_ord_aux p1
                                        (matita_arithmetics_div_and_mod.div n
                                           m)
                                        m)
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat q1 x)) =>
                              cic.prod cic.prop cic.prop
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      (matita_basics_types.Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat))
                                   (matita_basics_types.mk_Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat
                                      (matita_arithmetics_nat.S q1) x)
                                   (matita_basics_types.mk_Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat
                                      (matita_arithmetics_nat.S q1) r))
                                (__2 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           (matita_basics_types.Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat))
                                        (matita_basics_types.mk_Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.S q1) x)
                                        (matita_basics_types.mk_Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.S q1) r)) =>
                                 matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   n
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp m
                                         (matita_arithmetics_nat.S q1))
                                      r))))
                          (H10 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_arithmetics_ord.p_ord_aux p1
                                     (matita_arithmetics_div_and_mod.div n m)
                                     m)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat q1 r)) =>
                           H2 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S q1) r)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S q1) r)) =>
                           matita_basics_logic.streicherK
                             (cic.lift univs.Type0 univs.Type2
                                (matita_basics_types.Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat))
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat
                                (matita_arithmetics_nat.S q1) r)
                             (__ :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        (matita_basics_types.Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat))
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.S q1) r)
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.S q1) r)) =>
                              cic.lift cic.prop univs.Type2
                                ((__1 :
                                    cic.Term cic.prop
                                      (matita_basics_logic.eq
                                         (cic.lift univs.Type0 univs.Type2
                                            (matita_basics_types.Prod
                                               matita_arithmetics_nat.nat
                                               matita_arithmetics_nat.nat))
                                         (matita_basics_types.mk_Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat
                                            (matita_arithmetics_nat.S q1) r)
                                         (matita_basics_types.mk_Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat
                                            (matita_arithmetics_nat.S q1) r)) =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    n
                                    (matita_arithmetics_nat.times
                                       (matita_arithmetics_exp.exp m
                                          (matita_arithmetics_nat.S q1))
                                       r))
                                   __))
                             (matita_basics_logic.eq_ind_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div n m)
                                      m)
                                   (matita_arithmetics_div_and_mod.mod n m))
                                (x :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 __ :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div
                                                 n m)
                                              m)
                                           (matita_arithmetics_div_and_mod.mod
                                              n m))) =>
                                 matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_exp.exp m q1) m)
                                      r))
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   matita_arithmetics_nat.O
                                   (x :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           x matita_arithmetics_nat.O) =>
                                    matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               n m)
                                            m)
                                         x)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp m q1)
                                            m)
                                         r))
                                   (matita_basics_logic.eq_ind
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div
                                            n m)
                                         m)
                                      (x_1 :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       _x_2 :
                                         cic.Term cic.prop
                                           (matita_basics_logic.eq
                                              (cic.lift univs.Type0
                                                 univs.Type2
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.div
                                                    n m)
                                                 m)
                                              x_1) =>
                                       matita_basics_logic.eq
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         x_1
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_exp.exp m
                                                  q1)
                                               m)
                                            r))
                                      (matita_basics_logic.eq_ind_r
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp m q1)
                                            r)
                                         (x :
                                            cic.Term univs.Type0
                                              matita_arithmetics_nat.nat =>
                                          __ :
                                            cic.Term cic.prop
                                              (matita_basics_logic.eq
                                                 (cic.lift univs.Type0
                                                    univs.Type2
                                                    matita_arithmetics_nat.nat)
                                                 x
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_exp.exp
                                                       m q1)
                                                    r)) =>
                                          matita_basics_logic.eq
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times x m)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_exp.exp
                                                     m q1)
                                                  m)
                                               r))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times r
                                               (matita_arithmetics_exp.exp m
                                                  q1))
                                            (__ :
                                               cic.Term univs.Type0
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop univs.Type2
                                               ((x :
                                                   cic.Term univs.Type0
                                                     matita_arithmetics_nat.nat =>
                                                 matita_basics_logic.eq
                                                   (cic.lift univs.Type0
                                                      univs.Type2
                                                      matita_arithmetics_nat.nat)
                                                   (matita_arithmetics_nat.times
                                                      x m)
                                                   (matita_arithmetics_nat.times
                                                      (matita_arithmetics_nat.times
                                                         (matita_arithmetics_exp.exp
                                                            m q1)
                                                         m)
                                                      r))
                                                  __))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift univs.Type0
                                                  univs.Type2
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.times
                                                     r
                                                     (matita_arithmetics_exp.exp
                                                        m q1)))
                                               (__ :
                                                  cic.Term univs.Type0
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop univs.Type2
                                                  ((x :
                                                      cic.Term univs.Type0
                                                        matita_arithmetics_nat.nat =>
                                                    matita_basics_logic.eq
                                                      (cic.lift univs.Type0
                                                         univs.Type2
                                                         matita_arithmetics_nat.nat)
                                                      x
                                                      (matita_arithmetics_nat.times
                                                         (matita_arithmetics_nat.times
                                                            (matita_arithmetics_exp.exp
                                                               m q1)
                                                            m)
                                                         r))
                                                     __))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift univs.Type0
                                                     univs.Type2
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_exp.exp
                                                        m q1))
                                                  (__ :
                                                     cic.Term univs.Type0
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     univs.Type2
                                                     ((x :
                                                         cic.Term univs.Type0
                                                           matita_arithmetics_nat.nat =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            univs.Type0
                                                            univs.Type2
                                                            matita_arithmetics_nat.nat)
                                                         (matita_arithmetics_nat.times
                                                            m
                                                            (matita_arithmetics_nat.times
                                                               r
                                                               (matita_arithmetics_exp.exp
                                                                  m q1)))
                                                         (matita_arithmetics_nat.times
                                                            x r))
                                                        __))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift univs.Type0
                                                        univs.Type2
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        r
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           (matita_arithmetics_exp.exp
                                                              m q1)))
                                                     (__ :
                                                        cic.Term univs.Type0
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        univs.Type2
                                                        ((x :
                                                            cic.Term
                                                              univs.Type0
                                                              matita_arithmetics_nat.nat =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               univs.Type0
                                                               univs.Type2
                                                               matita_arithmetics_nat.nat)
                                                            (matita_arithmetics_nat.times
                                                               m
                                                               (matita_arithmetics_nat.times
                                                                  r
                                                                  (matita_arithmetics_exp.exp
                                                                    m q1)))
                                                            x)
                                                           __))
                                                     (matita_basics_logic.rewrite_r
                                                        (cic.lift univs.Type0
                                                           univs.Type2
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           (matita_arithmetics_nat.times
                                                              r
                                                              (matita_arithmetics_exp.exp
                                                                 m q1)))
                                                        (__ :
                                                           cic.Term
                                                             univs.Type0
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           univs.Type2
                                                           ((x :
                                                               cic.Term
                                                                 univs.Type0
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  univs.Type0
                                                                  univs.Type2
                                                                  matita_arithmetics_nat.nat)
                                                               (matita_arithmetics_nat.times
                                                                  m
                                                                  (matita_arithmetics_nat.times
                                                                    r
                                                                    (
                                                                   matita_arithmetics_exp.exp
                                                                    m q1)))
                                                               x)
                                                              __))
                                                        (matita_basics_logic.refl
                                                           (cic.lift
                                                              univs.Type0
                                                              univs.Type2
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.times
                                                              m
                                                              (matita_arithmetics_nat.times
                                                                 r
                                                                 (matita_arithmetics_exp.exp
                                                                    m q1))))
                                                        (matita_arithmetics_nat.times
                                                           r
                                                           (matita_arithmetics_nat.times
                                                              m
                                                              (matita_arithmetics_exp.exp
                                                                 m q1)))
                                                        (matita_arithmetics_nat.times_times
                                                           r m
                                                           (matita_arithmetics_exp.exp
                                                              m q1)))
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           (matita_arithmetics_exp.exp
                                                              m q1))
                                                        r)
                                                     (matita_arithmetics_nat.commutative_times
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           (matita_arithmetics_exp.exp
                                                              m q1))
                                                        r))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_exp.exp
                                                        m q1)
                                                     m)
                                                  (matita_arithmetics_nat.commutative_times
                                                     (matita_arithmetics_exp.exp
                                                        m q1)
                                                     m))
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     r
                                                     (matita_arithmetics_exp.exp
                                                        m q1))
                                                  m)
                                               (matita_arithmetics_nat.commutative_times
                                                  (matita_arithmetics_nat.times
                                                     r
                                                     (matita_arithmetics_exp.exp
                                                        m q1))
                                                  m))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_exp.exp m
                                                  q1)
                                               r)
                                            (matita_arithmetics_nat.commutative_times
                                               (matita_arithmetics_exp.exp m
                                                  q1)
                                               r))
                                         (matita_arithmetics_div_and_mod.div
                                            n m)
                                         (Hind
                                            (matita_arithmetics_div_and_mod.div
                                               n m)
                                            m q1 r posm H10))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               n m)
                                            m)
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.plus_n_O
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               n m)
                                            m)))
                                   (matita_arithmetics_div_and_mod.mod n m)
                                   Hmod)
                                n
                                (matita_arithmetics_div_and_mod.div_mod n m))
                             H2)
                          r1 e00 H1 H0)
                       q e0 H))
                 (matita_arithmetics_ord.p_ord_aux
                    (matita_arithmetics_nat.S p1) n m)
                 (matita_arithmetics_ord.p_ord_aux_Strue n m p1 q1 r1 Hmod H1))
              (matita_arithmetics_ord.p_ord_aux p1
                 (matita_arithmetics_div_and_mod.div n m) m)
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord_aux p1
                    (matita_arithmetics_div_and_mod.div n m) m)))
           (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            H :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   (matita_arithmetics_nat.S a)) =>
            q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            posm :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
              (x :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      x
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat matita_arithmetics_nat.O
                         n)) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    x
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat q r))
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         x
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat q r)) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp m q) r)))
              (Hqr :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat matita_arithmetics_nat.O
                         n)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q r)) =>
               matita_basics_types.Prod_discr matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat q r)
                 Hqr
                 (cic.lift cic.prop univs.Type1
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m q) r)))
                 (e0 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_basics_logic.R0 matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O)
                         q) =>
                  matita_basics_logic.eq_ind
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     _x_2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            matita_arithmetics_nat.O x_1) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.O n)
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat x_1 r))
                       (__ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O n)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat x_1 r)) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_basics_logic.R1
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O
                                (x0 :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 p0 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        matita_arithmetics_nat.O x0) =>
                                 matita_arithmetics_nat.nat)
                                n x_1 _x_2)
                             r)
                          (_e1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_logic.R1
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O
                                     (x0 :
                                        cic.Term univs.Type0
                                          matita_arithmetics_nat.nat =>
                                      p0 :
                                        cic.Term cic.prop
                                          (matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             matita_arithmetics_nat.O x0) =>
                                      matita_arithmetics_nat.nat)
                                     n x_1 _x_2)
                                  r) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             n
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m x_1) r))))
                    (Hqr0 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O n)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O r)) =>
                     e00 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_basics_logic.R1
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               (x0 :
                                  cic.Term univs.Type0
                                    matita_arithmetics_nat.nat =>
                                p0 :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       matita_arithmetics_nat.O x0) =>
                                matita_arithmetics_nat.nat)
                               n matita_arithmetics_nat.O
                               (matita_basics_logic.refl
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O))
                            r) =>
                     matita_basics_logic.eq_ind_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       r
                       (x :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               x r) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.mod x m)
                             (matita_arithmetics_nat.S a))
                          (__1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_div_and_mod.mod x m)
                                  (matita_arithmetics_nat.S a)) =>
                           cic.prod cic.prop cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   (matita_basics_types.Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat))
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O x)
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O r))
                             (__2 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        (matita_basics_types.Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat))
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.O x)
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.O r)) =>
                              matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m
                                      matita_arithmetics_nat.O)
                                   r))))
                       (H0 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_div_and_mod.mod r m)
                               (matita_arithmetics_nat.S a)) =>
                        Hqr1 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O r)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O r)) =>
                        matita_basics_logic.streicherK
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.O r)
                          (__ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.O r)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.O r)) =>
                           cic.lift cic.prop univs.Type2
                             ((__1 :
                                 cic.Term cic.prop
                                   (matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         (matita_basics_types.Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat))
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O r)
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O r)) =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 r
                                 (matita_arithmetics_nat.times
                                    (matita_arithmetics_exp.exp m
                                       matita_arithmetics_nat.O)
                                    r))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m
                                   matita_arithmetics_nat.O)
                                r)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    x
                                    (matita_arithmetics_nat.times
                                       (matita_arithmetics_exp.exp m
                                          matita_arithmetics_nat.O)
                                       r))
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m
                                      matita_arithmetics_nat.O)
                                   r))
                             r
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus r
                                   matita_arithmetics_nat.O)
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       x
                                       (matita_arithmetics_nat.times
                                          (matita_arithmetics_exp.exp m
                                             matita_arithmetics_nat.O)
                                          r))
                                      __))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times
                                      matita_arithmetics_nat.O r)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.plus r x)
                                          (matita_arithmetics_nat.times
                                             (matita_arithmetics_exp.exp m
                                                matita_arithmetics_nat.O)
                                             r))
                                         __))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.plus r
                                                (matita_arithmetics_nat.times
                                                   matita_arithmetics_nat.O r))
                                             (matita_arithmetics_nat.times x
                                                r))
                                            __))
                                      (matita_arithmetics_nat.times_Sn_m
                                         matita_arithmetics_nat.O r)
                                      (matita_arithmetics_exp.exp m
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_exp.exp_n_O m))
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.times_O_n r))
                                r (matita_arithmetics_nat.plus_n_O r)))
                          Hqr1)
                       n e00 H Hqr0)
                    q e0 Hqr))
              (matita_arithmetics_ord.p_ord_aux (matita_arithmetics_nat.S p1)
                 n m)
              (matita_arithmetics_ord.p_ord_aux_false
                 (matita_arithmetics_nat.S p1) n m a H)))
        p.

def p_ord_exp :
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.Not
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_div_and_mod.mod n m)
                matita_arithmetics_nat.O)) ->
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __2 : cic.Term cic.prop (matita_arithmetics_nat.le i p) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord_aux p
              (matita_arithmetics_nat.times (matita_arithmetics_exp.exp m i)
                 n)
              m)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat i n))
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      posm :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      Hmod :
        cic.Term cic.prop
          (matita_basics_logic.Not
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_div_and_mod.mod n m)
                matita_arithmetics_nat.O)) =>
      matita_basics_logic.match_ex matita_arithmetics_nat.nat
        (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_div_and_mod.mod n m)
           (matita_arithmetics_nat.S a))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.ex matita_arithmetics_nat.nat
                (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                 matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   (matita_arithmetics_nat.S a))) =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop (matita_arithmetics_nat.le i p)
              (__1 : cic.Term cic.prop (matita_arithmetics_nat.le i p) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord_aux p
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp m i) n)
                    m)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat i n))))
        (mod1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hmod1 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_div_and_mod.mod n m)
                (matita_arithmetics_nat.S mod1)) =>
         matita_arithmetics_nat.nat_ind
           (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_nat.le _x_365 p)
                 (__ :
                    cic.Term cic.prop (matita_arithmetics_nat.le _x_365 p) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_arithmetics_ord.p_ord_aux p
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m _x_365) n)
                       m)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat _x_365 n))))
           (p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            posp :
              cic.Term cic.prop
                (matita_arithmetics_nat.le matita_arithmetics_nat.O p) =>
            matita_basics_logic.eq_ind
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
              (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               _x_2 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      n x_1) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord_aux p x_1 m)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
              (matita_arithmetics_ord.p_ord_aux_false p n m mod1 Hmod1)
              (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
              (matita_arithmetics_nat.plus_n_O n))
           (i0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            Hind :
              (p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
               __ : cic.Term cic.prop (matita_arithmetics_nat.le i0 p) ->
               cic.Term cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_arithmetics_ord.p_ord_aux p
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m i0) n)
                       m)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat i0 n))) =>
            p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.nat_case p
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_nat.le (matita_arithmetics_nat.S i0) __)
                 (__1 :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.le
                         (matita_arithmetics_nat.S i0) __) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_arithmetics_ord.p_ord_aux __
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m
                             (matita_arithmetics_nat.S i0))
                          n)
                       m)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat
                       (matita_arithmetics_nat.S i0) n)))
              (Hp :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      p matita_arithmetics_nat.O) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         x matita_arithmetics_nat.O) =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_nat.le (matita_arithmetics_nat.S i0)
                       matita_arithmetics_nat.O)
                    (__1 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S i0)
                            matita_arithmetics_nat.O) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_arithmetics_ord.p_ord_aux
                          matita_arithmetics_nat.O
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp m
                                (matita_arithmetics_nat.S i0))
                             n)
                          m)
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat
                          (matita_arithmetics_nat.S i0) n)))
                 (Habs :
                    cic.Term cic.prop
                      (matita_arithmetics_nat.le
                         (matita_arithmetics_nat.S i0)
                         matita_arithmetics_nat.O) =>
                  matita_basics_logic.False_ind
                    (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_arithmetics_ord.p_ord_aux
                          matita_arithmetics_nat.O
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp m
                                (matita_arithmetics_nat.S i0))
                             n)
                          m)
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat
                          (matita_arithmetics_nat.S i0) n))
                    (matita_basics_logic.absurd
                       (matita_arithmetics_nat.le
                          (matita_arithmetics_nat.S i0)
                          matita_arithmetics_nat.O)
                       Habs (matita_arithmetics_nat.not_le_Sn_O i0)))
                 p Hp)
              (p1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               Hp1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      p (matita_arithmetics_nat.S p1)) =>
               lep1 :
                 cic.Term cic.prop
                   (matita_arithmetics_nat.le (matita_arithmetics_nat.S i0)
                      (matita_arithmetics_nat.S p1)) =>
               matita_arithmetics_ord.p_ord_aux_Strue
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp m
                       (matita_arithmetics_nat.S i0))
                    n)
                 m p1 i0 n
                 (matita_arithmetics_primes.divides_to_mod_O m
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m i0) m)
                       n)
                    posm
                    (matita_arithmetics_primes.quotient m
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp m i0) m)
                          n)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m i0) n)
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times m
                             (matita_arithmetics_exp.exp m i0))
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 (matita_arithmetics_nat.times x n)
                                 (matita_arithmetics_nat.times m
                                    (matita_arithmetics_nat.times
                                       (matita_arithmetics_exp.exp m i0) n)))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_exp.exp m i0)))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    x
                                    (matita_arithmetics_nat.times m
                                       (matita_arithmetics_nat.times
                                          (matita_arithmetics_exp.exp m i0) n)))
                                   __))
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_exp.exp m i0))
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.times n
                                          (matita_arithmetics_nat.times m
                                             (matita_arithmetics_exp.exp m i0)))
                                       (matita_arithmetics_nat.times m x))
                                      __))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_exp.exp m i0)))
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.times n
                                             (matita_arithmetics_nat.times m
                                                (matita_arithmetics_exp.exp m
                                                   i0)))
                                          x)
                                         __))
                                   (matita_basics_logic.refl
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times n
                                         (matita_arithmetics_nat.times m
                                            (matita_arithmetics_exp.exp m i0))))
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.times n
                                         (matita_arithmetics_exp.exp m i0)))
                                   (matita_arithmetics_nat.times_times m n
                                      (matita_arithmetics_exp.exp m i0)))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m i0) n)
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_exp.exp m i0) n))
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_exp.exp m i0))
                                n)
                             (matita_arithmetics_nat.commutative_times
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_exp.exp m i0))
                                n))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp m i0) m)
                          (matita_arithmetics_nat.commutative_times
                             (matita_arithmetics_exp.exp m i0) m))))
                 (matita_basics_logic.eq_ind
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_arithmetics_ord.p_ord_aux p1
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m i0) n)
                       m)
                    (x_1 :
                       cic.Term univs.Type0
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat) =>
                     _x_2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_arithmetics_ord.p_ord_aux p1
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_exp.exp m i0) n)
                               m)
                            x_1) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_arithmetics_ord.p_ord_aux p1
                          (matita_arithmetics_div_and_mod.div
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m
                                   (matita_arithmetics_nat.S i0))
                                n)
                             m)
                          m)
                       x_1)
                    (matita_basics_logic.eq_f2
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_arithmetics_ord.p_ord_aux p1)
                       (matita_arithmetics_div_and_mod.div
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp m
                                (matita_arithmetics_nat.S i0))
                             n)
                          m)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp m i0) n)
                       m m
                       (matita_basics_logic.eq_ind_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp m i0)
                             (matita_arithmetics_nat.times m n))
                          (x :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_exp.exp m i0)
                                     (matita_arithmetics_nat.times m n))) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.div x m)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m i0) n))
                          (matita_basics_logic.eq_ind_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times n m)
                             (x :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     x (matita_arithmetics_nat.times n m)) =>
                              matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_div_and_mod.div
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp m i0) x)
                                   m)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m i0) n))
                             (matita_basics_logic.eq_ind
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp m i0) n)
                                   m)
                                (x_1 :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_exp.exp m
                                                 i0)
                                              n)
                                           m)
                                        x_1) =>
                                 matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_div_and_mod.div x_1 m)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp m i0) n))
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp m i0) n)
                                   (x :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_exp.exp m
                                                 i0)
                                              n)) =>
                                    matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      x
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_exp.exp m i0) n))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times n
                                         (matita_arithmetics_exp.exp m i0))
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             x
                                             (matita_arithmetics_nat.times
                                                (matita_arithmetics_exp.exp m
                                                   i0)
                                                n))
                                            __))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times n
                                            (matita_arithmetics_exp.exp m i0))
                                         (__ :
                                            cic.Term univs.Type0
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop univs.Type2
                                            ((x :
                                                cic.Term univs.Type0
                                                  matita_arithmetics_nat.nat =>
                                              matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.times
                                                   n
                                                   (matita_arithmetics_exp.exp
                                                      m i0))
                                                x)
                                               __))
                                         (matita_basics_logic.refl
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times n
                                               (matita_arithmetics_exp.exp m
                                                  i0)))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp m i0)
                                            n)
                                         (matita_arithmetics_nat.commutative_times
                                            (matita_arithmetics_exp.exp m i0)
                                            n))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_exp.exp m i0) n)
                                      (matita_arithmetics_nat.commutative_times
                                         (matita_arithmetics_exp.exp m i0) n))
                                   (matita_arithmetics_div_and_mod.div
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp m i0)
                                            n)
                                         m)
                                      m)
                                   (matita_arithmetics_div_and_mod.div_times
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_exp.exp m i0) n)
                                      m posm))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp m i0)
                                   (matita_arithmetics_nat.times n m))
                                (matita_arithmetics_nat.associative_times
                                   (matita_arithmetics_exp.exp m i0) n m))
                             (matita_arithmetics_nat.times m n)
                             (matita_arithmetics_nat.commutative_times m n))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp m i0) m)
                             n)
                          (matita_arithmetics_nat.associative_times
                             (matita_arithmetics_exp.exp m i0) m n))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          m))
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat i0 n)
                    (Hind p1 (matita_arithmetics_nat.le_S_S_to_le i0 p1 lep1)))))
           i)
        (matita_arithmetics_nat.nat_case
           (matita_arithmetics_div_and_mod.mod n m)
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            matita_basics_logic.ex matita_arithmetics_nat.nat
              (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 __ (matita_arithmetics_nat.S a)))
           (H :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   matita_arithmetics_nat.O) =>
            matita_basics_logic.False_ind
              (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
               matita_basics_logic.ex matita_arithmetics_nat.nat
                 (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O (matita_arithmetics_nat.S a)))
              (matita_basics_logic.absurd
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.mod n m)
                    matita_arithmetics_nat.O)
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           x matita_arithmetics_nat.O)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O)
                    (matita_arithmetics_div_and_mod.mod n m) H)
                 Hmod))
           (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            Hmod1 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   (matita_arithmetics_nat.S a)) =>
            matita_basics_logic.ex_intro matita_arithmetics_nat.nat
              (a0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S a) (matita_arithmetics_nat.S a0))
              a
              (matita_basics_logic.rewrite_l
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_div_and_mod.mod n m)
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        x (matita_arithmetics_nat.S a))
                       __))
                 (matita_basics_logic.rewrite_l
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.mod n m)
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           (matita_arithmetics_div_and_mod.mod n m) x)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.mod n m))
                    (matita_arithmetics_nat.S a) Hmod1)
                 (matita_arithmetics_nat.S a) Hmod1))).

def p_ord_aux_to_not_mod_O :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) m) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      __2 : cic.Term cic.prop (matita_arithmetics_nat.le n p) ->
      __3 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord_aux p n m)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat q r)) ->
      cic.Term cic.prop
        (matita_basics_logic.Not
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.mod r m)
              matita_arithmetics_nat.O))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                    (r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          m)
                       (__ :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O)
                               m) =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                             n)
                          (__1 :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.lt
                                  matita_arithmetics_nat.O n) =>
                           cic.prod cic.prop cic.prop
                             (matita_arithmetics_nat.le n _x_365)
                             (__2 :
                                cic.Term cic.prop
                                  (matita_arithmetics_nat.le n _x_365) =>
                              cic.prod cic.prop cic.prop
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      (matita_basics_types.Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat))
                                   (matita_arithmetics_ord.p_ord_aux _x_365 n
                                      m)
                                   (matita_basics_types.mk_Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat q r))
                                (__3 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           (matita_basics_types.Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat))
                                        (matita_arithmetics_ord.p_ord_aux
                                           _x_365 n m)
                                        (matita_basics_types.mk_Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat q r)) =>
                                 matita_basics_logic.Not
                                   (matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_div_and_mod.mod r m)
                                      matita_arithmetics_nat.O))))))))))
        (n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt
                (matita_arithmetics_nat.S matita_arithmetics_nat.O) m) =>
         posn :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
         nposn :
           cic.Term cic.prop
             (matita_arithmetics_nat.le n matita_arithmetics_nat.O) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord_aux matita_arithmetics_nat.O n
                    m)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat q r))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_arithmetics_ord.p_ord_aux
                         matita_arithmetics_nat.O n m)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q r)) =>
               matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.mod r m)
                    matita_arithmetics_nat.O)))
           (matita_basics_logic.absurd
              (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) posn
              (matita_arithmetics_nat.le_to_not_lt n matita_arithmetics_nat.O
                 nposn)))
        (p1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         Hind :
           (n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
            __ :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O) m) ->
            __1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
            __2 : cic.Term cic.prop (matita_arithmetics_nat.le n p1) ->
            __3 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   (matita_arithmetics_ord.p_ord_aux p1 n m)
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat q r)) ->
            cic.Term cic.prop
              (matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.mod r m)
                    matita_arithmetics_nat.O))) =>
         n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.nat_case
           (matita_arithmetics_div_and_mod.mod n m)
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
              (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
                 (r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_nat.lt
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
                    (__1 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)
                            m) =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.lt matita_arithmetics_nat.O n)
                       (__2 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          (matita_arithmetics_nat.le n
                             (matita_arithmetics_nat.S p1))
                          (__3 :
                             cic.Term cic.prop
                               (matita_arithmetics_nat.le n
                                  (matita_arithmetics_nat.S p1)) =>
                           cic.prod cic.prop cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   (matita_basics_types.Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat))
                                (matita_arithmetics_ord.p_ord_aux
                                   (matita_arithmetics_nat.S p1) n m)
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat q r))
                             (__4 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        (matita_basics_types.Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat))
                                     (matita_arithmetics_ord.p_ord_aux
                                        (matita_arithmetics_nat.S p1) n m)
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat q r)) =>
                              matita_basics_logic.Not
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_div_and_mod.mod r m)
                                   matita_arithmetics_nat.O))))))))
           (Hmod :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   matita_arithmetics_nat.O) =>
            q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            lt1m :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O) m) =>
            posn :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
            len :
              cic.Term cic.prop
                (matita_arithmetics_nat.le n (matita_arithmetics_nat.S p1)) =>
            matita_basics_types.match_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat cic.prop
              (__ :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_arithmetics_ord.p_ord_aux p1
                       (matita_arithmetics_div_and_mod.div n m) m)
                    __)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_arithmetics_ord.p_ord_aux p1
                            (matita_arithmetics_div_and_mod.div n m) m)
                         __) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_arithmetics_ord.p_ord_aux
                          (matita_arithmetics_nat.S p1) n m)
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat q r))
                    (__2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_arithmetics_ord.p_ord_aux
                               (matita_arithmetics_nat.S p1) n m)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat q r)) =>
                     matita_basics_logic.Not
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.mod r m)
                          matita_arithmetics_nat.O))))
              (q1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               r1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               H1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_arithmetics_ord.p_ord_aux p1
                         (matita_arithmetics_div_and_mod.div n m) m)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q1 r1)) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat (matita_arithmetics_nat.S q1)
                    r1)
                 (x :
                    cic.Term univs.Type0
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat) =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         x
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S q1) r1)) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       x
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat q r))
                    (__1 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            x
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat q r)) =>
                     matita_basics_logic.Not
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.mod r m)
                          matita_arithmetics_nat.O)))
                 (H :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S q1) r1)
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat q r)) =>
                  matita_basics_types.Prod_discr matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat
                       (matita_arithmetics_nat.S q1) r1)
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat q r)
                    H
                    (cic.lift cic.prop univs.Type1
                       (matita_basics_logic.Not
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.mod r m)
                             matita_arithmetics_nat.O)))
                    (e0 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_basics_logic.R0
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S q1))
                            q) =>
                     matita_basics_logic.eq_ind
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S q1)
                       (x_1 :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        _x_2 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S q1) x_1) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                (matita_basics_types.Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat))
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat
                                (matita_arithmetics_nat.S q1) r1)
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat x_1 r))
                          (__ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S q1) r1)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat x_1 r)) =>
                           cic.prod cic.prop cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_basics_logic.R1
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S q1)
                                   (x0 :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    p0 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S q1) x0) =>
                                    matita_arithmetics_nat.nat)
                                   r1 x_1 _x_2)
                                r)
                             (_e1 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_logic.R1
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S q1)
                                        (x0 :
                                           cic.Term univs.Type0
                                             matita_arithmetics_nat.nat =>
                                         p0 :
                                           cic.Term cic.prop
                                             (matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.S q1)
                                                x0) =>
                                         matita_arithmetics_nat.nat)
                                        r1 x_1 _x_2)
                                     r) =>
                              matita_basics_logic.Not
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_div_and_mod.mod r m)
                                   matita_arithmetics_nat.O))))
                       (H0 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S q1) r1)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S q1) r)) =>
                        e00 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_basics_logic.R1
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S q1)
                                  (x0 :
                                     cic.Term univs.Type0
                                       matita_arithmetics_nat.nat =>
                                   p0 :
                                     cic.Term cic.prop
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.S q1) x0) =>
                                   matita_arithmetics_nat.nat)
                                  r1 (matita_arithmetics_nat.S q1)
                                  (matita_basics_logic.refl
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S q1)))
                               r) =>
                        matita_basics_logic.eq_ind_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          r
                          (x :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  x r) =>
                           cic.prod cic.prop cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   (matita_basics_types.Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat))
                                (matita_arithmetics_ord.p_ord_aux p1
                                   (matita_arithmetics_div_and_mod.div n m) m)
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat q1 x))
                             (__1 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        (matita_basics_types.Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat))
                                     (matita_arithmetics_ord.p_ord_aux p1
                                        (matita_arithmetics_div_and_mod.div n
                                           m)
                                        m)
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat q1 x)) =>
                              cic.prod cic.prop cic.prop
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      (matita_basics_types.Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat))
                                   (matita_basics_types.mk_Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat
                                      (matita_arithmetics_nat.S q1) x)
                                   (matita_basics_types.mk_Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat
                                      (matita_arithmetics_nat.S q1) r))
                                (__2 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           (matita_basics_types.Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat))
                                        (matita_basics_types.mk_Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.S q1) x)
                                        (matita_basics_types.mk_Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat
                                           (matita_arithmetics_nat.S q1) r)) =>
                                 matita_basics_logic.Not
                                   (matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_div_and_mod.mod r m)
                                      matita_arithmetics_nat.O))))
                          (H10 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_arithmetics_ord.p_ord_aux p1
                                     (matita_arithmetics_div_and_mod.div n m)
                                     m)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat q1 r)) =>
                           H2 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S q1) r)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S q1) r)) =>
                           matita_basics_logic.streicherK
                             (cic.lift univs.Type0 univs.Type2
                                (matita_basics_types.Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat))
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat
                                (matita_arithmetics_nat.S q1) r)
                             (__ :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        (matita_basics_types.Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat))
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.S q1) r)
                                     (matita_basics_types.mk_Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat
                                        (matita_arithmetics_nat.S q1) r)) =>
                              cic.lift cic.prop univs.Type2
                                ((__1 :
                                    cic.Term cic.prop
                                      (matita_basics_logic.eq
                                         (cic.lift univs.Type0 univs.Type2
                                            (matita_basics_types.Prod
                                               matita_arithmetics_nat.nat
                                               matita_arithmetics_nat.nat))
                                         (matita_basics_types.mk_Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat
                                            (matita_arithmetics_nat.S q1) r)
                                         (matita_basics_types.mk_Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat
                                            (matita_arithmetics_nat.S q1) r)) =>
                                  matita_basics_logic.Not
                                    (matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_div_and_mod.mod r
                                          m)
                                       matita_arithmetics_nat.O))
                                   __))
                             (Hind (matita_arithmetics_div_and_mod.div n m) m
                                q1 r lt1m
                                (matita_arithmetics_div_and_mod.pos_div n m
                                   (matita_arithmetics_nat.lt_to_le
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      m lt1m)
                                   posn Hmod)
                                (matita_arithmetics_nat.le_S_S_to_le
                                   (matita_arithmetics_div_and_mod.div n m)
                                   p1
                                   (matita_arithmetics_nat.transitive_le
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_div_and_mod.div
                                            n m))
                                      n (matita_arithmetics_nat.S p1)
                                      (matita_arithmetics_div_and_mod.lt_times_to_lt_div
                                         n n m
                                         (matita_basics_logic.eq_ind_r
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times n
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (x :
                                               cic.Term univs.Type0
                                                 matita_arithmetics_nat.nat =>
                                             __ :
                                               cic.Term cic.prop
                                                 (matita_basics_logic.eq
                                                    (cic.lift univs.Type0
                                                       univs.Type2
                                                       matita_arithmetics_nat.nat)
                                                    x
                                                    (matita_arithmetics_nat.times
                                                       n
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))) =>
                                             matita_arithmetics_nat.lt x
                                               (matita_arithmetics_nat.times
                                                  n m))
                                            (matita_arithmetics_nat.monotonic_lt_times_r
                                               n posn
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               m lt1m)
                                            n
                                            (matita_arithmetics_nat.times_n_1
                                               n)))
                                      len))
                                H10)
                             H2)
                          r1 e00 H1 H0)
                       q e0 H))
                 (matita_arithmetics_ord.p_ord_aux
                    (matita_arithmetics_nat.S p1) n m)
                 (matita_arithmetics_ord.p_ord_aux_Strue n m p1 q1 r1 Hmod H1))
              (matita_arithmetics_ord.p_ord_aux p1
                 (matita_arithmetics_div_and_mod.div n m) m)
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord_aux p1
                    (matita_arithmetics_div_and_mod.div n m) m)))
           (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            H :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.mod n m)
                   (matita_arithmetics_nat.S a)) =>
            q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            lt1m :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O) m) =>
            posn :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
            posm :
              cic.Term cic.prop
                (matita_arithmetics_nat.le n (matita_arithmetics_nat.S p1)) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
              (x :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      x
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat matita_arithmetics_nat.O
                         n)) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    x
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat q r))
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         x
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat q r)) =>
                  matita_basics_logic.Not
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.mod r m)
                       matita_arithmetics_nat.O)))
              (Hqr :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat matita_arithmetics_nat.O
                         n)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q r)) =>
               matita_basics_types.Prod_discr matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat matita_arithmetics_nat.O n)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat q r)
                 Hqr
                 (cic.lift cic.prop univs.Type1
                    (matita_basics_logic.Not
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.mod r m)
                          matita_arithmetics_nat.O)))
                 (e0 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_basics_logic.R0 matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O)
                         q) =>
                  matita_basics_logic.eq_ind
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     _x_2 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            matita_arithmetics_nat.O x_1) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.O n)
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat x_1 r))
                       (__ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O n)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat x_1 r)) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_basics_logic.R1
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O
                                (x0 :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 p0 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        matita_arithmetics_nat.O x0) =>
                                 matita_arithmetics_nat.nat)
                                n x_1 _x_2)
                             r)
                          (_e1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_logic.R1
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O
                                     (x0 :
                                        cic.Term univs.Type0
                                          matita_arithmetics_nat.nat =>
                                      p0 :
                                        cic.Term cic.prop
                                          (matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             matita_arithmetics_nat.O x0) =>
                                      matita_arithmetics_nat.nat)
                                     n x_1 _x_2)
                                  r) =>
                           matita_basics_logic.Not
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_div_and_mod.mod r m)
                                matita_arithmetics_nat.O))))
                    (Hqr0 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O n)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O r)) =>
                     e00 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_basics_logic.R1
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               (x0 :
                                  cic.Term univs.Type0
                                    matita_arithmetics_nat.nat =>
                                p0 :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       matita_arithmetics_nat.O x0) =>
                                matita_arithmetics_nat.nat)
                               n matita_arithmetics_nat.O
                               (matita_basics_logic.refl
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O))
                            r) =>
                     matita_basics_logic.eq_ind_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       r
                       (x :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               x r) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.mod x m)
                             (matita_arithmetics_nat.S a))
                          (__1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_div_and_mod.mod x m)
                                  (matita_arithmetics_nat.S a)) =>
                           cic.prod cic.prop cic.prop
                             (matita_arithmetics_nat.lt
                                matita_arithmetics_nat.O x)
                             (__2 :
                                cic.Term cic.prop
                                  (matita_arithmetics_nat.lt
                                     matita_arithmetics_nat.O x) =>
                              cic.prod cic.prop cic.prop
                                (matita_arithmetics_nat.le x
                                   (matita_arithmetics_nat.S p1))
                                (__3 :
                                   cic.Term cic.prop
                                     (matita_arithmetics_nat.le x
                                        (matita_arithmetics_nat.S p1)) =>
                                 cic.prod cic.prop cic.prop
                                   (matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         (matita_basics_types.Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat))
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O x)
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O r))
                                   (__4 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              (matita_basics_types.Prod
                                                 matita_arithmetics_nat.nat
                                                 matita_arithmetics_nat.nat))
                                           (matita_basics_types.mk_Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.O x)
                                           (matita_basics_types.mk_Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.O r)) =>
                                    matita_basics_logic.Not
                                      (matita_basics_logic.eq
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_div_and_mod.mod
                                            r m)
                                         matita_arithmetics_nat.O))))))
                       (H0 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_div_and_mod.mod r m)
                               (matita_arithmetics_nat.S a)) =>
                        posn0 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.lt
                               matita_arithmetics_nat.O r) =>
                        posm0 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.le r
                               (matita_arithmetics_nat.S p1)) =>
                        Hqr1 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O r)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.O r)) =>
                        matita_basics_logic.streicherK
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.O r)
                          (__ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.O r)
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.O r)) =>
                           cic.lift cic.prop univs.Type2
                             ((__1 :
                                 cic.Term cic.prop
                                   (matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         (matita_basics_types.Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat))
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O r)
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.O r)) =>
                               matita_basics_logic.Not
                                 (matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    (matita_arithmetics_div_and_mod.mod r m)
                                    matita_arithmetics_nat.O))
                                __))
                          (matita_basics_logic.eq_ind_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S a)
                             (x :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     x (matita_arithmetics_nat.S a)) =>
                              matita_basics_logic.Not
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   x matita_arithmetics_nat.O))
                             (matita_basics_logic.sym_not_eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O
                                (matita_arithmetics_nat.S a)
                                (matita_arithmetics_nat.not_eq_O_S a))
                             (matita_arithmetics_div_and_mod.mod r m) H0)
                          Hqr1)
                       n e00 H posn posm Hqr0)
                    q e0 Hqr))
              (matita_arithmetics_ord.p_ord_aux (matita_arithmetics_nat.S p1)
                 n m)
              (matita_arithmetics_ord.p_ord_aux_false
                 (matita_arithmetics_nat.S p1) n m a H)))
        p.

def let_clause_1033 :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      posp :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O p) ->
      ndivpr :
        cic.Term cic.prop
          (matita_basics_logic.Not (matita_arithmetics_primes.divides p r)) ->
      Hn :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
             (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p q) r)) ->
      q0 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      Hind :
        cic.Term cic.prop
          (matita_arithmetics_nat.le (matita_arithmetics_nat.S q1)
             (matita_arithmetics_exp.exp p (matita_arithmetics_nat.S q1))) ->
      x2515 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x2516 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           x2515
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times x2516
                 (matita_arithmetics_div_and_mod.div x2515 x2516))
              (matita_arithmetics_div_and_mod.mod x2515 x2516)))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      posp :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O p) =>
      ndivpr :
        cic.Term cic.prop
          (matita_basics_logic.Not (matita_arithmetics_primes.divides p r)) =>
      Hn :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
             (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p q) r)) =>
      q0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      q1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      Hind :
        cic.Term cic.prop
          (matita_arithmetics_nat.le (matita_arithmetics_nat.S q1)
             (matita_arithmetics_exp.exp p (matita_arithmetics_nat.S q1))) =>
      x2515 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      x2516 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_logic.rewrite_l
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times
           (matita_arithmetics_div_and_mod.div x2515 x2516) x2516)
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.lift cic.prop univs.Type2
           ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
             matita_basics_logic.eq
               (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
               x2515
               (matita_arithmetics_nat.plus x
                  (matita_arithmetics_div_and_mod.mod x2515 x2516)))
              __))
        (matita_arithmetics_div_and_mod.div_mod x2515 x2516)
        (matita_arithmetics_nat.times x2516
           (matita_arithmetics_div_and_mod.div x2515 x2516))
        (matita_arithmetics_nat.commutative_times
           (matita_arithmetics_div_and_mod.div x2515 x2516) x2516).

def p_ord_exp1 :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O p) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.Not (matita_arithmetics_primes.divides p r)) ->
      __2 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
             (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p q) r)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord n p)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat q r))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      posp :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O p) =>
      ndivpr :
        cic.Term cic.prop
          (matita_basics_logic.Not (matita_arithmetics_primes.divides p r)) =>
      Hn :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
             (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p q) r)) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p q) r)
        (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_nat.times
                   (matita_arithmetics_exp.exp p q) r)) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord x p)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat q r))
        (matita_arithmetics_ord.p_ord_exp r p q posp
           (matita_basics_logic.not_to_not
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_div_and_mod.mod r p)
                 matita_arithmetics_nat.O)
              (matita_arithmetics_primes.divides p r)
              (auto :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_div_and_mod.mod r p)
                      matita_arithmetics_nat.O) =>
               matita_basics_logic.eq_coerc
                 (cic.lift cic.prop univs.Type0
                    (matita_arithmetics_primes.divides p
                       (matita_arithmetics_nat.minus r
                          matita_arithmetics_nat.O)))
                 (cic.lift cic.prop univs.Type0
                    (matita_arithmetics_primes.divides p r))
                 (matita_arithmetics_primes.eq_mod_to_divides r
                    matita_arithmetics_nat.O p posp
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              x
                              (matita_arithmetics_div_and_mod.mod
                                 matita_arithmetics_nat.O p))
                             __))
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.O
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O x)
                                __))
                          (matita_basics_logic.refl
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O)
                          (matita_arithmetics_div_and_mod.mod
                             matita_arithmetics_nat.O p)
                          (matita_arithmetics_div_and_mod.mod_O_n p))
                       (matita_arithmetics_div_and_mod.mod r p) auto))
                 (matita_basics_logic.rewrite_l
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    r
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift (cic.succ univs.Type0) univs.Type2
                              (cic.univ univs.Type0))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_primes.divides p x))
                           (cic.lift cic.prop univs.Type0
                              (matita_arithmetics_primes.divides p r)))
                          __))
                    (matita_basics_logic.refl
                       (cic.lift (cic.succ univs.Type0) univs.Type2
                          (cic.univ univs.Type0))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_primes.divides p r)))
                    (matita_arithmetics_nat.minus r matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.minus_n_O r)))
              ndivpr)
           (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p q) r)
           (matita_arithmetics_nat.transitive_le q
              (matita_arithmetics_exp.exp p q)
              (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p q)
                 r)
              (matita_arithmetics_nat.nat_ind
                 (_x_365 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.le _x_365
                    (matita_arithmetics_exp.exp p _x_365))
                 (matita_arithmetics_nat.le_O_n
                    (matita_arithmetics_exp.exp p matita_arithmetics_nat.O))
                 (q0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.match_nat cic.prop
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       (matita_arithmetics_nat.le __
                          (matita_arithmetics_exp.exp p __))
                       (_x_368 :
                          cic.Term cic.prop
                            (matita_arithmetics_nat.le __
                               (matita_arithmetics_exp.exp p __)) =>
                        matita_arithmetics_nat.le
                          (matita_arithmetics_nat.S __)
                          (matita_arithmetics_exp.exp p
                             (matita_arithmetics_nat.S __))))
                    (__ :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.le matita_arithmetics_nat.O
                            (matita_arithmetics_exp.exp p
                               matita_arithmetics_nat.O)) =>
                     matita_basics_logic.eq_ind
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       p
                       (x_1 :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        _x_2 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               p x_1) =>
                        matita_arithmetics_nat.le
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          x_1)
                       (matita_arithmetics_nat.lt_to_le
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          p
                          (matita_basics_logic.match_Or
                             (matita_arithmetics_nat.lt
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                p)
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                p)
                             cic.prop
                             (_0 :
                                cic.Term cic.prop
                                  (matita_basics_logic.Or
                                     (matita_arithmetics_nat.lt
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        p)
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        p)) =>
                              matita_arithmetics_nat.lt
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                p)
                             (auto :
                                cic.Term cic.prop
                                  (matita_arithmetics_nat.lt
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)
                                     p) =>
                              auto)
                             (eqp1 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)
                                     p) =>
                              matita_basics_logic.False_ind
                                (_x_66 :
                                   cic.Term cic.prop
                                     matita_basics_logic.False =>
                                 matita_arithmetics_nat.lt
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   p)
                                (matita_basics_logic.absurd
                                   (matita_arithmetics_primes.divides p r)
                                   (matita_basics_logic.eq_ind
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (x_1 :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       _x_2 :
                                         cic.Term cic.prop
                                           (matita_basics_logic.eq
                                              (cic.lift univs.Type0
                                                 univs.Type2
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              x_1) =>
                                       matita_arithmetics_primes.divides x_1
                                         r)
                                      (matita_arithmetics_primes.quotient
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         r r
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            p
                                            (__1 :
                                               cic.Term univs.Type0
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop univs.Type2
                                               ((x :
                                                   cic.Term univs.Type0
                                                     matita_arithmetics_nat.nat =>
                                                 matita_basics_logic.eq
                                                   (cic.lift univs.Type0
                                                      univs.Type2
                                                      matita_arithmetics_nat.nat)
                                                   r
                                                   (matita_arithmetics_nat.times
                                                      x r))
                                                  __1))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift univs.Type0
                                                  univs.Type2
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  r p)
                                               (__1 :
                                                  cic.Term univs.Type0
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop univs.Type2
                                                  ((x :
                                                      cic.Term univs.Type0
                                                        matita_arithmetics_nat.nat =>
                                                    matita_basics_logic.eq
                                                      (cic.lift univs.Type0
                                                         univs.Type2
                                                         matita_arithmetics_nat.nat)
                                                      r x)
                                                     __1))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift univs.Type0
                                                     univs.Type2
                                                     matita_arithmetics_nat.nat)
                                                  r
                                                  (__1 :
                                                     cic.Term univs.Type0
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     univs.Type2
                                                     ((x :
                                                         cic.Term univs.Type0
                                                           matita_arithmetics_nat.nat =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            univs.Type0
                                                            univs.Type2
                                                            matita_arithmetics_nat.nat)
                                                         r x)
                                                        __1))
                                                  (matita_basics_logic.refl
                                                     (cic.lift univs.Type0
                                                        univs.Type2
                                                        matita_arithmetics_nat.nat)
                                                     r)
                                                  (matita_arithmetics_nat.times
                                                     r p)
                                                  (matita_basics_logic.rewrite_l
                                                     (cic.lift univs.Type0
                                                        univs.Type2
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     (__1 :
                                                        cic.Term univs.Type0
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        univs.Type2
                                                        ((x :
                                                            cic.Term
                                                              univs.Type0
                                                              matita_arithmetics_nat.nat =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               univs.Type0
                                                               univs.Type2
                                                               matita_arithmetics_nat.nat)
                                                            r
                                                            (matita_arithmetics_nat.times
                                                               r x))
                                                           __1))
                                                     (matita_arithmetics_nat.times_n_1
                                                        r)
                                                     p eqp1))
                                               (matita_arithmetics_nat.times
                                                  p r)
                                               (matita_arithmetics_nat.commutative_times
                                                  p r))
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            eqp1))
                                      p eqp1)
                                   ndivpr))
                             (matita_arithmetics_nat.le_to_or_lt_eq
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                p posp)))
                       (matita_arithmetics_nat.plus p
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.plus_n_O p))
                    (q1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     Hind :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.le
                            (matita_arithmetics_nat.S q1)
                            (matita_arithmetics_exp.exp p
                               (matita_arithmetics_nat.S q1))) =>
                     matita_arithmetics_nat.lt_to_le_to_lt
                       (matita_arithmetics_nat.S q1)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S q1)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (matita_arithmetics_exp.exp p
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S q1)))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S q1)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (x :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S q1)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))) =>
                           matita_arithmetics_nat.lt x
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S q1)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))))
                          (matita_arithmetics_nat.monotonic_lt_times_r
                             (matita_arithmetics_nat.S q1)
                             (matita_arithmetics_nat.lt_O_S q1)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_basics_logic.eq_coerc
                                (cic.lift cic.prop univs.Type0
                                   (matita_arithmetics_nat.lt
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.mod
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.times
                                               matita_arithmetics_nat.O
                                               (matita_arithmetics_div_and_mod.div
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.O)))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))
                                (cic.lift cic.prop univs.Type0
                                   (matita_arithmetics_nat.lt
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))
                                (matita_arithmetics_nat.lt_plus_Sn_r
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.times
                                      matita_arithmetics_nat.O
                                      (matita_arithmetics_div_and_mod.div
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O))
                                   matita_arithmetics_nat.O)
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift (cic.succ univs.Type0)
                                             univs.Type2
                                             (cic.univ univs.Type0))
                                          (cic.lift cic.prop univs.Type0
                                             (matita_arithmetics_nat.lt
                                                (matita_arithmetics_div_and_mod.mod
                                                   (matita_arithmetics_nat.S
                                                      matita_arithmetics_nat.O)
                                                   matita_arithmetics_nat.O)
                                                (matita_arithmetics_nat.plus
                                                   x
                                                   (matita_arithmetics_nat.S
                                                      matita_arithmetics_nat.O))))
                                          (cic.lift cic.prop univs.Type0
                                             (matita_arithmetics_nat.lt
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)
                                                (matita_arithmetics_nat.S
                                                   (matita_arithmetics_nat.S
                                                      matita_arithmetics_nat.O)))))
                                         __))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift (cic.succ univs.Type0)
                                                univs.Type2
                                                (cic.univ univs.Type0))
                                             (cic.lift cic.prop univs.Type0
                                                (matita_arithmetics_nat.lt x
                                                   (matita_arithmetics_nat.plus
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O)
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O))))
                                             (cic.lift cic.prop univs.Type0
                                                (matita_arithmetics_nat.lt
                                                   (matita_arithmetics_nat.S
                                                      matita_arithmetics_nat.O)
                                                   (matita_arithmetics_nat.S
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O)))))
                                            __))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (__ :
                                            cic.Term univs.Type0
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop univs.Type2
                                            ((x :
                                                cic.Term univs.Type0
                                                  matita_arithmetics_nat.nat =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.succ univs.Type0)
                                                   univs.Type2
                                                   (cic.univ univs.Type0))
                                                (cic.lift cic.prop
                                                   univs.Type0
                                                   (matita_arithmetics_nat.lt
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O)
                                                      x))
                                                (cic.lift cic.prop
                                                   univs.Type0
                                                   (matita_arithmetics_nat.lt
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O)
                                                      (matita_arithmetics_nat.S
                                                         (matita_arithmetics_nat.S
                                                            matita_arithmetics_nat.O)))))
                                               __))
                                         (matita_basics_logic.refl
                                            (cic.lift (cic.succ univs.Type0)
                                               univs.Type2
                                               (cic.univ univs.Type0))
                                            (cic.lift cic.prop univs.Type0
                                               (matita_arithmetics_nat.lt
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (__ :
                                               cic.Term univs.Type0
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop univs.Type2
                                               ((x :
                                                   cic.Term univs.Type0
                                                     matita_arithmetics_nat.nat =>
                                                 matita_basics_logic.eq
                                                   (cic.lift univs.Type0
                                                      univs.Type2
                                                      matita_arithmetics_nat.nat)
                                                   (matita_arithmetics_nat.plus
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O)
                                                      x)
                                                   (matita_arithmetics_nat.S
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O)))
                                                  __))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift univs.Type0
                                                  univs.Type2
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (__ :
                                                  cic.Term univs.Type0
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop univs.Type2
                                                  ((x :
                                                      cic.Term univs.Type0
                                                        matita_arithmetics_nat.nat =>
                                                    matita_basics_logic.eq
                                                      (cic.lift univs.Type0
                                                         univs.Type2
                                                         matita_arithmetics_nat.nat)
                                                      (matita_arithmetics_nat.plus
                                                         (matita_arithmetics_nat.S
                                                            matita_arithmetics_nat.O)
                                                         (matita_arithmetics_nat.times
                                                            (matita_arithmetics_nat.S
                                                               matita_arithmetics_nat.O)
                                                            (matita_arithmetics_nat.S
                                                               matita_arithmetics_nat.O)))
                                                      x)
                                                     __))
                                               (matita_arithmetics_nat.times_Sn_m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.times_n_1
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))))
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.times_n_1
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O)
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_div_and_mod.mod
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O))
                                         (__ :
                                            cic.Term univs.Type0
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop univs.Type2
                                            ((x :
                                                cic.Term univs.Type0
                                                  matita_arithmetics_nat.nat =>
                                              matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)
                                                x)
                                               __))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.mod
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O)
                                            (__ :
                                               cic.Term univs.Type0
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop univs.Type2
                                               ((x :
                                                   cic.Term univs.Type0
                                                     matita_arithmetics_nat.nat =>
                                                 matita_basics_logic.eq
                                                   (cic.lift univs.Type0
                                                      univs.Type2
                                                      matita_arithmetics_nat.nat)
                                                   (matita_arithmetics_nat.S
                                                      matita_arithmetics_nat.O)
                                                   x)
                                                  __))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift univs.Type0
                                                  univs.Type2
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  matita_arithmetics_nat.O
                                                  (matita_arithmetics_div_and_mod.div
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.O))
                                               (__ :
                                                  cic.Term univs.Type0
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop univs.Type2
                                                  ((x :
                                                      cic.Term univs.Type0
                                                        matita_arithmetics_nat.nat =>
                                                    matita_basics_logic.eq
                                                      (cic.lift univs.Type0
                                                         univs.Type2
                                                         matita_arithmetics_nat.nat)
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O)
                                                      (matita_arithmetics_nat.plus
                                                         (matita_arithmetics_div_and_mod.mod
                                                            (matita_arithmetics_nat.S
                                                               matita_arithmetics_nat.O)
                                                            matita_arithmetics_nat.O)
                                                         x))
                                                     __))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift univs.Type0
                                                     univs.Type2
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        matita_arithmetics_nat.O
                                                        (matita_arithmetics_div_and_mod.div
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_div_and_mod.mod
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)
                                                        matita_arithmetics_nat.O))
                                                  (__ :
                                                     cic.Term univs.Type0
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     univs.Type2
                                                     ((x :
                                                         cic.Term univs.Type0
                                                           matita_arithmetics_nat.nat =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            univs.Type0
                                                            univs.Type2
                                                            matita_arithmetics_nat.nat)
                                                         (matita_arithmetics_nat.S
                                                            matita_arithmetics_nat.O)
                                                         x)
                                                        __))
                                                  (matita_arithmetics_ord.let_clause_1033
                                                     p n q r posp ndivpr Hn
                                                     q0 q1 Hind
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.O)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_div_and_mod.mod
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)
                                                        matita_arithmetics_nat.O)
                                                     (matita_arithmetics_nat.times
                                                        matita_arithmetics_nat.O
                                                        (matita_arithmetics_div_and_mod.div
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)
                                                           matita_arithmetics_nat.O)))
                                                  (matita_arithmetics_nat.commutative_plus
                                                     (matita_arithmetics_nat.times
                                                        matita_arithmetics_nat.O
                                                        (matita_arithmetics_div_and_mod.div
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_div_and_mod.mod
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)
                                                        matita_arithmetics_nat.O)))
                                               matita_arithmetics_nat.O
                                               (matita_arithmetics_nat.times_O_n
                                                  (matita_arithmetics_div_and_mod.div
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.O)))
                                            (matita_arithmetics_nat.plus
                                               matita_arithmetics_nat.O
                                               (matita_arithmetics_div_and_mod.mod
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.commutative_plus
                                               (matita_arithmetics_div_and_mod.mod
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.plus_O_n
                                            (matita_arithmetics_div_and_mod.mod
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O))))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times
                                         matita_arithmetics_nat.O
                                         (matita_arithmetics_div_and_mod.div
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.O)))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_div_and_mod.div
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.O))
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O)
                                             x)
                                            __))
                                      (matita_arithmetics_ord.let_clause_1033
                                         p n q r posp ndivpr Hn q0 q1 Hind
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.times
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_div_and_mod.div
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O)))
                                      (matita_arithmetics_nat.commutative_plus
                                         (matita_arithmetics_nat.times
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_div_and_mod.div
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.O))))))
                          (matita_arithmetics_nat.S q1)
                          (matita_arithmetics_nat.times_n_1
                             (matita_arithmetics_nat.S q1)))
                       (matita_arithmetics_nat.le_times
                          (matita_arithmetics_nat.S q1)
                          (matita_arithmetics_exp.exp p
                             (matita_arithmetics_nat.S q1))
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          p Hind
                          (matita_basics_logic.match_Or
                             (matita_arithmetics_nat.lt
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                p)
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                p)
                             cic.prop
                             (__ :
                                cic.Term cic.prop
                                  (matita_basics_logic.Or
                                     (matita_arithmetics_nat.lt
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        p)
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        p)) =>
                              matita_arithmetics_nat.lt
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                p)
                             (auto :
                                cic.Term cic.prop
                                  (matita_arithmetics_nat.lt
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)
                                     p) =>
                              auto)
                             (eqp1 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)
                                     p) =>
                              matita_basics_logic.False_ind
                                (_x_66 :
                                   cic.Term cic.prop
                                     matita_basics_logic.False =>
                                 matita_arithmetics_nat.lt
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   p)
                                (matita_basics_logic.absurd
                                   (matita_arithmetics_primes.divides p r)
                                   (matita_basics_logic.eq_ind
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (x_1 :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       _x_2 :
                                         cic.Term cic.prop
                                           (matita_basics_logic.eq
                                              (cic.lift univs.Type0
                                                 univs.Type2
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              x_1) =>
                                       matita_arithmetics_primes.divides x_1
                                         r)
                                      (matita_arithmetics_primes.quotient
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         r r
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            p
                                            (__ :
                                               cic.Term univs.Type0
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop univs.Type2
                                               ((x :
                                                   cic.Term univs.Type0
                                                     matita_arithmetics_nat.nat =>
                                                 matita_basics_logic.eq
                                                   (cic.lift univs.Type0
                                                      univs.Type2
                                                      matita_arithmetics_nat.nat)
                                                   r
                                                   (matita_arithmetics_nat.times
                                                      x r))
                                                  __))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift univs.Type0
                                                  univs.Type2
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  r p)
                                               (__ :
                                                  cic.Term univs.Type0
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop univs.Type2
                                                  ((x :
                                                      cic.Term univs.Type0
                                                        matita_arithmetics_nat.nat =>
                                                    matita_basics_logic.eq
                                                      (cic.lift univs.Type0
                                                         univs.Type2
                                                         matita_arithmetics_nat.nat)
                                                      r x)
                                                     __))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift univs.Type0
                                                     univs.Type2
                                                     matita_arithmetics_nat.nat)
                                                  r
                                                  (__ :
                                                     cic.Term univs.Type0
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     univs.Type2
                                                     ((x :
                                                         cic.Term univs.Type0
                                                           matita_arithmetics_nat.nat =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            univs.Type0
                                                            univs.Type2
                                                            matita_arithmetics_nat.nat)
                                                         r x)
                                                        __))
                                                  (matita_basics_logic.refl
                                                     (cic.lift univs.Type0
                                                        univs.Type2
                                                        matita_arithmetics_nat.nat)
                                                     r)
                                                  (matita_arithmetics_nat.times
                                                     r p)
                                                  (matita_basics_logic.rewrite_l
                                                     (cic.lift univs.Type0
                                                        univs.Type2
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     (__ :
                                                        cic.Term univs.Type0
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        univs.Type2
                                                        ((x :
                                                            cic.Term
                                                              univs.Type0
                                                              matita_arithmetics_nat.nat =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               univs.Type0
                                                               univs.Type2
                                                               matita_arithmetics_nat.nat)
                                                            r
                                                            (matita_arithmetics_nat.times
                                                               r x))
                                                           __))
                                                     (matita_arithmetics_nat.times_n_1
                                                        r)
                                                     p eqp1))
                                               (matita_arithmetics_nat.times
                                                  p r)
                                               (matita_arithmetics_nat.commutative_times
                                                  p r))
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            eqp1))
                                      p eqp1)
                                   ndivpr))
                             (matita_arithmetics_nat.le_to_or_lt_eq
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                p posp))))
                    q0)
                 q)
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp p q)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_exp.exp p q)
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))) =>
                  matita_arithmetics_nat.le x
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp p q) r))
                 (matita_arithmetics_nat.le_times
                    (matita_arithmetics_exp.exp p q)
                    (matita_arithmetics_exp.exp p q)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O) r
                    (matita_arithmetics_nat.le_n
                       (matita_arithmetics_exp.exp p q))
                    (matita_arithmetics_nat.match_nat cic.prop
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.Not
                             (matita_arithmetics_primes.divides p __))
                          (__1 :
                             cic.Term cic.prop
                               (matita_basics_logic.Not
                                  (matita_arithmetics_primes.divides p __)) =>
                           matita_arithmetics_nat.le
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             __))
                       (Habs :
                          cic.Term cic.prop
                            (matita_basics_logic.Not
                               (matita_arithmetics_primes.divides p
                                  matita_arithmetics_nat.O)) =>
                        matita_basics_logic.False_ind
                          (_x_66 :
                             cic.Term cic.prop matita_basics_logic.False =>
                           matita_arithmetics_nat.le
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.absurd
                             (matita_arithmetics_primes.divides p
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_primes.quotient p
                                matita_arithmetics_nat.O
                                matita_arithmetics_nat.O
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times p
                                      matita_arithmetics_nat.O)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          x
                                          (matita_arithmetics_nat.times p
                                             matita_arithmetics_nat.O))
                                         __))
                                   (matita_basics_logic.refl
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times p
                                         matita_arithmetics_nat.O))
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.times_n_O p)))
                             Habs))
                       (auto :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        auto' :
                          cic.Term cic.prop
                            (matita_basics_logic.Not
                               (matita_arithmetics_primes.divides p
                                  (matita_arithmetics_nat.S auto))) =>
                        matita_arithmetics_nat.lt_O_S auto)
                       r ndivpr))
                 (matita_arithmetics_exp.exp p q)
                 (matita_arithmetics_nat.times_n_1
                    (matita_arithmetics_exp.exp p q)))))
        n Hn.

def p_ord_to_exp1 :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      __2 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord n p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat q r)) ->
      cic.Term cic.prop
        (matita_basics_logic.And
           (matita_basics_logic.Not (matita_arithmetics_primes.divides p r))
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
              (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p q)
                 r)))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      lt1p :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) =>
      posn :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      Hord :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord n p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat q r)) =>
      matita_basics_logic.conj
        (matita_basics_logic.Not (matita_arithmetics_primes.divides p r))
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
           (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p q) r))
        (matita_basics_logic.not_to_not
           (matita_arithmetics_primes.divides p r)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.mod r p)
              matita_arithmetics_nat.O)
           (matita_arithmetics_primes.divides_to_mod_O p r
              (matita_arithmetics_nat.lt_to_le
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) p lt1p))
           (matita_arithmetics_ord.p_ord_aux_to_not_mod_O n n p q r lt1p posn
              (matita_arithmetics_nat.le_n n) Hord))
        (matita_arithmetics_ord.p_ord_aux_to_exp n n p q r
           (matita_arithmetics_nat.lt_to_le
              (matita_arithmetics_nat.S matita_arithmetics_nat.O) p lt1p)
           Hord).

def let_clause_10331 :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      p1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      p2 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      qa : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      ra : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      H :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord_aux (matita_arithmetics_nat.S n1)
                (matita_arithmetics_nat.S n1)
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S p2)))
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat qa ra)) ->
      x2515 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x2516 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           x2515
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times x2516
                 (matita_arithmetics_div_and_mod.div x2515 x2516))
              (matita_arithmetics_div_and_mod.mod x2515 x2516)))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p2 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      qa : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      ra : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord_aux (matita_arithmetics_nat.S n1)
                (matita_arithmetics_nat.S n1)
                (matita_arithmetics_nat.S (matita_arithmetics_nat.S p2)))
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat qa ra)) =>
      x2515 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      x2516 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_logic.rewrite_l
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times
           (matita_arithmetics_div_and_mod.div x2515 x2516) x2516)
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.lift cic.prop univs.Type2
           ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
             matita_basics_logic.eq
               (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
               x2515
               (matita_arithmetics_nat.plus x
                  (matita_arithmetics_div_and_mod.mod x2515 x2516)))
              __))
        (matita_arithmetics_div_and_mod.div_mod x2515 x2516)
        (matita_arithmetics_nat.times x2516
           (matita_arithmetics_div_and_mod.div x2515 x2516))
        (matita_arithmetics_nat.commutative_times
           (matita_arithmetics_div_and_mod.div x2515 x2516) x2516).

def eq_p_ord_q_O :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord n p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat q matita_arithmetics_nat.O)) ->
      cic.Term cic.prop
        (matita_basics_logic.And
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
              matita_arithmetics_nat.O)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) q
              matita_arithmetics_nat.O))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat cic.prop
        (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         cic.prod univs.Type0 cic.prop matita_arithmetics_nat.nat
           (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord_aux __ __ p)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat q matita_arithmetics_nat.O))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_arithmetics_ord.p_ord_aux __ __ p)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q
                         matita_arithmetics_nat.O)) =>
               matita_basics_logic.And
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    __ matita_arithmetics_nat.O)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    q matita_arithmetics_nat.O))))
        (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.match_nat cic.prop
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord_aux matita_arithmetics_nat.O
                    matita_arithmetics_nat.O __)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat q matita_arithmetics_nat.O))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_arithmetics_ord.p_ord_aux
                         matita_arithmetics_nat.O matita_arithmetics_nat.O __)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q
                         matita_arithmetics_nat.O)) =>
               matita_basics_logic.And
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O matita_arithmetics_nat.O)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    q matita_arithmetics_nat.O)))
           (H :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat matita_arithmetics_nat.O
                      matita_arithmetics_nat.O)
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat q matita_arithmetics_nat.O)) =>
            matita_basics_types.Prod_discr matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O
                 matita_arithmetics_nat.O)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat q matita_arithmetics_nat.O)
              H
              (cic.lift cic.prop univs.Type1
                 (matita_basics_logic.And
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O matita_arithmetics_nat.O)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       q matita_arithmetics_nat.O)))
              (e0 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      (matita_basics_logic.R0 matita_arithmetics_nat.nat
                         matita_arithmetics_nat.O)
                      q) =>
               matita_basics_logic.eq_ind
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         matita_arithmetics_nat.O x_1) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat matita_arithmetics_nat.O
                          matita_arithmetics_nat.O)
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat x_1
                          matita_arithmetics_nat.O))
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat x_1
                               matita_arithmetics_nat.O)) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_basics_logic.R1
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             (x0 :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              p0 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O x0) =>
                              matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O x_1 _x_2)
                          matita_arithmetics_nat.O)
                       (_e1 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_basics_logic.R1
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O
                                  (x0 :
                                     cic.Term univs.Type0
                                       matita_arithmetics_nat.nat =>
                                   p0 :
                                     cic.Term cic.prop
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          matita_arithmetics_nat.O x0) =>
                                   matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O x_1 _x_2)
                               matita_arithmetics_nat.O) =>
                        matita_basics_logic.And
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             x_1 matita_arithmetics_nat.O))))
                 (H0 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O matita_arithmetics_nat.O)
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O matita_arithmetics_nat.O)) =>
                  matita_basics_logic.streicherK
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat matita_arithmetics_nat.O
                       matita_arithmetics_nat.O)
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O)) =>
                     cic.lift cic.prop univs.Type2
                       ((__1 :
                           cic.Term cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   (matita_basics_types.Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat))
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O
                                   matita_arithmetics_nat.O)
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O
                                   matita_arithmetics_nat.O)) =>
                         cic.prod cic.prop cic.prop
                           (matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              (matita_basics_logic.R1
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 (x0 :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  p0 :
                                    cic.Term cic.prop
                                      (matita_basics_logic.eq
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         matita_arithmetics_nat.O x0) =>
                                  matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O
                                 (matita_basics_logic.refl
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    matita_arithmetics_nat.O))
                              matita_arithmetics_nat.O)
                           (_e1 :
                              cic.Term cic.prop
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_basics_logic.R1
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      matita_arithmetics_nat.O
                                      (x0 :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       p0 :
                                         cic.Term cic.prop
                                           (matita_basics_logic.eq
                                              (cic.lift univs.Type0
                                                 univs.Type2
                                                 matita_arithmetics_nat.nat)
                                              matita_arithmetics_nat.O x0) =>
                                       matita_arithmetics_nat.nat)
                                      matita_arithmetics_nat.O
                                      matita_arithmetics_nat.O
                                      (matita_basics_logic.refl
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         matita_arithmetics_nat.O))
                                   matita_arithmetics_nat.O) =>
                            matita_basics_logic.And
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O)
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O)))
                          __))
                    (e00 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_basics_logic.R1
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               (x0 :
                                  cic.Term univs.Type0
                                    matita_arithmetics_nat.nat =>
                                p0 :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       matita_arithmetics_nat.O x0) =>
                                matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O
                               (matita_basics_logic.refl
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O))
                            matita_arithmetics_nat.O) =>
                     matita_basics_logic.streicherK
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O
                       (__ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O) =>
                        cic.lift cic.prop univs.Type2
                          ((__1 :
                              cic.Term cic.prop
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   matita_arithmetics_nat.O
                                   matita_arithmetics_nat.O) =>
                            matita_basics_logic.And
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O)
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O))
                             __))
                       (matita_basics_logic.conj
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.refl
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.refl
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O))
                       e00)
                    H0)
                 q e0 H))
           (q1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            H :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat matita_arithmetics_nat.O
                      matita_arithmetics_nat.O)
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat q matita_arithmetics_nat.O)) =>
            matita_basics_types.Prod_discr matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O
                 matita_arithmetics_nat.O)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat q matita_arithmetics_nat.O)
              H
              (cic.lift cic.prop univs.Type1
                 (matita_basics_logic.And
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O matita_arithmetics_nat.O)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       q matita_arithmetics_nat.O)))
              (e0 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      (matita_basics_logic.R0 matita_arithmetics_nat.nat
                         matita_arithmetics_nat.O)
                      q) =>
               matita_basics_logic.eq_ind
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         matita_arithmetics_nat.O x_1) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat matita_arithmetics_nat.O
                          matita_arithmetics_nat.O)
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat x_1
                          matita_arithmetics_nat.O))
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat x_1
                               matita_arithmetics_nat.O)) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_basics_logic.R1
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             (x0 :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              p0 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O x0) =>
                              matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O x_1 _x_2)
                          matita_arithmetics_nat.O)
                       (_e1 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_basics_logic.R1
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O
                                  (x0 :
                                     cic.Term univs.Type0
                                       matita_arithmetics_nat.nat =>
                                   p0 :
                                     cic.Term cic.prop
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          matita_arithmetics_nat.O x0) =>
                                   matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O x_1 _x_2)
                               matita_arithmetics_nat.O) =>
                        matita_basics_logic.And
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             x_1 matita_arithmetics_nat.O))))
                 (H0 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O matita_arithmetics_nat.O)
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O matita_arithmetics_nat.O)) =>
                  matita_basics_logic.streicherK
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat matita_arithmetics_nat.O
                       matita_arithmetics_nat.O)
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O)
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O)) =>
                     cic.lift cic.prop univs.Type2
                       ((__1 :
                           cic.Term cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   (matita_basics_types.Prod
                                      matita_arithmetics_nat.nat
                                      matita_arithmetics_nat.nat))
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O
                                   matita_arithmetics_nat.O)
                                (matita_basics_types.mk_Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.O
                                   matita_arithmetics_nat.O)) =>
                         cic.prod cic.prop cic.prop
                           (matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              (matita_basics_logic.R1
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 (x0 :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  p0 :
                                    cic.Term cic.prop
                                      (matita_basics_logic.eq
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         matita_arithmetics_nat.O x0) =>
                                  matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O
                                 (matita_basics_logic.refl
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    matita_arithmetics_nat.O))
                              matita_arithmetics_nat.O)
                           (_e1 :
                              cic.Term cic.prop
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_basics_logic.R1
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      matita_arithmetics_nat.O
                                      (x0 :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       p0 :
                                         cic.Term cic.prop
                                           (matita_basics_logic.eq
                                              (cic.lift univs.Type0
                                                 univs.Type2
                                                 matita_arithmetics_nat.nat)
                                              matita_arithmetics_nat.O x0) =>
                                       matita_arithmetics_nat.nat)
                                      matita_arithmetics_nat.O
                                      matita_arithmetics_nat.O
                                      (matita_basics_logic.refl
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         matita_arithmetics_nat.O))
                                   matita_arithmetics_nat.O) =>
                            matita_basics_logic.And
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O)
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O)))
                          __))
                    (e00 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_basics_logic.R1
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               (x0 :
                                  cic.Term univs.Type0
                                    matita_arithmetics_nat.nat =>
                                p0 :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       matita_arithmetics_nat.O x0) =>
                                matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O
                               (matita_basics_logic.refl
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O))
                            matita_arithmetics_nat.O) =>
                     matita_basics_logic.streicherK
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O
                       (__ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O) =>
                        cic.lift cic.prop univs.Type2
                          ((__1 :
                              cic.Term cic.prop
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   matita_arithmetics_nat.O
                                   matita_arithmetics_nat.O) =>
                            matita_basics_logic.And
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O)
                              (matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 matita_arithmetics_nat.O
                                 matita_arithmetics_nat.O))
                             __))
                       (matita_basics_logic.conj
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.refl
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.refl
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O))
                       e00)
                    H0)
                 q e0 H))
           p)
        (n1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.match_nat cic.prop
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord_aux
                    (matita_arithmetics_nat.S n1)
                    (matita_arithmetics_nat.S n1) __)
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat q matita_arithmetics_nat.O))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         (matita_basics_types.Prod matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat))
                      (matita_arithmetics_ord.p_ord_aux
                         (matita_arithmetics_nat.S n1)
                         (matita_arithmetics_nat.S n1) __)
                      (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat q
                         matita_arithmetics_nat.O)) =>
               matita_basics_logic.And
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S n1) matita_arithmetics_nat.O)
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    q matita_arithmetics_nat.O)))
           (H :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat matita_arithmetics_nat.O
                      (matita_arithmetics_nat.S n1))
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat q matita_arithmetics_nat.O)) =>
            matita_basics_types.Prod_discr matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat matita_arithmetics_nat.O
                 (matita_arithmetics_nat.S n1))
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat q matita_arithmetics_nat.O)
              H
              (cic.lift cic.prop univs.Type1
                 (matita_basics_logic.And
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n1) matita_arithmetics_nat.O)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       q matita_arithmetics_nat.O)))
              (e0 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      (matita_basics_logic.R0 matita_arithmetics_nat.nat
                         matita_arithmetics_nat.O)
                      q) =>
               matita_basics_logic.eq_ind
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         matita_arithmetics_nat.O x_1) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat matita_arithmetics_nat.O
                          (matita_arithmetics_nat.S n1))
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat x_1
                          matita_arithmetics_nat.O))
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.O
                               (matita_arithmetics_nat.S n1))
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat x_1
                               matita_arithmetics_nat.O)) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_basics_logic.R1
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             (x0 :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              p0 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O x0) =>
                              matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n1) x_1 _x_2)
                          matita_arithmetics_nat.O)
                       (_e1 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_basics_logic.R1
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  matita_arithmetics_nat.O
                                  (x0 :
                                     cic.Term univs.Type0
                                       matita_arithmetics_nat.nat =>
                                   p0 :
                                     cic.Term cic.prop
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          matita_arithmetics_nat.O x0) =>
                                   matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S n1) x_1 _x_2)
                               matita_arithmetics_nat.O) =>
                        matita_basics_logic.And
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n1)
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             x_1 matita_arithmetics_nat.O))))
                 (H0 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O
                            (matita_arithmetics_nat.S n1))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.O matita_arithmetics_nat.O)) =>
                  e00 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_basics_logic.R1
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            matita_arithmetics_nat.O
                            (x0 :
                               cic.Term univs.Type0
                                 matita_arithmetics_nat.nat =>
                             p0 :
                               cic.Term cic.prop
                                 (matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    matita_arithmetics_nat.O x0) =>
                             matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S n1)
                            matita_arithmetics_nat.O
                            (matita_basics_logic.refl
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O))
                         matita_arithmetics_nat.O) =>
                  matita_arithmetics_nat.nat_discr
                    (matita_arithmetics_nat.S n1) matita_arithmetics_nat.O
                    e00
                    (cic.lift cic.prop univs.Type1
                       (matita_basics_logic.And
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n1)
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.O))))
                 q e0 H))
           (p1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.match_nat cic.prop
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_arithmetics_ord.p_ord_aux
                       (matita_arithmetics_nat.S n1)
                       (matita_arithmetics_nat.S n1)
                       (matita_arithmetics_nat.S __))
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat q matita_arithmetics_nat.O))
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_arithmetics_ord.p_ord_aux
                            (matita_arithmetics_nat.S n1)
                            (matita_arithmetics_nat.S n1)
                            (matita_arithmetics_nat.S __))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat q
                            matita_arithmetics_nat.O)) =>
                  matita_basics_logic.And
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n1) matita_arithmetics_nat.O)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       q matita_arithmetics_nat.O)))
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat (matita_arithmetics_nat.S n1)
                    (matita_arithmetics_nat.S n1))
                 (x :
                    cic.Term univs.Type0
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat) =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         x
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S n1)
                            (matita_arithmetics_nat.S n1))) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       x
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat q
                          matita_arithmetics_nat.O))
                    (__1 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            x
                            (matita_basics_types.mk_Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat q
                               matita_arithmetics_nat.O)) =>
                     matita_basics_logic.And
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n1)
                          matita_arithmetics_nat.O)
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          q matita_arithmetics_nat.O)))
                 (H :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat
                            (matita_arithmetics_nat.S n1)
                            (matita_arithmetics_nat.S n1))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat q
                            matita_arithmetics_nat.O)) =>
                  matita_basics_types.Prod_discr matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat
                       (matita_arithmetics_nat.S n1)
                       (matita_arithmetics_nat.S n1))
                    (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat q matita_arithmetics_nat.O)
                    H
                    (cic.lift cic.prop univs.Type1
                       (matita_basics_logic.And
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n1)
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             q matita_arithmetics_nat.O)))
                    (e0 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_basics_logic.R0
                               matita_arithmetics_nat.nat
                               (matita_arithmetics_nat.S n1))
                            q) =>
                     matita_basics_logic.eq_ind
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n1)
                       (x_1 :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        _x_2 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S n1) x_1) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                (matita_basics_types.Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat))
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat
                                (matita_arithmetics_nat.S n1)
                                (matita_arithmetics_nat.S n1))
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat x_1
                                matita_arithmetics_nat.O))
                          (__ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat
                                     (matita_arithmetics_nat.S n1)
                                     (matita_arithmetics_nat.S n1))
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat x_1
                                     matita_arithmetics_nat.O)) =>
                           cic.prod cic.prop cic.prop
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_basics_logic.R1
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S n1)
                                   (x0 :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    p0 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S n1) x0) =>
                                    matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S n1) x_1 _x_2)
                                matita_arithmetics_nat.O)
                             (_e1 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_logic.R1
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S n1)
                                        (x0 :
                                           cic.Term univs.Type0
                                             matita_arithmetics_nat.nat =>
                                         p0 :
                                           cic.Term cic.prop
                                             (matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.S n1)
                                                x0) =>
                                         matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S n1) x_1
                                        _x_2)
                                     matita_arithmetics_nat.O) =>
                              matita_basics_logic.And
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S n1)
                                   matita_arithmetics_nat.O)
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   x_1 matita_arithmetics_nat.O))))
                       (H0 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S n1)
                                  (matita_arithmetics_nat.S n1))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat
                                  (matita_arithmetics_nat.S n1)
                                  matita_arithmetics_nat.O)) =>
                        e00 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_basics_logic.R1
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S n1)
                                  (x0 :
                                     cic.Term univs.Type0
                                       matita_arithmetics_nat.nat =>
                                   p0 :
                                     cic.Term cic.prop
                                       (matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.S n1) x0) =>
                                   matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S n1)
                                  (matita_arithmetics_nat.S n1)
                                  (matita_basics_logic.refl
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S n1)))
                               matita_arithmetics_nat.O) =>
                        matita_arithmetics_nat.nat_discr
                          (matita_arithmetics_nat.S n1)
                          matita_arithmetics_nat.O e00
                          (cic.lift cic.prop univs.Type1
                             (matita_basics_logic.And
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S n1)
                                   matita_arithmetics_nat.O)
                                (matita_basics_logic.eq
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S n1)
                                   matita_arithmetics_nat.O))))
                       q e0 H))
                 (matita_arithmetics_ord.p_ord_aux
                    (matita_arithmetics_nat.S n1)
                    (matita_arithmetics_nat.S n1)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_ord.p_ord_degenerate
                    (matita_arithmetics_nat.S n1)
                    (matita_arithmetics_nat.S n1)))
              (p2 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_basics_types.match_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat cic.prop
                 (__ :
                    cic.Term univs.Type0
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_arithmetics_ord.p_ord_aux
                          (matita_arithmetics_nat.S n1)
                          (matita_arithmetics_nat.S n1)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S p2)))
                       __)
                    (__1 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               (matita_basics_types.Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat))
                            (matita_arithmetics_ord.p_ord_aux
                               (matita_arithmetics_nat.S n1)
                               (matita_arithmetics_nat.S n1)
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S p2)))
                            __) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_arithmetics_ord.p_ord_aux
                             (matita_arithmetics_nat.S n1)
                             (matita_arithmetics_nat.S n1)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S p2)))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat q
                             matita_arithmetics_nat.O))
                       (__2 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_arithmetics_ord.p_ord_aux
                                  (matita_arithmetics_nat.S n1)
                                  (matita_arithmetics_nat.S n1)
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S p2)))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat q
                                  matita_arithmetics_nat.O)) =>
                        matita_basics_logic.And
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n1)
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             q matita_arithmetics_nat.O))))
                 (qa : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  ra : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  H :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat))
                         (matita_arithmetics_ord.p_ord_aux
                            (matita_arithmetics_nat.S n1)
                            (matita_arithmetics_nat.S n1)
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S p2)))
                         (matita_basics_types.mk_Prod
                            matita_arithmetics_nat.nat
                            matita_arithmetics_nat.nat qa ra)) =>
                  matita_basics_logic.match_And
                    (matita_basics_logic.Not
                       (matita_arithmetics_primes.divides
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S p2))
                          ra))
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n1)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S p2))
                             qa)
                          ra))
                    cic.prop
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.And
                            (matita_basics_logic.Not
                               (matita_arithmetics_primes.divides
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S p2))
                                  ra))
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S n1)
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_exp.exp
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S p2))
                                     qa)
                                  ra))) =>
                     cic.prod cic.prop cic.prop
                       (matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             (matita_basics_types.Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat))
                          (matita_arithmetics_ord.p_ord_aux
                             (matita_arithmetics_nat.S n1)
                             (matita_arithmetics_nat.S n1)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S p2)))
                          (matita_basics_types.mk_Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat q
                             matita_arithmetics_nat.O))
                       (__1 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_arithmetics_ord.p_ord_aux
                                  (matita_arithmetics_nat.S n1)
                                  (matita_arithmetics_nat.S n1)
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S p2)))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat q
                                  matita_arithmetics_nat.O)) =>
                        matita_basics_logic.And
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n1)
                             matita_arithmetics_nat.O)
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             q matita_arithmetics_nat.O)))
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.Not
                            (matita_arithmetics_primes.divides
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S p2))
                               ra)) =>
                     H1 :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S n1)
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_exp.exp
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S p2))
                                  qa)
                               ra)) =>
                     matita_basics_logic.eq_ind_r
                       (cic.lift univs.Type0 univs.Type2
                          (matita_basics_types.Prod
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat))
                       (matita_basics_types.mk_Prod
                          matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat qa ra)
                       (x :
                          cic.Term univs.Type0
                            (matita_basics_types.Prod
                               matita_arithmetics_nat.nat
                               matita_arithmetics_nat.nat) =>
                        _0 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               x
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat qa ra)) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                (matita_basics_types.Prod
                                   matita_arithmetics_nat.nat
                                   matita_arithmetics_nat.nat))
                             x
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat q
                                matita_arithmetics_nat.O))
                          (__1 :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     (matita_basics_types.Prod
                                        matita_arithmetics_nat.nat
                                        matita_arithmetics_nat.nat))
                                  x
                                  (matita_basics_types.mk_Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat q
                                     matita_arithmetics_nat.O)) =>
                           matita_basics_logic.And
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S n1)
                                matita_arithmetics_nat.O)
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                q matita_arithmetics_nat.O)))
                       (H2 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  (matita_basics_types.Prod
                                     matita_arithmetics_nat.nat
                                     matita_arithmetics_nat.nat))
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat qa ra)
                               (matita_basics_types.mk_Prod
                                  matita_arithmetics_nat.nat
                                  matita_arithmetics_nat.nat q
                                  matita_arithmetics_nat.O)) =>
                        matita_basics_logic.False_ind
                          (_x_66 :
                             cic.Term cic.prop matita_basics_logic.False =>
                           matita_basics_logic.And
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S n1)
                                matita_arithmetics_nat.O)
                             (matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                q matita_arithmetics_nat.O))
                          (matita_basics_types.Prod_discr
                             matita_arithmetics_nat.nat
                             matita_arithmetics_nat.nat
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat qa ra)
                             (matita_basics_types.mk_Prod
                                matita_arithmetics_nat.nat
                                matita_arithmetics_nat.nat q
                                matita_arithmetics_nat.O)
                             H2
                             (cic.lift cic.prop univs.Type1
                                matita_basics_logic.False)
                             (e0 :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_logic.R0
                                        matita_arithmetics_nat.nat qa)
                                     q) =>
                              matita_basics_logic.eq_ind_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                q
                                (x :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 _0 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        x q) =>
                                 cic.prod cic.prop cic.prop
                                   (matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         (matita_basics_types.Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat))
                                      (matita_arithmetics_ord.p_ord_aux
                                         (matita_arithmetics_nat.S n1)
                                         (matita_arithmetics_nat.S n1)
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S p2)))
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat x ra))
                                   (__1 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              (matita_basics_types.Prod
                                                 matita_arithmetics_nat.nat
                                                 matita_arithmetics_nat.nat))
                                           (matita_arithmetics_ord.p_ord_aux
                                              (matita_arithmetics_nat.S n1)
                                              (matita_arithmetics_nat.S n1)
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S p2)))
                                           (matita_basics_types.mk_Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat x ra)) =>
                                    cic.prod cic.prop cic.prop
                                      (matita_basics_logic.eq
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S n1)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     p2))
                                               x)
                                            ra))
                                      (__2 :
                                         cic.Term cic.prop
                                           (matita_basics_logic.eq
                                              (cic.lift univs.Type0
                                                 univs.Type2
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.S n1)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_exp.exp
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          p2))
                                                    x)
                                                 ra)) =>
                                       cic.prod cic.prop cic.prop
                                         (matita_basics_logic.eq
                                            (cic.lift univs.Type0 univs.Type2
                                               (matita_basics_types.Prod
                                                  matita_arithmetics_nat.nat
                                                  matita_arithmetics_nat.nat))
                                            (matita_basics_types.mk_Prod
                                               matita_arithmetics_nat.nat
                                               matita_arithmetics_nat.nat x
                                               ra)
                                            (matita_basics_types.mk_Prod
                                               matita_arithmetics_nat.nat
                                               matita_arithmetics_nat.nat q
                                               matita_arithmetics_nat.O))
                                         (__3 :
                                            cic.Term cic.prop
                                              (matita_basics_logic.eq
                                                 (cic.lift univs.Type0
                                                    univs.Type2
                                                    (matita_basics_types.Prod
                                                       matita_arithmetics_nat.nat
                                                       matita_arithmetics_nat.nat))
                                                 (matita_basics_types.mk_Prod
                                                    matita_arithmetics_nat.nat
                                                    matita_arithmetics_nat.nat
                                                    x ra)
                                                 (matita_basics_types.mk_Prod
                                                    matita_arithmetics_nat.nat
                                                    matita_arithmetics_nat.nat
                                                    q
                                                    matita_arithmetics_nat.O)) =>
                                          cic.prod cic.prop cic.prop
                                            (matita_basics_logic.eq
                                               (cic.lift univs.Type0
                                                  univs.Type2
                                                  matita_arithmetics_nat.nat)
                                               (matita_basics_logic.R1
                                                  (cic.lift univs.Type0
                                                     univs.Type2
                                                     matita_arithmetics_nat.nat)
                                                  x
                                                  (x0 :
                                                     cic.Term univs.Type0
                                                       matita_arithmetics_nat.nat =>
                                                   p0 :
                                                     cic.Term cic.prop
                                                       (matita_basics_logic.eq
                                                          (cic.lift
                                                             univs.Type0
                                                             univs.Type2
                                                             matita_arithmetics_nat.nat)
                                                          x x0) =>
                                                   matita_arithmetics_nat.nat)
                                                  ra q _0)
                                               matita_arithmetics_nat.O)
                                            (_e1 :
                                               cic.Term cic.prop
                                                 (matita_basics_logic.eq
                                                    (cic.lift univs.Type0
                                                       univs.Type2
                                                       matita_arithmetics_nat.nat)
                                                    (matita_basics_logic.R1
                                                       (cic.lift univs.Type0
                                                          univs.Type2
                                                          matita_arithmetics_nat.nat)
                                                       x
                                                       (x0 :
                                                          cic.Term
                                                            univs.Type0
                                                            matita_arithmetics_nat.nat =>
                                                        p0 :
                                                          cic.Term cic.prop
                                                            (matita_basics_logic.eq
                                                               (cic.lift
                                                                  univs.Type0
                                                                  univs.Type2
                                                                  matita_arithmetics_nat.nat)
                                                               x x0) =>
                                                        matita_arithmetics_nat.nat)
                                                       ra q _0)
                                                    matita_arithmetics_nat.O) =>
                                             matita_basics_logic.False)))))
                                (H0 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           (matita_basics_types.Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat))
                                        (matita_arithmetics_ord.p_ord_aux
                                           (matita_arithmetics_nat.S n1)
                                           (matita_arithmetics_nat.S n1)
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S p2)))
                                        (matita_basics_types.mk_Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat q ra)) =>
                                 H10 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S n1)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_exp.exp
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S p2))
                                              q)
                                           ra)) =>
                                 H20 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           (matita_basics_types.Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat))
                                        (matita_basics_types.mk_Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat q ra)
                                        (matita_basics_types.mk_Prod
                                           matita_arithmetics_nat.nat
                                           matita_arithmetics_nat.nat q
                                           matita_arithmetics_nat.O)) =>
                                 e00 :
                                   cic.Term cic.prop
                                     (matita_basics_logic.eq
                                        (cic.lift univs.Type0 univs.Type2
                                           matita_arithmetics_nat.nat)
                                        (matita_basics_logic.R1
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           q
                                           (x0 :
                                              cic.Term univs.Type0
                                                matita_arithmetics_nat.nat =>
                                            p0 :
                                              cic.Term cic.prop
                                                (matita_basics_logic.eq
                                                   (cic.lift univs.Type0
                                                      univs.Type2
                                                      matita_arithmetics_nat.nat)
                                                   q x0) =>
                                            matita_arithmetics_nat.nat)
                                           ra q
                                           (matita_basics_logic.refl
                                              (cic.lift univs.Type0
                                                 univs.Type2
                                                 matita_arithmetics_nat.nat)
                                              q))
                                        matita_arithmetics_nat.O) =>
                                 matita_basics_logic.eq_ind_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   matita_arithmetics_nat.O
                                   (x :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    _0 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           x matita_arithmetics_nat.O) =>
                                    cic.prod cic.prop cic.prop
                                      (matita_basics_logic.eq
                                         (cic.lift univs.Type0 univs.Type2
                                            (matita_basics_types.Prod
                                               matita_arithmetics_nat.nat
                                               matita_arithmetics_nat.nat))
                                         (matita_arithmetics_ord.p_ord_aux
                                            (matita_arithmetics_nat.S n1)
                                            (matita_arithmetics_nat.S n1)
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S p2)))
                                         (matita_basics_types.mk_Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat q x))
                                      (__1 :
                                         cic.Term cic.prop
                                           (matita_basics_logic.eq
                                              (cic.lift univs.Type0
                                                 univs.Type2
                                                 (matita_basics_types.Prod
                                                    matita_arithmetics_nat.nat
                                                    matita_arithmetics_nat.nat))
                                              (matita_arithmetics_ord.p_ord_aux
                                                 (matita_arithmetics_nat.S n1)
                                                 (matita_arithmetics_nat.S n1)
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       p2)))
                                              (matita_basics_types.mk_Prod
                                                 matita_arithmetics_nat.nat
                                                 matita_arithmetics_nat.nat q
                                                 x)) =>
                                       cic.prod cic.prop cic.prop
                                         (matita_basics_logic.eq
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S n1)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_exp.exp
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        p2))
                                                  q)
                                               x))
                                         (__2 :
                                            cic.Term cic.prop
                                              (matita_basics_logic.eq
                                                 (cic.lift univs.Type0
                                                    univs.Type2
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.S n1)
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_exp.exp
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             p2))
                                                       q)
                                                    x)) =>
                                          cic.prod cic.prop cic.prop
                                            (matita_basics_logic.eq
                                               (cic.lift univs.Type0
                                                  univs.Type2
                                                  (matita_basics_types.Prod
                                                     matita_arithmetics_nat.nat
                                                     matita_arithmetics_nat.nat))
                                               (matita_basics_types.mk_Prod
                                                  matita_arithmetics_nat.nat
                                                  matita_arithmetics_nat.nat
                                                  q x)
                                               (matita_basics_types.mk_Prod
                                                  matita_arithmetics_nat.nat
                                                  matita_arithmetics_nat.nat
                                                  q matita_arithmetics_nat.O))
                                            (__3 :
                                               cic.Term cic.prop
                                                 (matita_basics_logic.eq
                                                    (cic.lift univs.Type0
                                                       univs.Type2
                                                       (matita_basics_types.Prod
                                                          matita_arithmetics_nat.nat
                                                          matita_arithmetics_nat.nat))
                                                    (matita_basics_types.mk_Prod
                                                       matita_arithmetics_nat.nat
                                                       matita_arithmetics_nat.nat
                                                       q x)
                                                    (matita_basics_types.mk_Prod
                                                       matita_arithmetics_nat.nat
                                                       matita_arithmetics_nat.nat
                                                       q
                                                       matita_arithmetics_nat.O)) =>
                                             matita_basics_logic.False))))
                                   (H3 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              (matita_basics_types.Prod
                                                 matita_arithmetics_nat.nat
                                                 matita_arithmetics_nat.nat))
                                           (matita_arithmetics_ord.p_ord_aux
                                              (matita_arithmetics_nat.S n1)
                                              (matita_arithmetics_nat.S n1)
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S p2)))
                                           (matita_basics_types.mk_Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat q
                                              matita_arithmetics_nat.O)) =>
                                    H11 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.S n1)
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_exp.exp
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       p2))
                                                 q)
                                              matita_arithmetics_nat.O)) =>
                                    H21 :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              (matita_basics_types.Prod
                                                 matita_arithmetics_nat.nat
                                                 matita_arithmetics_nat.nat))
                                           (matita_basics_types.mk_Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat q
                                              matita_arithmetics_nat.O)
                                           (matita_basics_types.mk_Prod
                                              matita_arithmetics_nat.nat
                                              matita_arithmetics_nat.nat q
                                              matita_arithmetics_nat.O)) =>
                                    matita_basics_logic.streicherK
                                      (cic.lift univs.Type0 univs.Type2
                                         (matita_basics_types.Prod
                                            matita_arithmetics_nat.nat
                                            matita_arithmetics_nat.nat))
                                      (matita_basics_types.mk_Prod
                                         matita_arithmetics_nat.nat
                                         matita_arithmetics_nat.nat q
                                         matita_arithmetics_nat.O)
                                      (__1 :
                                         cic.Term cic.prop
                                           (matita_basics_logic.eq
                                              (cic.lift univs.Type0
                                                 univs.Type2
                                                 (matita_basics_types.Prod
                                                    matita_arithmetics_nat.nat
                                                    matita_arithmetics_nat.nat))
                                              (matita_basics_types.mk_Prod
                                                 matita_arithmetics_nat.nat
                                                 matita_arithmetics_nat.nat q
                                                 matita_arithmetics_nat.O)
                                              (matita_basics_types.mk_Prod
                                                 matita_arithmetics_nat.nat
                                                 matita_arithmetics_nat.nat q
                                                 matita_arithmetics_nat.O)) =>
                                       cic.lift cic.prop univs.Type2
                                         ((_0 :
                                             cic.Term cic.prop
                                               (matita_basics_logic.eq
                                                  (cic.lift univs.Type0
                                                     univs.Type2
                                                     (matita_basics_types.Prod
                                                        matita_arithmetics_nat.nat
                                                        matita_arithmetics_nat.nat))
                                                  (matita_basics_types.mk_Prod
                                                     matita_arithmetics_nat.nat
                                                     matita_arithmetics_nat.nat
                                                     q
                                                     matita_arithmetics_nat.O)
                                                  (matita_basics_types.mk_Prod
                                                     matita_arithmetics_nat.nat
                                                     matita_arithmetics_nat.nat
                                                     q
                                                     matita_arithmetics_nat.O)) =>
                                           matita_basics_logic.False) __1))
                                      (matita_basics_logic.eq_ind
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         matita_arithmetics_nat.O
                                         (x_1 :
                                            cic.Term univs.Type0
                                              matita_arithmetics_nat.nat =>
                                          _x_2 :
                                            cic.Term cic.prop
                                              (matita_basics_logic.eq
                                                 (cic.lift univs.Type0
                                                    univs.Type2
                                                    matita_arithmetics_nat.nat)
                                                 matita_arithmetics_nat.O x_1) =>
                                          cic.prod cic.prop cic.prop
                                            (matita_basics_logic.eq
                                               (cic.lift univs.Type0
                                                  univs.Type2
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.S n1)
                                               x_1)
                                            (__1 :
                                               cic.Term cic.prop
                                                 (matita_basics_logic.eq
                                                    (cic.lift univs.Type0
                                                       univs.Type2
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.S
                                                       n1)
                                                    x_1) =>
                                             matita_basics_logic.False))
                                         (Habs :
                                            cic.Term cic.prop
                                              (matita_basics_logic.eq
                                                 (cic.lift univs.Type0
                                                    univs.Type2
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.S n1)
                                                 matita_arithmetics_nat.O) =>
                                          matita_arithmetics_nat.nat_discr
                                            (matita_arithmetics_nat.S n1)
                                            matita_arithmetics_nat.O Habs
                                            (cic.lift cic.prop univs.Type1
                                               matita_basics_logic.False))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     p2))
                                               q)
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.times_n_O
                                            (matita_arithmetics_exp.exp
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     p2))
                                               q))
                                         H11)
                                      H21)
                                   ra e00 H0 H10 H20)
                                qa e0 H H1 H2)))
                       (matita_arithmetics_ord.p_ord_aux
                          (matita_arithmetics_nat.S n1)
                          (matita_arithmetics_nat.S n1)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S p2)))
                       H)
                    (matita_arithmetics_ord.p_ord_to_exp1
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S p2))
                       (matita_arithmetics_nat.S n1) qa ra
                       (matita_basics_logic.eq_coerc
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt
                                (matita_arithmetics_div_and_mod.mod
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times
                                         matita_arithmetics_nat.O
                                         (matita_arithmetics_div_and_mod.div
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.O)))
                                   (matita_arithmetics_nat.S p2))))
                          (cic.lift cic.prop univs.Type0
                             (matita_arithmetics_nat.lt
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S p2))))
                          (matita_arithmetics_nat.lt_plus_Sn_r
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.times
                                matita_arithmetics_nat.O
                                (matita_arithmetics_div_and_mod.div
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   matita_arithmetics_nat.O))
                             p2)
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt
                                          (matita_arithmetics_div_and_mod.mod
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O)
                                             matita_arithmetics_nat.O)
                                          (matita_arithmetics_nat.plus x
                                             (matita_arithmetics_nat.S p2))))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt
                                          (matita_arithmetics_nat.S
                                             matita_arithmetics_nat.O)
                                          (matita_arithmetics_nat.S
                                             (matita_arithmetics_nat.S p2)))))
                                   __))
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift (cic.succ univs.Type0)
                                          univs.Type2 (cic.univ univs.Type0))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt x
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)
                                                (matita_arithmetics_nat.S p2))))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O)
                                             (matita_arithmetics_nat.S
                                                (matita_arithmetics_nat.S p2)))))
                                      __))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S p2))
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift (cic.succ univs.Type0)
                                             univs.Type2
                                             (cic.univ univs.Type0))
                                          (cic.lift cic.prop univs.Type0
                                             (matita_arithmetics_nat.lt
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)
                                                x))
                                          (cic.lift cic.prop univs.Type0
                                             (matita_arithmetics_nat.lt
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)
                                                (matita_arithmetics_nat.S
                                                   (matita_arithmetics_nat.S
                                                      p2)))))
                                         __))
                                   (matita_basics_logic.refl
                                      (cic.lift (cic.succ univs.Type0)
                                         univs.Type2 (cic.univ univs.Type0))
                                      (cic.lift cic.prop univs.Type0
                                         (matita_arithmetics_nat.lt
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S p2)))))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.S p2))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S p2)
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)
                                                x)
                                             (matita_arithmetics_nat.S
                                                (matita_arithmetics_nat.S p2)))
                                            __))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S p2))
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (__ :
                                            cic.Term univs.Type0
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop univs.Type2
                                            ((x :
                                                cic.Term univs.Type0
                                                  matita_arithmetics_nat.nat =>
                                              matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.S
                                                      matita_arithmetics_nat.O)
                                                   (matita_arithmetics_nat.times
                                                      (matita_arithmetics_nat.S
                                                         p2)
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O)))
                                                x)
                                               __))
                                         (matita_arithmetics_nat.times_Sn_m
                                            (matita_arithmetics_nat.S p2)
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S p2))
                                         (matita_arithmetics_nat.times_n_1
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S p2))))
                                      (matita_arithmetics_nat.S p2)
                                      (matita_arithmetics_nat.times_n_1
                                         (matita_arithmetics_nat.S p2))))
                                (matita_arithmetics_div_and_mod.mod
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   matita_arithmetics_nat.O)
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus
                                      matita_arithmetics_nat.O
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O))
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.S
                                             matita_arithmetics_nat.O)
                                          x)
                                         __))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O)
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O)
                                             x)
                                            __))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_div_and_mod.div
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O))
                                         (__ :
                                            cic.Term univs.Type0
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop univs.Type2
                                            ((x :
                                                cic.Term univs.Type0
                                                  matita_arithmetics_nat.nat =>
                                              matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_div_and_mod.mod
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O)
                                                      matita_arithmetics_nat.O)
                                                   x))
                                               __))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  matita_arithmetics_nat.O
                                                  (matita_arithmetics_div_and_mod.div
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_div_and_mod.mod
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.O))
                                            (__ :
                                               cic.Term univs.Type0
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop univs.Type2
                                               ((x :
                                                   cic.Term univs.Type0
                                                     matita_arithmetics_nat.nat =>
                                                 matita_basics_logic.eq
                                                   (cic.lift univs.Type0
                                                      univs.Type2
                                                      matita_arithmetics_nat.nat)
                                                   (matita_arithmetics_nat.S
                                                      matita_arithmetics_nat.O)
                                                   x)
                                                  __))
                                            (matita_arithmetics_ord.let_clause_10331
                                               p n n1 q p1 p2 qa ra H
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.mod
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.O)
                                               (matita_arithmetics_nat.times
                                                  matita_arithmetics_nat.O
                                                  (matita_arithmetics_div_and_mod.div
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.O)))
                                            (matita_arithmetics_nat.commutative_plus
                                               (matita_arithmetics_nat.times
                                                  matita_arithmetics_nat.O
                                                  (matita_arithmetics_div_and_mod.div
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_div_and_mod.mod
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.O)))
                                         matita_arithmetics_nat.O
                                         (matita_arithmetics_nat.times_O_n
                                            (matita_arithmetics_div_and_mod.div
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.O)))
                                      (matita_arithmetics_nat.plus
                                         matita_arithmetics_nat.O
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.commutative_plus
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.plus_O_n
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O))))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.times
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_div_and_mod.div
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.O)))
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      matita_arithmetics_nat.O
                                      (matita_arithmetics_div_and_mod.div
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.O))
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)
                                       x)
                                      __))
                                (matita_arithmetics_ord.let_clause_10331 p n
                                   n1 q p1 p2 qa ra H
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.times
                                      matita_arithmetics_nat.O
                                      (matita_arithmetics_div_and_mod.div
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_nat.commutative_plus
                                   (matita_arithmetics_nat.times
                                      matita_arithmetics_nat.O
                                      (matita_arithmetics_div_and_mod.div
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.O)))))
                       (matita_arithmetics_nat.lt_O_S n1) H))
                 (matita_arithmetics_ord.p_ord_aux
                    (matita_arithmetics_nat.S n1)
                    (matita_arithmetics_nat.S n1)
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S p2)))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat))
                    (matita_arithmetics_ord.p_ord_aux
                       (matita_arithmetics_nat.S n1)
                       (matita_arithmetics_nat.S n1)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S p2)))))
              p1)
           p)
        n.

def p_ord_times :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      a : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      qa : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      ra : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      qb : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      rb : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O a) ->
      __2 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O b) ->
      __3 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord a p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat qa ra)) ->
      __4 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord b p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat qb rb)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord (matita_arithmetics_nat.times a b) p)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_nat.plus qa qb)
              (matita_arithmetics_nat.times ra rb)))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      qa : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      ra : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      qb : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      rb : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      Hprime : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      posa :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O a) =>
      posb :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O b) =>
      porda :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord a p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat qa ra)) =>
      pordb :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord b p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat qb rb)) =>
      matita_basics_logic.match_And
        (matita_basics_logic.Not (matita_arithmetics_primes.divides p ra))
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) a
           (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p qa) ra))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_basics_logic.Not
                   (matita_arithmetics_primes.divides p ra))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   a
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp p qa) ra))) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord (matita_arithmetics_nat.times a b) p)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_nat.plus qa qb)
              (matita_arithmetics_nat.times ra rb)))
        (Hdiva :
           cic.Term cic.prop
             (matita_basics_logic.Not
                (matita_arithmetics_primes.divides p ra)) =>
         Ha :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                a
                (matita_arithmetics_nat.times
                   (matita_arithmetics_exp.exp p qa) ra)) =>
         matita_basics_logic.And_ind
           (matita_basics_logic.Not (matita_arithmetics_primes.divides p rb))
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) b
              (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p qb)
                 rb))
           (_x_118 :
              cic.Term cic.prop
                (matita_basics_logic.And
                   (matita_basics_logic.Not
                      (matita_arithmetics_primes.divides p rb))
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      b
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_exp.exp p qb) rb))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_ord.p_ord
                 (matita_arithmetics_nat.times a b) p)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_nat.plus qa qb)
                 (matita_arithmetics_nat.times ra rb)))
           (Hdivb :
              cic.Term cic.prop
                (matita_basics_logic.Not
                   (matita_arithmetics_primes.divides p rb)) =>
            Hb :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   b
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp p qb) rb)) =>
            matita_arithmetics_ord.p_ord_exp1 p
              (matita_arithmetics_nat.times a b)
              (matita_arithmetics_nat.plus qa qb)
              (matita_arithmetics_nat.times ra rb)
              (matita_arithmetics_nat.lt_to_le
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) p
                 (matita_arithmetics_primes.prime_to_lt_SO p Hprime))
              (matita_basics_logic.nmk
                 (matita_arithmetics_primes.divides p
                    (matita_arithmetics_nat.times ra rb))
                 (Hdiv :
                    cic.Term cic.prop
                      (matita_arithmetics_primes.divides p
                         (matita_arithmetics_nat.times ra rb)) =>
                  matita_basics_logic.match_Or
                    (matita_arithmetics_primes.divides p ra)
                    (matita_arithmetics_primes.divides p rb) cic.prop
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.Or
                            (matita_arithmetics_primes.divides p ra)
                            (matita_arithmetics_primes.divides p rb)) =>
                     matita_basics_logic.False)
                    (Habs :
                       cic.Term cic.prop
                         (matita_arithmetics_primes.divides p ra) =>
                     matita_basics_logic.absurd
                       (matita_arithmetics_primes.divides p ra) Habs Hdiva)
                    (Habs :
                       cic.Term cic.prop
                         (matita_arithmetics_primes.divides p rb) =>
                     matita_basics_logic.absurd
                       (matita_arithmetics_primes.divides p rb) Habs Hdivb)
                    (matita_arithmetics_gcd.divides_times_to_divides p ra rb
                       Hprime Hdiv)))
              (matita_basics_logic.eq_ind_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp p qa) ra)
                 (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_exp.exp p qa) ra)) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times x b)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp p
                          (matita_arithmetics_nat.plus qa qb))
                       (matita_arithmetics_nat.times ra rb)))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp p qb) rb)
                    (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_exp.exp p qb) rb)) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp p qa) ra)
                          x)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp p
                             (matita_arithmetics_nat.plus qa qb))
                          (matita_arithmetics_nat.times ra rb)))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times ra
                          (matita_arithmetics_exp.exp p qa))
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              (matita_arithmetics_nat.times x
                                 (matita_arithmetics_nat.times
                                    (matita_arithmetics_exp.exp p qb) rb))
                              (matita_arithmetics_nat.times
                                 (matita_arithmetics_exp.exp p
                                    (matita_arithmetics_nat.plus qa qb))
                                 (matita_arithmetics_nat.times ra rb)))
                             __))
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times rb
                             (matita_arithmetics_exp.exp p qb))
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 (matita_arithmetics_nat.times
                                    (matita_arithmetics_nat.times ra
                                       (matita_arithmetics_exp.exp p qa))
                                    x)
                                 (matita_arithmetics_nat.times
                                    (matita_arithmetics_exp.exp p
                                       (matita_arithmetics_nat.plus qa qb))
                                    (matita_arithmetics_nat.times ra rb)))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times ra
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp p qa)
                                   (matita_arithmetics_nat.times rb
                                      (matita_arithmetics_exp.exp p qb))))
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    x
                                    (matita_arithmetics_nat.times
                                       (matita_arithmetics_exp.exp p
                                          (matita_arithmetics_nat.plus qa qb))
                                       (matita_arithmetics_nat.times ra rb)))
                                   __))
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times rb
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp p qa)
                                      (matita_arithmetics_exp.exp p qb)))
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.times ra x)
                                       (matita_arithmetics_nat.times
                                          (matita_arithmetics_exp.exp p
                                             (matita_arithmetics_nat.plus qa
                                                qb))
                                          (matita_arithmetics_nat.times ra rb)))
                                      __))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp p qa)
                                      (matita_arithmetics_exp.exp p qb))
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.times ra
                                             (matita_arithmetics_nat.times rb
                                                (matita_arithmetics_nat.times
                                                   (matita_arithmetics_exp.exp
                                                      p qa)
                                                   (matita_arithmetics_exp.exp
                                                      p qb))))
                                          (matita_arithmetics_nat.times x
                                             (matita_arithmetics_nat.times ra
                                                rb)))
                                         __))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times ra rb)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp p qa)
                                            (matita_arithmetics_exp.exp p qb)))
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.times ra
                                                (matita_arithmetics_nat.times
                                                   rb
                                                   (matita_arithmetics_nat.times
                                                      (matita_arithmetics_exp.exp
                                                         p qa)
                                                      (matita_arithmetics_exp.exp
                                                         p qb))))
                                             x)
                                            __))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift univs.Type0 univs.Type2
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times ra
                                            (matita_arithmetics_nat.times rb
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_exp.exp
                                                     p qa)
                                                  (matita_arithmetics_exp.exp
                                                     p qb))))
                                         (__ :
                                            cic.Term univs.Type0
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop univs.Type2
                                            ((x :
                                                cic.Term univs.Type0
                                                  matita_arithmetics_nat.nat =>
                                              matita_basics_logic.eq
                                                (cic.lift univs.Type0
                                                   univs.Type2
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.times
                                                   ra
                                                   (matita_arithmetics_nat.times
                                                      rb
                                                      (matita_arithmetics_nat.times
                                                         (matita_arithmetics_exp.exp
                                                            p qa)
                                                         (matita_arithmetics_exp.exp
                                                            p qb))))
                                                x)
                                               __))
                                         (matita_basics_logic.refl
                                            (cic.lift univs.Type0 univs.Type2
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times ra
                                               (matita_arithmetics_nat.times
                                                  rb
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_exp.exp
                                                        p qa)
                                                     (matita_arithmetics_exp.exp
                                                        p qb)))))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times ra
                                               rb)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_exp.exp p
                                                  qa)
                                               (matita_arithmetics_exp.exp p
                                                  qb)))
                                         (matita_arithmetics_nat.associative_times
                                            ra rb
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_exp.exp p
                                                  qa)
                                               (matita_arithmetics_exp.exp p
                                                  qb))))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp p qa)
                                            (matita_arithmetics_exp.exp p qb))
                                         (matita_arithmetics_nat.times ra rb))
                                      (matita_arithmetics_nat.commutative_times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp p qa)
                                            (matita_arithmetics_exp.exp p qb))
                                         (matita_arithmetics_nat.times ra rb)))
                                   (matita_arithmetics_exp.exp p
                                      (matita_arithmetics_nat.plus qa qb))
                                   (matita_arithmetics_exp.exp_plus_times p
                                      qa qb))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp p qa)
                                   (matita_arithmetics_nat.times rb
                                      (matita_arithmetics_exp.exp p qb)))
                                (matita_arithmetics_nat.times_times
                                   (matita_arithmetics_exp.exp p qa) rb
                                   (matita_arithmetics_exp.exp p qb)))
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.times ra
                                   (matita_arithmetics_exp.exp p qa))
                                (matita_arithmetics_nat.times rb
                                   (matita_arithmetics_exp.exp p qb)))
                             (matita_arithmetics_nat.associative_times ra
                                (matita_arithmetics_exp.exp p qa)
                                (matita_arithmetics_nat.times rb
                                   (matita_arithmetics_exp.exp p qb))))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp p qb) rb)
                          (matita_arithmetics_nat.commutative_times
                             (matita_arithmetics_exp.exp p qb) rb))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp p qa) ra)
                       (matita_arithmetics_nat.commutative_times
                          (matita_arithmetics_exp.exp p qa) ra))
                    b Hb)
                 a Ha))
           (matita_arithmetics_ord.p_ord_to_exp1 p b qb rb
              (matita_arithmetics_primes.prime_to_lt_SO p Hprime) posb pordb))
        (matita_arithmetics_ord.p_ord_to_exp1 p a qa ra
           (matita_arithmetics_primes.prime_to_lt_SO p Hprime) posa porda).

def fst_p_ord_times :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      a : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O a) ->
      __2 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O b) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_basics_types.fst matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat
              (matita_arithmetics_ord.p_ord
                 (matita_arithmetics_nat.times a b) p))
           (matita_arithmetics_nat.plus
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord a p))
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord b p))))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      primep : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      posa :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O a) =>
      posb :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O b) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2
           (matita_basics_types.Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat))
        (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat
           (matita_arithmetics_nat.plus
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord a p))
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord b p)))
           (matita_arithmetics_nat.times
              (matita_basics_types.snd matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord a p))
              (matita_basics_types.snd matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord b p))))
        (x :
           cic.Term univs.Type0
             (matita_basics_types.Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat) =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat))
                x
                (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_nat.plus
                      (matita_basics_types.fst matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_ord.p_ord a p))
                      (matita_basics_types.fst matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_ord.p_ord b p)))
                   (matita_arithmetics_nat.times
                      (matita_basics_types.snd matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_ord.p_ord a p))
                      (matita_basics_types.snd matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat
                         (matita_arithmetics_ord.p_ord b p))))) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_basics_types.fst matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat x)
           (matita_arithmetics_nat.plus
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord a p))
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord b p))))
        (matita_basics_logic.refl
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.plus
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord a p))
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord b p))))
        (matita_arithmetics_ord.p_ord (matita_arithmetics_nat.times a b) p)
        (matita_arithmetics_ord.p_ord_times p a b
           (matita_basics_types.fst matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord a p))
           (matita_basics_types.snd matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord a p))
           (matita_basics_types.fst matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord b p))
           (matita_basics_types.snd matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord b p))
           primep posa posb
           (matita_basics_logic.rewrite_l
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_ord.p_ord a p)
              (__ :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               cic.lift cic.prop univs.Type2
                 ((x :
                     cic.Term univs.Type0
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat) =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        (matita_basics_types.Prod matita_arithmetics_nat.nat
                           matita_arithmetics_nat.nat))
                     (matita_arithmetics_ord.p_ord a p) x)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord a p))
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_basics_types.fst matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_ord.p_ord a p))
                 (matita_basics_types.snd matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_ord.p_ord a p)))
              (matita_basics_types.eq_pair_fst_snd matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord a p)))
           (matita_basics_logic.rewrite_l
              (cic.lift univs.Type0 univs.Type2
                 (matita_basics_types.Prod matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat))
              (matita_arithmetics_ord.p_ord b p)
              (__ :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               cic.lift cic.prop univs.Type2
                 ((x :
                     cic.Term univs.Type0
                       (matita_basics_types.Prod matita_arithmetics_nat.nat
                          matita_arithmetics_nat.nat) =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        (matita_basics_types.Prod matita_arithmetics_nat.nat
                           matita_arithmetics_nat.nat))
                     (matita_arithmetics_ord.p_ord b p) x)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2
                    (matita_basics_types.Prod matita_arithmetics_nat.nat
                       matita_arithmetics_nat.nat))
                 (matita_arithmetics_ord.p_ord b p))
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_basics_types.fst matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_ord.p_ord b p))
                 (matita_basics_types.snd matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat
                    (matita_arithmetics_ord.p_ord b p)))
              (matita_basics_types.eq_pair_fst_snd matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat
                 (matita_arithmetics_ord.p_ord b p)))).

def p_ord_p :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord p p)
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      ltp1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) =>
      matita_arithmetics_ord.p_ord_exp1 p p
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (matita_arithmetics_nat.lt_to_le
           (matita_arithmetics_nat.S matita_arithmetics_nat.O) p ltp1)
        (matita_basics_logic.nmk
           (matita_arithmetics_primes.divides p
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (divp1 :
              cic.Term cic.prop
                (matita_arithmetics_primes.divides p
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
            matita_basics_logic.absurd
              (matita_arithmetics_nat.lt
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) p)
              ltp1
              (matita_arithmetics_nat.le_to_not_lt p
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 (matita_arithmetics_primes.divides_to_le p
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.lt_O_S matita_arithmetics_nat.O)
                    divp1))))
        (matita_basics_logic.rewrite_l
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) p
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2
                     matita_arithmetics_nat.nat)
                  p
                  (matita_arithmetics_nat.times x
                     (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 __))
           (matita_basics_logic.rewrite_l
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus p
                 (matita_arithmetics_nat.times p matita_arithmetics_nat.O))
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_arithmetics_nat.nat)
                     p x)
                    __))
              (matita_basics_logic.rewrite_l
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        p (matita_arithmetics_nat.plus p x))
                       __))
                 (matita_basics_logic.rewrite_l
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    p
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           p x)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       p)
                    (matita_arithmetics_nat.plus p matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.plus_n_O p))
                 (matita_arithmetics_nat.times p matita_arithmetics_nat.O)
                 (matita_arithmetics_nat.times_n_O p))
              (matita_arithmetics_nat.times p
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_arithmetics_nat.times_n_Sm p matita_arithmetics_nat.O))
           (matita_arithmetics_exp.exp p
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_arithmetics_exp.exp_n_1 p)).

def divides_to_p_ord :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      a : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      c : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      d : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __2 : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __3 : cic.Term cic.prop (matita_arithmetics_primes.divides n m) ->
      __4 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord n p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat a b)) ->
      __5 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord m p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat c d)) ->
      cic.Term cic.prop
        (matita_basics_logic.And (matita_arithmetics_primes.divides b d)
           (matita_arithmetics_nat.le a c))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      b : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      c : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      d : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      primep : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      divnm : cic.Term cic.prop (matita_arithmetics_primes.divides n m) =>
      ordn :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord n p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat a b)) =>
      ordm :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord m p)
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat c d)) =>
      matita_basics_logic.match_And
        (matita_basics_logic.Not (matita_arithmetics_primes.divides p b))
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
           (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p a) b))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_basics_logic.Not
                   (matita_arithmetics_primes.divides p b))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   n
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp p a) b))) =>
         matita_basics_logic.And (matita_arithmetics_primes.divides b d)
           (matita_arithmetics_nat.le a c))
        (divn :
           cic.Term cic.prop
             (matita_basics_logic.Not (matita_arithmetics_primes.divides p b)) =>
         eqn :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                n
                (matita_arithmetics_nat.times
                   (matita_arithmetics_exp.exp p a) b)) =>
         matita_basics_logic.match_And
           (matita_basics_logic.Not (matita_arithmetics_primes.divides p d))
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
              (matita_arithmetics_nat.times (matita_arithmetics_exp.exp p c)
                 d))
           cic.prop
           (__ :
              cic.Term cic.prop
                (matita_basics_logic.And
                   (matita_basics_logic.Not
                      (matita_arithmetics_primes.divides p d))
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      m
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_exp.exp p c) d))) =>
            matita_basics_logic.And (matita_arithmetics_primes.divides b d)
              (matita_arithmetics_nat.le a c))
           (divm :
              cic.Term cic.prop
                (matita_basics_logic.Not
                   (matita_arithmetics_primes.divides p d)) =>
            eqm :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   m
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp p c) d)) =>
            matita_basics_logic.conj (matita_arithmetics_primes.divides b d)
              (matita_arithmetics_nat.le a c)
              (matita_arithmetics_gcd.gcd_1_to_divides_times_to_divides b
                 (matita_arithmetics_exp.exp p c) d
                 (matita_basics_logic.match_Or
                    (matita_arithmetics_nat.lt matita_arithmetics_nat.O b)
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O b)
                    cic.prop
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.Or
                            (matita_arithmetics_nat.lt
                               matita_arithmetics_nat.O b)
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               matita_arithmetics_nat.O b)) =>
                     matita_arithmetics_nat.lt matita_arithmetics_nat.O b)
                    (auto :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                            b) =>
                     auto)
                    (auto :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            matita_arithmetics_nat.O b) =>
                     matita_basics_logic.eq_coerc
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                             n))
                       (cic.lift cic.prop univs.Type0
                          (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                             b))
                       posn
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          b
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.succ univs.Type0) univs.Type2
                                    (cic.univ univs.Type0))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt x n))
                                 (cic.lift cic.prop univs.Type0
                                    (matita_arithmetics_nat.lt
                                       matita_arithmetics_nat.O b)))
                                __))
                          (matita_basics_logic.rewrite_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             b
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift (cic.succ univs.Type0)
                                       univs.Type2 (cic.univ univs.Type0))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt b x))
                                    (cic.lift cic.prop univs.Type0
                                       (matita_arithmetics_nat.lt
                                          matita_arithmetics_nat.O b)))
                                   __))
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                b
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift (cic.succ univs.Type0)
                                          univs.Type2 (cic.univ univs.Type0))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt b b))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_nat.lt x b)))
                                      __))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.succ univs.Type0)
                                      univs.Type2 (cic.univ univs.Type0))
                                   (cic.lift cic.prop univs.Type0
                                      (matita_arithmetics_nat.lt b b)))
                                matita_arithmetics_nat.O auto)
                             n
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_exp.exp p a))
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       n x)
                                      __))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp p a) b)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          n x)
                                         __))
                                   eqn
                                   (matita_arithmetics_nat.times b
                                      (matita_arithmetics_exp.exp p a))
                                   (matita_arithmetics_nat.commutative_times
                                      (matita_arithmetics_exp.exp p a) b))
                                b
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   matita_arithmetics_nat.O
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          b
                                          (matita_arithmetics_nat.times x
                                             (matita_arithmetics_exp.exp p a)))
                                         __))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      matita_arithmetics_nat.O
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             x
                                             (matita_arithmetics_nat.times
                                                matita_arithmetics_nat.O
                                                (matita_arithmetics_exp.exp p
                                                   a)))
                                            __))
                                      (matita_arithmetics_nat.times_O_n
                                         (matita_arithmetics_exp.exp p a))
                                      b auto)
                                   b auto)))
                          matita_arithmetics_nat.O auto))
                    (matita_arithmetics_nat.le_to_or_lt_eq
                       matita_arithmetics_nat.O b
                       (matita_arithmetics_nat.le_O_n b)))
                 (matita_arithmetics_nat.nat_ind
                    (_x_365 :
                       cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_gcd.gcd b
                          (matita_arithmetics_exp.exp p _x_365))
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_gcd.gcd
                          (matita_arithmetics_exp.exp p
                             matita_arithmetics_nat.O)
                          b)
                       (x :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_gcd.gcd
                                  (matita_arithmetics_exp.exp p
                                     matita_arithmetics_nat.O)
                                  b)) =>
                        matita_basics_logic.eq
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 x
                                 (matita_arithmetics_nat.S
                                    matita_arithmetics_nat.O))
                                __))
                          (matita_basics_logic.refl
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_gcd.gcd
                             (matita_arithmetics_exp.exp p
                                matita_arithmetics_nat.O)
                             b)
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    (matita_arithmetics_gcd.gcd x b)
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O))
                                   __))
                             (matita_arithmetics_gcd.gcd_SO_n b)
                             (matita_arithmetics_exp.exp p
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_exp.exp_n_O p)))
                       (matita_arithmetics_gcd.gcd b
                          (matita_arithmetics_exp.exp p
                             matita_arithmetics_nat.O))
                       (matita_arithmetics_gcd.commutative_gcd b
                          (matita_arithmetics_exp.exp p
                             matita_arithmetics_nat.O)))
                    (c0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     Hind :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_gcd.gcd b
                               (matita_arithmetics_exp.exp p c0))
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)) =>
                     matita_arithmetics_gcd.eq_gcd_times_1 b
                       (matita_arithmetics_exp.exp p c0) p
                       (matita_arithmetics_exp.lt_O_exp p c0
                          (matita_arithmetics_nat.lt_to_le
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             p
                             (matita_arithmetics_primes.prime_to_lt_SO p
                                primep)))
                       (matita_arithmetics_nat.lt_to_le
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          p
                          (matita_arithmetics_primes.prime_to_lt_SO p primep))
                       Hind
                       (matita_basics_logic.eq_ind_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_gcd.gcd p b)
                          (x :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  x (matita_arithmetics_gcd.gcd p b)) =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_gcd.prime_to_gcd_1 p b primep
                             divn)
                          (matita_arithmetics_gcd.gcd b p)
                          (matita_arithmetics_gcd.commutative_gcd b p)))
                    c)
                 (matita_arithmetics_primes.transitive_divides b n
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp p c) d)
                    (matita_arithmetics_primes.quotient b n
                       (matita_arithmetics_exp.exp p a)
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          n
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 n x)
                                __))
                          (matita_basics_logic.refl
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             n)
                          (matita_arithmetics_nat.times b
                             (matita_arithmetics_exp.exp p a))
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_exp.exp p a) b)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    n x)
                                   __))
                             eqn
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_exp.exp p a))
                             (matita_arithmetics_nat.commutative_times
                                (matita_arithmetics_exp.exp p a) b))))
                    (matita_basics_logic.eq_ind
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m
                       (x_1 :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        _x_2 :
                          cic.Term cic.prop
                            (matita_basics_logic.eq
                               (cic.lift univs.Type0 univs.Type2
                                  matita_arithmetics_nat.nat)
                               m x_1) =>
                        matita_arithmetics_primes.divides n x_1)
                       divnm
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp p c) d)
                       eqm)))
              (matita_arithmetics_exp.le_exp_to_le p a c
                 (matita_arithmetics_primes.prime_to_lt_SO p primep)
                 (matita_arithmetics_primes.divides_to_le
                    (matita_arithmetics_exp.exp p a)
                    (matita_arithmetics_exp.exp p c)
                    (matita_arithmetics_exp.lt_O_exp p c
                       (matita_arithmetics_nat.lt_to_le
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          p
                          (matita_arithmetics_primes.prime_to_lt_SO p primep)))
                    (matita_arithmetics_gcd.gcd_1_to_divides_times_to_divides
                       (matita_arithmetics_exp.exp p a) d
                       (matita_arithmetics_exp.exp p c)
                       (matita_arithmetics_exp.lt_O_exp p a
                          (matita_arithmetics_nat.lt_to_le
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             p
                             (matita_arithmetics_primes.prime_to_lt_SO p
                                primep)))
                       (matita_arithmetics_nat.nat_ind
                          (_x_365 :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           matita_basics_logic.eq
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_gcd.gcd
                                (matita_arithmetics_exp.exp p _x_365) d)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_gcd.gcd_SO_n d)
                          (a0 :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           Hind :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift univs.Type0 univs.Type2
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_gcd.gcd
                                     (matita_arithmetics_exp.exp p a0) d)
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O)) =>
                           matita_basics_logic.eq_ind_r
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_gcd.gcd d
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp p a0) p))
                             (x :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  (matita_basics_logic.eq
                                     (cic.lift univs.Type0 univs.Type2
                                        matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_gcd.gcd d
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_exp.exp p a0)
                                           p))) =>
                              matita_basics_logic.eq
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_gcd.eq_gcd_times_1 d
                                (matita_arithmetics_exp.exp p a0) p
                                (matita_arithmetics_exp.lt_O_exp p a0
                                   (matita_arithmetics_nat.lt_to_le
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      p
                                      (matita_arithmetics_primes.prime_to_lt_SO
                                         p primep)))
                                (matita_arithmetics_nat.lt_to_le
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   p
                                   (matita_arithmetics_primes.prime_to_lt_SO
                                      p primep))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_gcd.gcd d
                                      (matita_arithmetics_exp.exp p a0))
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_gcd.gcd d
                                             (matita_arithmetics_exp.exp p a0))
                                          x)
                                         __))
                                   (matita_basics_logic.refl
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_gcd.gcd d
                                         (matita_arithmetics_exp.exp p a0)))
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_gcd.gcd
                                         (matita_arithmetics_exp.exp p a0) d)
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             x
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O))
                                            __))
                                      Hind
                                      (matita_arithmetics_gcd.gcd d
                                         (matita_arithmetics_exp.exp p a0))
                                      (matita_arithmetics_gcd.commutative_gcd
                                         (matita_arithmetics_exp.exp p a0) d)))
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_gcd.gcd p d)
                                   (x :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term cic.prop
                                        (matita_basics_logic.eq
                                           (cic.lift univs.Type0 univs.Type2
                                              matita_arithmetics_nat.nat)
                                           x (matita_arithmetics_gcd.gcd p d)) =>
                                    matita_basics_logic.eq
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      x
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_gcd.prime_to_gcd_1 p d
                                      primep divm)
                                   (matita_arithmetics_gcd.gcd d p)
                                   (matita_arithmetics_gcd.commutative_gcd d
                                      p)))
                             (matita_arithmetics_gcd.gcd
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp p a0) p)
                                d)
                             (matita_arithmetics_gcd.commutative_gcd
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp p a0) p)
                                d))
                          a)
                       (matita_arithmetics_primes.transitive_divides
                          (matita_arithmetics_exp.exp p a) n
                          (matita_arithmetics_nat.times d
                             (matita_arithmetics_exp.exp p c))
                          (matita_arithmetics_primes.quotient
                             (matita_arithmetics_exp.exp p a) n b
                             (matita_basics_logic.rewrite_r
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_exp.exp p a))
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift univs.Type0 univs.Type2
                                          matita_arithmetics_nat.nat)
                                       n x)
                                      __))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   n
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          n x)
                                         __))
                                   (matita_basics_logic.refl
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      n)
                                   (matita_arithmetics_nat.times b
                                      (matita_arithmetics_exp.exp p a))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift univs.Type0 univs.Type2
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_exp.exp p a) b)
                                      (__ :
                                         cic.Term univs.Type0
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop univs.Type2
                                         ((x :
                                             cic.Term univs.Type0
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_logic.eq
                                             (cic.lift univs.Type0
                                                univs.Type2
                                                matita_arithmetics_nat.nat)
                                             n x)
                                            __))
                                      eqn
                                      (matita_arithmetics_nat.times b
                                         (matita_arithmetics_exp.exp p a))
                                      (matita_arithmetics_nat.commutative_times
                                         (matita_arithmetics_exp.exp p a) b)))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp p a) b)
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_exp.exp p a) b)))
                          (matita_basics_logic.eq_coerc
                             (cic.lift cic.prop univs.Type0
                                (matita_arithmetics_primes.divides n m))
                             (cic.lift cic.prop univs.Type0
                                (matita_arithmetics_primes.divides n
                                   (matita_arithmetics_nat.times d
                                      (matita_arithmetics_exp.exp p c))))
                             divnm
                             (matita_basics_logic.rewrite_l
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                m
                                (__ :
                                   cic.Term univs.Type0
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop univs.Type2
                                   ((x :
                                       cic.Term univs.Type0
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.eq
                                       (cic.lift (cic.succ univs.Type0)
                                          univs.Type2 (cic.univ univs.Type0))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_primes.divides
                                             n m))
                                       (cic.lift cic.prop univs.Type0
                                          (matita_arithmetics_primes.divides
                                             n x)))
                                      __))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.succ univs.Type0)
                                      univs.Type2 (cic.univ univs.Type0))
                                   (cic.lift cic.prop univs.Type0
                                      (matita_arithmetics_primes.divides n m)))
                                (matita_arithmetics_nat.times d
                                   (matita_arithmetics_exp.exp p c))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift univs.Type0 univs.Type2
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp p c) d)
                                   (__ :
                                      cic.Term univs.Type0
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop univs.Type2
                                      ((x :
                                          cic.Term univs.Type0
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_logic.eq
                                          (cic.lift univs.Type0 univs.Type2
                                             matita_arithmetics_nat.nat)
                                          m x)
                                         __))
                                   eqm
                                   (matita_arithmetics_nat.times d
                                      (matita_arithmetics_exp.exp p c))
                                   (matita_arithmetics_nat.commutative_times
                                      (matita_arithmetics_exp.exp p c) d)))))))))
           (matita_arithmetics_ord.p_ord_to_exp1 p m c d
              (matita_arithmetics_primes.prime_to_lt_SO p primep) posm ordm))
        (matita_arithmetics_ord.p_ord_to_exp1 p n a b
           (matita_arithmetics_primes.prime_to_lt_SO p primep) posn ordn).

def not_divides_to_p_ord_O :
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_basics_logic.Not
             (matita_arithmetics_primes.divides
                (matita_arithmetics_primes.nth_prime i) n)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_arithmetics_ord.p_ord n
              (matita_arithmetics_primes.nth_prime i))
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat matita_arithmetics_nat.O n))
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_basics_logic.Not
             (matita_arithmetics_primes.divides
                (matita_arithmetics_primes.nth_prime i) n)) =>
      matita_arithmetics_ord.p_ord_exp1
        (matita_arithmetics_primes.nth_prime i) n matita_arithmetics_nat.O n
        (matita_arithmetics_primes.lt_O_nth_prime_n i) H
        (matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp
                 (matita_arithmetics_primes.nth_prime i)
                 matita_arithmetics_nat.O)
              n)
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2
                     matita_arithmetics_nat.nat)
                  x
                  (matita_arithmetics_nat.times
                     (matita_arithmetics_exp.exp
                        (matita_arithmetics_primes.nth_prime i)
                        matita_arithmetics_nat.O)
                     n))
                 __))
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_exp.exp
                    (matita_arithmetics_primes.nth_prime i)
                    matita_arithmetics_nat.O)
                 n))
           n
           (matita_basics_logic.rewrite_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_arithmetics_nat.nat)
                     x
                     (matita_arithmetics_nat.times
                        (matita_arithmetics_exp.exp
                           (matita_arithmetics_primes.nth_prime i)
                           matita_arithmetics_nat.O)
                        n))
                    __))
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times matita_arithmetics_nat.O n)
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        (matita_arithmetics_nat.plus n x)
                        (matita_arithmetics_nat.times
                           (matita_arithmetics_exp.exp
                              (matita_arithmetics_primes.nth_prime i)
                              matita_arithmetics_nat.O)
                           n))
                       __))
                 (matita_basics_logic.rewrite_l
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           (matita_arithmetics_nat.plus n
                              (matita_arithmetics_nat.times
                                 matita_arithmetics_nat.O n))
                           (matita_arithmetics_nat.times x n))
                          __))
                    (matita_arithmetics_nat.times_Sn_m
                       matita_arithmetics_nat.O n)
                    (matita_arithmetics_exp.exp
                       (matita_arithmetics_primes.nth_prime i)
                       matita_arithmetics_nat.O)
                    (matita_arithmetics_exp.exp_n_O
                       (matita_arithmetics_primes.nth_prime i)))
                 matita_arithmetics_nat.O
                 (matita_arithmetics_nat.times_O_n n))
              n (matita_arithmetics_nat.plus_n_O n))).

def p_ord_O_to_not_divides :
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord n
                (matita_arithmetics_primes.nth_prime i))
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat matita_arithmetics_nat.O r)) ->
      cic.Term cic.prop
        (matita_basics_logic.Not
           (matita_arithmetics_primes.divides
              (matita_arithmetics_primes.nth_prime i) n))
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      i : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      Hord :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord n
                (matita_arithmetics_primes.nth_prime i))
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat matita_arithmetics_nat.O r)) =>
      matita_basics_logic.match_And
        (matita_basics_logic.Not
           (matita_arithmetics_primes.divides
              (matita_arithmetics_primes.nth_prime i) r))
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp
                 (matita_arithmetics_primes.nth_prime i)
                 matita_arithmetics_nat.O)
              r))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_basics_logic.Not
                   (matita_arithmetics_primes.divides
                      (matita_arithmetics_primes.nth_prime i) r))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   n
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp
                         (matita_arithmetics_primes.nth_prime i)
                         matita_arithmetics_nat.O)
                      r))) =>
         matita_basics_logic.Not
           (matita_arithmetics_primes.divides
              (matita_arithmetics_primes.nth_prime i) n))
        (H :
           cic.Term cic.prop
             (matita_basics_logic.Not
                (matita_arithmetics_primes.divides
                   (matita_arithmetics_primes.nth_prime i) r)) =>
         matita_basics_logic.eq_ind
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) r
           (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   r x_1) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 n x_1)
              (__ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      n x_1) =>
               matita_basics_logic.Not
                 (matita_arithmetics_primes.divides
                    (matita_arithmetics_primes.nth_prime i) n)))
           (auto :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   n r) =>
            matita_basics_logic.eq_coerc
              (cic.lift cic.prop univs.Type0
                 (matita_basics_logic.Not
                    (matita_arithmetics_primes.divides
                       (matita_arithmetics_primes.nth_prime i) r)))
              (cic.lift cic.prop univs.Type0
                 (matita_basics_logic.Not
                    (matita_arithmetics_primes.divides
                       (matita_arithmetics_primes.nth_prime i) n)))
              H
              (matita_basics_logic.rewrite_l
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 n
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift (cic.succ univs.Type0) univs.Type2
                           (cic.univ univs.Type0))
                        (cic.lift cic.prop univs.Type0
                           (matita_basics_logic.Not
                              (matita_arithmetics_primes.divides
                                 (matita_arithmetics_primes.nth_prime i) x)))
                        (cic.lift cic.prop univs.Type0
                           (matita_basics_logic.Not
                              (matita_arithmetics_primes.divides
                                 (matita_arithmetics_primes.nth_prime i) n))))
                       __))
                 (matita_basics_logic.refl
                    (cic.lift (cic.succ univs.Type0) univs.Type2
                       (cic.univ univs.Type0))
                    (cic.lift cic.prop univs.Type0
                       (matita_basics_logic.Not
                          (matita_arithmetics_primes.divides
                             (matita_arithmetics_primes.nth_prime i) n))))
                 r auto))
           (matita_arithmetics_nat.plus r matita_arithmetics_nat.O)
           (matita_arithmetics_nat.plus_n_O r))
        (matita_arithmetics_ord.p_ord_to_exp1
           (matita_arithmetics_primes.nth_prime i) n matita_arithmetics_nat.O
           r (matita_arithmetics_primes.lt_SO_nth_prime_n i) posn Hord).

def p_ord_to_not_eq_O :
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) n) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord n
                (matita_arithmetics_primes.nth_prime p))
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat q r)) ->
      cic.Term cic.prop
        (matita_basics_logic.Not
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) r
              matita_arithmetics_nat.O))
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      lt1n :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) n) =>
      Hord :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat))
             (matita_arithmetics_ord.p_ord n
                (matita_arithmetics_primes.nth_prime p))
             (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat q r)) =>
      matita_basics_logic.match_And
        (matita_basics_logic.Not
           (matita_arithmetics_primes.divides
              (matita_arithmetics_primes.nth_prime p) r))
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp
                 (matita_arithmetics_primes.nth_prime p) q)
              r))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_basics_logic.Not
                   (matita_arithmetics_primes.divides
                      (matita_arithmetics_primes.nth_prime p) r))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   n
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp
                         (matita_arithmetics_primes.nth_prime p) q)
                      r))) =>
         matita_basics_logic.Not
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) r
              matita_arithmetics_nat.O))
        (H1 :
           cic.Term cic.prop
             (matita_basics_logic.Not
                (matita_arithmetics_primes.divides
                   (matita_arithmetics_primes.nth_prime p) r)) =>
         H2 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                n
                (matita_arithmetics_nat.times
                   (matita_arithmetics_exp.exp
                      (matita_arithmetics_primes.nth_prime p) q)
                   r)) =>
         matita_basics_logic.not_to_not
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) r
              matita_arithmetics_nat.O)
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O n)
           (eqr :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   r matita_arithmetics_nat.O) =>
            matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x matita_arithmetics_nat.O) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp
                          (matita_arithmetics_primes.nth_prime p) q)
                       x))
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         n
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_exp.exp
                               (matita_arithmetics_primes.nth_prime p) q)
                            x)) =>
                  matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O n))
              (auto :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      n
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_exp.exp
                            (matita_arithmetics_primes.nth_prime p) q)
                         matita_arithmetics_nat.O)) =>
               matita_basics_logic.rewrite_l
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 n
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        x n)
                       __))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    n)
                 matita_arithmetics_nat.O
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times matita_arithmetics_nat.O
                       (matita_arithmetics_exp.exp
                          (matita_arithmetics_primes.nth_prime p) q))
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           n x)
                          __))
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp
                             (matita_arithmetics_primes.nth_prime p) q)
                          matita_arithmetics_nat.O)
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              n x)
                             __))
                       auto
                       (matita_arithmetics_nat.times matita_arithmetics_nat.O
                          (matita_arithmetics_exp.exp
                             (matita_arithmetics_primes.nth_prime p) q))
                       (matita_arithmetics_nat.commutative_times
                          (matita_arithmetics_exp.exp
                             (matita_arithmetics_primes.nth_prime p) q)
                          matita_arithmetics_nat.O))
                    matita_arithmetics_nat.O
                    (matita_arithmetics_nat.times_O_n
                       (matita_arithmetics_exp.exp
                          (matita_arithmetics_primes.nth_prime p) q))))
              r eqr H2)
           (matita_arithmetics_nat.lt_to_not_eq matita_arithmetics_nat.O n
              (matita_arithmetics_nat.lt_to_le
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n lt1n)))
        (matita_arithmetics_ord.p_ord_to_exp1
           (matita_arithmetics_primes.nth_prime p) n q r
           (matita_arithmetics_primes.lt_SO_nth_prime_n p)
           (matita_arithmetics_nat.lt_to_le
              (matita_arithmetics_nat.S matita_arithmetics_nat.O) n lt1n)
           Hord).

def ord :
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_types.fst matita_arithmetics_nat.nat
        matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord n p).

def ord_rem :
      __ : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __1 : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_types.snd matita_arithmetics_nat.nat
        matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord n p).

def ord_eq :
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.ord n p)
           (matita_basics_types.fst matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord n p)))
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_logic.refl
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_ord.ord n p).

def ord_rem_eq :
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.ord_rem n p)
           (matita_basics_types.snd matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord n p)))
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_logic.refl
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_ord.ord_rem n p).

def divides_to_ord :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __2 : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __3 : cic.Term cic.prop (matita_arithmetics_primes.divides n m) ->
      cic.Term cic.prop
        (matita_basics_logic.And
           (matita_arithmetics_primes.divides
              (matita_arithmetics_ord.ord_rem n p)
              (matita_arithmetics_ord.ord_rem m p))
           (matita_arithmetics_nat.le (matita_arithmetics_ord.ord n p)
              (matita_arithmetics_ord.ord m p)))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      H1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H2 : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      H3 : cic.Term cic.prop (matita_arithmetics_primes.divides n m) =>
      matita_arithmetics_ord.divides_to_p_ord p
        (matita_arithmetics_ord.ord n p) (matita_arithmetics_ord.ord_rem n p)
        (matita_arithmetics_ord.ord m p) (matita_arithmetics_ord.ord_rem m p)
        n m H H1 H2 H3
        (matita_basics_types.eq_pair_fst_snd matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord n p))
        (matita_basics_types.eq_pair_fst_snd matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord m p)).

def divides_to_divides_ord_rem :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __2 : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __3 : cic.Term cic.prop (matita_arithmetics_primes.divides n m) ->
      cic.Term cic.prop
        (matita_arithmetics_primes.divides
           (matita_arithmetics_ord.ord_rem n p)
           (matita_arithmetics_ord.ord_rem m p))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      H1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H2 : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      H3 : cic.Term cic.prop (matita_arithmetics_primes.divides n m) =>
      matita_basics_logic.match_And
        (matita_arithmetics_primes.divides
           (matita_arithmetics_ord.ord_rem n p)
           (matita_arithmetics_ord.ord_rem m p))
        (matita_arithmetics_nat.le (matita_arithmetics_ord.ord n p)
           (matita_arithmetics_ord.ord m p))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_arithmetics_primes.divides
                   (matita_arithmetics_ord.ord_rem n p)
                   (matita_arithmetics_ord.ord_rem m p))
                (matita_arithmetics_nat.le (matita_arithmetics_ord.ord n p)
                   (matita_arithmetics_ord.ord m p))) =>
         matita_arithmetics_primes.divides
           (matita_arithmetics_ord.ord_rem n p)
           (matita_arithmetics_ord.ord_rem m p))
        (auto :
           cic.Term cic.prop
             (matita_arithmetics_primes.divides
                (matita_arithmetics_ord.ord_rem n p)
                (matita_arithmetics_ord.ord_rem m p)) =>
         auto' :
           cic.Term cic.prop
             (matita_arithmetics_nat.le (matita_arithmetics_ord.ord n p)
                (matita_arithmetics_ord.ord m p)) =>
         auto)
        (matita_arithmetics_ord.divides_to_ord p n m H H1 H2 H3).

def divides_to_le_ord :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __2 : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __3 : cic.Term cic.prop (matita_arithmetics_primes.divides n m) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.le (matita_arithmetics_ord.ord n p)
           (matita_arithmetics_ord.ord m p))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      H1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H2 : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      H3 : cic.Term cic.prop (matita_arithmetics_primes.divides n m) =>
      matita_basics_logic.match_And
        (matita_arithmetics_primes.divides
           (matita_arithmetics_ord.ord_rem n p)
           (matita_arithmetics_ord.ord_rem m p))
        (matita_arithmetics_nat.le (matita_arithmetics_ord.ord n p)
           (matita_arithmetics_ord.ord m p))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_arithmetics_primes.divides
                   (matita_arithmetics_ord.ord_rem n p)
                   (matita_arithmetics_ord.ord_rem m p))
                (matita_arithmetics_nat.le (matita_arithmetics_ord.ord n p)
                   (matita_arithmetics_ord.ord m p))) =>
         matita_arithmetics_nat.le (matita_arithmetics_ord.ord n p)
           (matita_arithmetics_ord.ord m p))
        (auto :
           cic.Term cic.prop
             (matita_arithmetics_primes.divides
                (matita_arithmetics_ord.ord_rem n p)
                (matita_arithmetics_ord.ord_rem m p)) =>
         auto' :
           cic.Term cic.prop
             (matita_arithmetics_nat.le (matita_arithmetics_ord.ord n p)
                (matita_arithmetics_ord.ord m p)) =>
         auto')
        (matita_arithmetics_ord.divides_to_ord p n m H H1 H2 H3).

def exp_ord :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p))
              (matita_arithmetics_ord.ord_rem n p)))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) =>
      H1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      matita_basics_logic.match_And
        (matita_basics_logic.Not
           (matita_arithmetics_primes.divides p
              (matita_arithmetics_ord.ord_rem n p)))
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p))
              (matita_arithmetics_ord.ord_rem n p)))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_basics_logic.Not
                   (matita_arithmetics_primes.divides p
                      (matita_arithmetics_ord.ord_rem n p)))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   n
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp p
                         (matita_arithmetics_ord.ord n p))
                      (matita_arithmetics_ord.ord_rem n p)))) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p))
              (matita_arithmetics_ord.ord_rem n p)))
        (auto :
           cic.Term cic.prop
             (matita_basics_logic.Not
                (matita_arithmetics_primes.divides p
                   (matita_arithmetics_ord.ord_rem n p))) =>
         auto' :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                n
                (matita_arithmetics_nat.times
                   (matita_arithmetics_exp.exp p
                      (matita_arithmetics_ord.ord n p))
                   (matita_arithmetics_ord.ord_rem n p))) =>
         matita_basics_logic.rewrite_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times (matita_arithmetics_ord.ord_rem n p)
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p)))
           (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            cic.lift cic.prop univs.Type2
              ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                matita_basics_logic.eq
                  (cic.lift univs.Type0 univs.Type2
                     matita_arithmetics_nat.nat)
                  n x)
                 __))
           (matita_basics_logic.rewrite_l
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.lift cic.prop univs.Type2
                 ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                   matita_basics_logic.eq
                     (cic.lift univs.Type0 univs.Type2
                        matita_arithmetics_nat.nat)
                     n x)
                    __))
              (matita_basics_logic.refl
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 n)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_ord.ord_rem n p)
                 (matita_arithmetics_exp.exp p
                    (matita_arithmetics_ord.ord n p)))
              (matita_basics_logic.rewrite_l
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp p
                       (matita_arithmetics_ord.ord n p))
                    (matita_arithmetics_ord.ord_rem n p))
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        n x)
                       __))
                 auto'
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_ord.ord_rem n p)
                    (matita_arithmetics_exp.exp p
                       (matita_arithmetics_ord.ord n p)))
                 (matita_arithmetics_nat.commutative_times
                    (matita_arithmetics_exp.exp p
                       (matita_arithmetics_ord.ord n p))
                    (matita_arithmetics_ord.ord_rem n p))))
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p))
              (matita_arithmetics_ord.ord_rem n p))
           (matita_arithmetics_nat.commutative_times
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p))
              (matita_arithmetics_ord.ord_rem n p)))
        (matita_arithmetics_ord.p_ord_to_exp1 p n
           (matita_arithmetics_ord.ord n p)
           (matita_arithmetics_ord.ord_rem n p) H H1
           (matita_basics_types.eq_pair_fst_snd matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord n p))).

def divides_ord_rem :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      cic.Term cic.prop
        (matita_arithmetics_primes.divides
           (matita_arithmetics_ord.ord_rem n p) n)
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) =>
      H1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      matita_arithmetics_primes.quotient (matita_arithmetics_ord.ord_rem n p)
        n (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p))
        (matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p))
              (matita_arithmetics_ord.ord_rem n p))
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp p
                         (matita_arithmetics_ord.ord n p))
                      (matita_arithmetics_ord.ord_rem n p))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) n
              x)
           (matita_arithmetics_ord.exp_ord p n H H1)
           (matita_arithmetics_nat.times (matita_arithmetics_ord.ord_rem n p)
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p)))
           (matita_arithmetics_nat.commutative_times
              (matita_arithmetics_ord.ord_rem n p)
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord n p)))).

def lt_O_ord_rem :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.lt matita_arithmetics_nat.O
           (matita_arithmetics_ord.ord_rem n p))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) =>
      H1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      matita_basics_logic.match_Or
        (matita_arithmetics_nat.lt matita_arithmetics_nat.O
           (matita_arithmetics_ord.ord_rem n p))
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           matita_arithmetics_nat.O (matita_arithmetics_ord.ord_rem n p))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.Or
                (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                   (matita_arithmetics_ord.ord_rem n p))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   matita_arithmetics_nat.O
                   (matita_arithmetics_ord.ord_rem n p))) =>
         matita_arithmetics_nat.lt matita_arithmetics_nat.O
           (matita_arithmetics_ord.ord_rem n p))
        (auto :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                (matita_arithmetics_ord.ord_rem n p)) =>
         auto)
        (remO :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                matita_arithmetics_nat.O (matita_arithmetics_ord.ord_rem n p)) =>
         matita_basics_logic.eq_ind
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           matita_arithmetics_nat.O
           (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   matita_arithmetics_nat.O x_1) =>
            cic.prod cic.prop cic.prop
              (matita_arithmetics_primes.divides x_1 n)
              (__ :
                 cic.Term cic.prop (matita_arithmetics_primes.divides x_1 n) =>
               matita_arithmetics_nat.lt matita_arithmetics_nat.O x_1))
           (Hdiv0 :
              cic.Term cic.prop
                (matita_arithmetics_primes.divides matita_arithmetics_nat.O n) =>
            matita_basics_logic.False_ind
              (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
               matita_arithmetics_nat.lt matita_arithmetics_nat.O
                 matita_arithmetics_nat.O)
              (matita_basics_logic.absurd
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O n)
                 (matita_arithmetics_primes.match_divides
                    matita_arithmetics_nat.O n cic.prop
                    (__ :
                       cic.Term cic.prop
                         (matita_arithmetics_primes.divides
                            matita_arithmetics_nat.O n) =>
                     matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O n)
                    (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     auto :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            n
                            (matita_arithmetics_nat.times
                               matita_arithmetics_nat.O q)) =>
                     matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       n
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              x n)
                             __))
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          n)
                       matita_arithmetics_nat.O
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times q
                             matita_arithmetics_nat.O)
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 n x)
                                __))
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                matita_arithmetics_nat.O q)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    n x)
                                   __))
                             auto
                             (matita_arithmetics_nat.times q
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.commutative_times
                                matita_arithmetics_nat.O q))
                          matita_arithmetics_nat.O
                          (matita_arithmetics_nat.times_n_O q)))
                    Hdiv0)
                 (matita_arithmetics_nat.lt_to_not_eq
                    matita_arithmetics_nat.O n H1)))
           (matita_arithmetics_ord.ord_rem n p) remO
           (matita_arithmetics_ord.divides_ord_rem p n H H1))
        (matita_arithmetics_nat.le_to_or_lt_eq matita_arithmetics_nat.O
           (matita_arithmetics_ord.ord_rem n p)
           (matita_arithmetics_nat.le_O_n
              (matita_arithmetics_ord.ord_rem n p))).

def ord_times :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) ->
      __2 : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.ord (matita_arithmetics_nat.times m n) p)
           (matita_arithmetics_nat.plus (matita_arithmetics_ord.ord m p)
              (matita_arithmetics_ord.ord n p)))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O n) =>
      H2 : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      matita_basics_logic.eq_f
        (cic.lift univs.Type0 univs.Type2
           (matita_basics_types.Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat))
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_basics_types.fst matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat)
        (matita_arithmetics_ord.p_ord (matita_arithmetics_nat.times m n) p)
        (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat
           (matita_arithmetics_nat.plus (matita_arithmetics_ord.ord m p)
              (matita_arithmetics_ord.ord n p))
           (matita_arithmetics_nat.times (matita_arithmetics_ord.ord_rem m p)
              (matita_arithmetics_ord.ord_rem n p)))
        (matita_arithmetics_ord.p_ord_times p m n
           (matita_arithmetics_ord.ord m p)
           (matita_arithmetics_ord.ord_rem m p)
           (matita_arithmetics_ord.ord n p)
           (matita_arithmetics_ord.ord_rem n p) H2 H H1
           (matita_basics_types.eq_pair_fst_snd matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord m p))
           (matita_basics_types.eq_pair_fst_snd matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord n p))).

def ord_exp :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.ord (matita_arithmetics_exp.exp p m) p) m)
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_basics_types.fst matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat
           (matita_arithmetics_ord.p_ord (matita_arithmetics_exp.exp p m) p))
        (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x
                (matita_basics_types.fst matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_ord.p_ord
                      (matita_arithmetics_exp.exp p m) p))) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) x m)
        (matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat m
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (x :
              cic.Term univs.Type0
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat) =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   x
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat m
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat x)
              m)
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m)
           (matita_arithmetics_ord.p_ord (matita_arithmetics_exp.exp p m) p)
           (matita_arithmetics_ord.p_ord_exp1 p
              (matita_arithmetics_exp.exp p m) m
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              (matita_arithmetics_nat.lt_to_le
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) p H)
              (matita_basics_logic.not_to_not
                 (matita_arithmetics_primes.divides p
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.le p
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_primes.divides_to_le p
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.lt_O_S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.lt_to_not_le
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O) p H))
              (matita_basics_logic.rewrite_l
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_exp.exp p m)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp p m)
                       matita_arithmetics_nat.O))
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        (matita_arithmetics_exp.exp p m) x)
                       __))
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times matita_arithmetics_nat.O
                       (matita_arithmetics_exp.exp p m))
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           (matita_arithmetics_exp.exp p m)
                           (matita_arithmetics_nat.plus
                              (matita_arithmetics_exp.exp p m) x))
                          __))
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              (matita_arithmetics_exp.exp p m)
                              (matita_arithmetics_nat.plus
                                 (matita_arithmetics_exp.exp p m) x))
                             __))
                       (matita_basics_logic.rewrite_r
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             matita_arithmetics_nat.O
                             (matita_arithmetics_exp.exp p m))
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 (matita_arithmetics_exp.exp p m) x)
                                __))
                          (matita_basics_logic.rewrite_l
                             (cic.lift univs.Type0 univs.Type2
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_exp.exp p m)
                             (__ :
                                cic.Term univs.Type0
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop univs.Type2
                                ((x :
                                    cic.Term univs.Type0
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_logic.eq
                                    (cic.lift univs.Type0 univs.Type2
                                       matita_arithmetics_nat.nat)
                                    (matita_arithmetics_exp.exp p m) x)
                                   __))
                             (matita_basics_logic.refl
                                (cic.lift univs.Type0 univs.Type2
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_exp.exp p m))
                             (matita_arithmetics_nat.plus
                                matita_arithmetics_nat.O
                                (matita_arithmetics_exp.exp p m))
                             (matita_arithmetics_nat.plus_O_n
                                (matita_arithmetics_exp.exp p m)))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_exp.exp p m)
                             matita_arithmetics_nat.O)
                          (matita_arithmetics_nat.commutative_plus
                             (matita_arithmetics_exp.exp p m)
                             matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.times matita_arithmetics_nat.O
                          (matita_arithmetics_exp.exp p m))
                       (matita_arithmetics_nat.times_O_n
                          (matita_arithmetics_exp.exp p m)))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp p m)
                       matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.commutative_times
                       (matita_arithmetics_exp.exp p m)
                       matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp p m)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times_n_Sm
                    (matita_arithmetics_exp.exp p m) matita_arithmetics_nat.O))))
        (matita_arithmetics_ord.ord (matita_arithmetics_exp.exp p m) p)
        (matita_arithmetics_ord.ord_eq (matita_arithmetics_exp.exp p m) p).

def not_divides_to_ord_O :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __1 :
        cic.Term cic.prop
          (matita_basics_logic.Not (matita_arithmetics_primes.divides p m)) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.ord m p) matita_arithmetics_nat.O)
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      H1 :
        cic.Term cic.prop
          (matita_basics_logic.Not (matita_arithmetics_primes.divides p m)) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_basics_types.fst matita_arithmetics_nat.nat
           matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord m p))
        (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x
                (matita_basics_types.fst matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat
                   (matita_arithmetics_ord.p_ord m p))) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) x
           matita_arithmetics_nat.O)
        (matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2
              (matita_basics_types.Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat))
           (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat matita_arithmetics_nat.O m)
           (x :
              cic.Term univs.Type0
                (matita_basics_types.Prod matita_arithmetics_nat.nat
                   matita_arithmetics_nat.nat) =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      (matita_basics_types.Prod matita_arithmetics_nat.nat
                         matita_arithmetics_nat.nat))
                   x
                   (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat matita_arithmetics_nat.O m)) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat x)
              matita_arithmetics_nat.O)
           (matita_basics_logic.refl
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O)
           (matita_arithmetics_ord.p_ord m p)
           (matita_arithmetics_ord.p_ord_exp1 p m matita_arithmetics_nat.O m
              (matita_arithmetics_primes.prime_to_lt_O p H) H1
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp p matita_arithmetics_nat.O) m)
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        x
                        (matita_arithmetics_nat.times
                           (matita_arithmetics_exp.exp p
                              matita_arithmetics_nat.O)
                           m))
                       __))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp p matita_arithmetics_nat.O)
                       m))
                 m
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus m matita_arithmetics_nat.O)
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           x
                           (matita_arithmetics_nat.times
                              (matita_arithmetics_exp.exp p
                                 matita_arithmetics_nat.O)
                              m))
                          __))
                    (matita_basics_logic.rewrite_r
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times matita_arithmetics_nat.O
                          m)
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift univs.Type0 univs.Type2
                                 matita_arithmetics_nat.nat)
                              (matita_arithmetics_nat.plus m x)
                              (matita_arithmetics_nat.times
                                 (matita_arithmetics_exp.exp p
                                    matita_arithmetics_nat.O)
                                 m))
                             __))
                       (matita_basics_logic.rewrite_l
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          (__ :
                             cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                           cic.lift cic.prop univs.Type2
                             ((x :
                                 cic.Term univs.Type0
                                   matita_arithmetics_nat.nat =>
                               matita_basics_logic.eq
                                 (cic.lift univs.Type0 univs.Type2
                                    matita_arithmetics_nat.nat)
                                 (matita_arithmetics_nat.plus m
                                    (matita_arithmetics_nat.times
                                       matita_arithmetics_nat.O m))
                                 (matita_arithmetics_nat.times x m))
                                __))
                          (matita_arithmetics_nat.times_Sn_m
                             matita_arithmetics_nat.O m)
                          (matita_arithmetics_exp.exp p
                             matita_arithmetics_nat.O)
                          (matita_arithmetics_exp.exp_n_O p))
                       matita_arithmetics_nat.O
                       (matita_arithmetics_nat.times_O_n m))
                    m (matita_arithmetics_nat.plus_n_O m)))))
        (matita_arithmetics_ord.ord m p) (matita_arithmetics_ord.ord_eq m p).

def ord_O_to_not_divides :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __1 : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __2 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_ord.ord m p) matita_arithmetics_nat.O) ->
      cic.Term cic.prop
        (matita_basics_logic.Not (matita_arithmetics_primes.divides p m))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H1 : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      H2 :
        cic.Term cic.prop
          (matita_basics_logic.eq
             (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
             (matita_arithmetics_ord.ord m p) matita_arithmetics_nat.O) =>
      matita_basics_logic.match_And
        (matita_basics_logic.Not
           (matita_arithmetics_primes.divides p
              (matita_arithmetics_ord.ord_rem m p)))
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord m p))
              (matita_arithmetics_ord.ord_rem m p)))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_basics_logic.Not
                   (matita_arithmetics_primes.divides p
                      (matita_arithmetics_ord.ord_rem m p)))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   m
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp p
                         (matita_arithmetics_ord.ord m p))
                      (matita_arithmetics_ord.ord_rem m p)))) =>
         matita_basics_logic.Not (matita_arithmetics_primes.divides p m))
        (H3 :
           cic.Term cic.prop
             (matita_basics_logic.Not
                (matita_arithmetics_primes.divides p
                   (matita_arithmetics_ord.ord_rem m p))) =>
         matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           matita_arithmetics_nat.O
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   x matita_arithmetics_nat.O) =>
            cic.prod cic.prop cic.prop
              (matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 m
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp p x)
                    (matita_arithmetics_ord.ord_rem m p)))
              (__1 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      m
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_exp.exp p x)
                         (matita_arithmetics_ord.ord_rem m p))) =>
               matita_basics_logic.Not
                 (matita_arithmetics_primes.divides p m)))
           (matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_ord.ord_rem m p)
                 (matita_arithmetics_exp.exp p matita_arithmetics_nat.O))
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_ord.ord_rem m p)
                         (matita_arithmetics_exp.exp p
                            matita_arithmetics_nat.O))) =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    m x)
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         m x) =>
                  matita_basics_logic.Not
                    (matita_arithmetics_primes.divides p m)))
              (matita_basics_logic.eq_ind
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_ord.ord_rem m p)
                 (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_ord.ord_rem m p) x_1) =>
                  cic.prod cic.prop cic.prop
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m x_1)
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            m x_1) =>
                     matita_basics_logic.Not
                       (matita_arithmetics_primes.divides p m)))
                 (auto :
                    cic.Term cic.prop
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         m (matita_arithmetics_ord.ord_rem m p)) =>
                  matita_basics_logic.eq_coerc
                    (cic.lift cic.prop univs.Type0
                       (matita_basics_logic.Not
                          (matita_arithmetics_primes.divides p
                             (matita_arithmetics_ord.ord_rem m p))))
                    (cic.lift cic.prop univs.Type0
                       (matita_basics_logic.Not
                          (matita_arithmetics_primes.divides p m)))
                    H3
                    (matita_basics_logic.rewrite_l
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       m
                       (__ :
                          cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                        cic.lift cic.prop univs.Type2
                          ((x :
                              cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                            matita_basics_logic.eq
                              (cic.lift (cic.succ univs.Type0) univs.Type2
                                 (cic.univ univs.Type0))
                              (cic.lift cic.prop univs.Type0
                                 (matita_basics_logic.Not
                                    (matita_arithmetics_primes.divides p x)))
                              (cic.lift cic.prop univs.Type0
                                 (matita_basics_logic.Not
                                    (matita_arithmetics_primes.divides p m))))
                             __))
                       (matita_basics_logic.refl
                          (cic.lift (cic.succ univs.Type0) univs.Type2
                             (cic.univ univs.Type0))
                          (cic.lift cic.prop univs.Type0
                             (matita_basics_logic.Not
                                (matita_arithmetics_primes.divides p m))))
                       (matita_arithmetics_ord.ord_rem m p) auto))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_ord.ord_rem m p)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times_n_1
                    (matita_arithmetics_ord.ord_rem m p)))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_exp.exp p matita_arithmetics_nat.O)
                 (matita_arithmetics_ord.ord_rem m p))
              (matita_arithmetics_nat.commutative_times
                 (matita_arithmetics_exp.exp p matita_arithmetics_nat.O)
                 (matita_arithmetics_ord.ord_rem m p)))
           (matita_arithmetics_ord.ord m p) H2)
        (matita_arithmetics_ord.p_ord_to_exp1 p m
           (matita_arithmetics_ord.ord m p)
           (matita_arithmetics_ord.ord_rem m p)
           (matita_arithmetics_primes.prime_to_lt_SO p H1) H
           (matita_basics_types.eq_pair_fst_snd matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord m p))).

def divides_to_not_ord_O :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __1 : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __2 : cic.Term cic.prop (matita_arithmetics_primes.divides p m) ->
      cic.Term cic.prop
        (matita_basics_logic.Not
           (matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_ord.ord m p) matita_arithmetics_nat.O))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H1 : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      H2 : cic.Term cic.prop (matita_arithmetics_primes.divides p m) =>
      matita_basics_logic.nmk
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.ord m p) matita_arithmetics_nat.O)
        (H3 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_ord.ord m p) matita_arithmetics_nat.O) =>
         matita_basics_logic.absurd (matita_arithmetics_primes.divides p m)
           H2 (matita_arithmetics_ord.ord_O_to_not_divides p m H H1 H3)).

def not_ord_O_to_divides :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __1 : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __2 :
        cic.Term cic.prop
          (matita_basics_logic.Not
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_ord.ord m p) matita_arithmetics_nat.O)) ->
      cic.Term cic.prop (matita_arithmetics_primes.divides p m) :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H1 : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      H2 :
        cic.Term cic.prop
          (matita_basics_logic.Not
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_ord.ord m p) matita_arithmetics_nat.O)) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times
           (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord m p))
           (matita_arithmetics_ord.ord_rem m p))
        (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_nat.times
                   (matita_arithmetics_exp.exp p
                      (matita_arithmetics_ord.ord m p))
                   (matita_arithmetics_ord.ord_rem m p))) =>
         matita_arithmetics_primes.divides p x)
        (matita_arithmetics_primes.transitive_divides p
           (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord m p))
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord m p))
              (matita_arithmetics_ord.ord_rem m p))
           (matita_arithmetics_nat.match_nat cic.prop
              (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_basics_logic.Not
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       __ matita_arithmetics_nat.O))
                 (__1 :
                    cic.Term cic.prop
                      (matita_basics_logic.Not
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            __ matita_arithmetics_nat.O)) =>
                  matita_arithmetics_primes.divides p
                    (matita_arithmetics_exp.exp p __)))
              (_clearme :
                 cic.Term cic.prop
                   (matita_basics_logic.Not
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         matita_arithmetics_nat.O matita_arithmetics_nat.O)) =>
               matita_basics_logic.match_Not
                 (matita_basics_logic.eq
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O matita_arithmetics_nat.O)
                 cic.prop
                 (__ :
                    cic.Term cic.prop
                      (matita_basics_logic.Not
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            matita_arithmetics_nat.O matita_arithmetics_nat.O)) =>
                  matita_arithmetics_primes.divides p
                    (matita_arithmetics_exp.exp p matita_arithmetics_nat.O))
                 (H3 :
                    (__ :
                       cic.Term cic.prop
                         (matita_basics_logic.eq
                            (cic.lift univs.Type0 univs.Type2
                               matita_arithmetics_nat.nat)
                            matita_arithmetics_nat.O matita_arithmetics_nat.O) ->
                     cic.Term cic.prop matita_basics_logic.False) =>
                  matita_basics_logic.False_ind
                    (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                     matita_arithmetics_primes.divides p
                       (matita_arithmetics_exp.exp p matita_arithmetics_nat.O))
                    (H3
                       (matita_basics_logic.refl
                          (cic.lift univs.Type0 univs.Type2
                             matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.O)))
                 _clearme)
              (a : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.Not
                      (matita_basics_logic.eq
                         (cic.lift univs.Type0 univs.Type2
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S a)
                         matita_arithmetics_nat.O)) =>
               matita_arithmetics_primes.quotient p
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp p a) p)
                 (matita_arithmetics_exp.exp p a)
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times p
                       (matita_arithmetics_exp.exp p a))
                    (__1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           x
                           (matita_arithmetics_nat.times p
                              (matita_arithmetics_exp.exp p a)))
                          __1))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times p
                          (matita_arithmetics_exp.exp p a)))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp p a) p)
                    (matita_arithmetics_nat.commutative_times
                       (matita_arithmetics_exp.exp p a) p)))
              (matita_arithmetics_ord.ord m p) H2)
           (matita_arithmetics_primes.quotient
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord m p))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_exp.exp p
                    (matita_arithmetics_ord.ord m p))
                 (matita_arithmetics_ord.ord_rem m p))
              (matita_arithmetics_ord.ord_rem m p)
              (matita_basics_logic.rewrite_r
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_ord.ord_rem m p)
                    (matita_arithmetics_exp.exp p
                       (matita_arithmetics_ord.ord m p)))
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        x
                        (matita_arithmetics_nat.times
                           (matita_arithmetics_exp.exp p
                              (matita_arithmetics_ord.ord m p))
                           (matita_arithmetics_ord.ord_rem m p)))
                       __))
                 (matita_basics_logic.rewrite_r
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_ord.ord_rem m p)
                       (matita_arithmetics_exp.exp p
                          (matita_arithmetics_ord.ord m p)))
                    (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                     cic.lift cic.prop univs.Type2
                       ((x :
                           cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                         matita_basics_logic.eq
                           (cic.lift univs.Type0 univs.Type2
                              matita_arithmetics_nat.nat)
                           (matita_arithmetics_nat.times
                              (matita_arithmetics_ord.ord_rem m p)
                              (matita_arithmetics_exp.exp p
                                 (matita_arithmetics_ord.ord m p)))
                           x)
                          __))
                    (matita_basics_logic.refl
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_ord.ord_rem m p)
                          (matita_arithmetics_exp.exp p
                             (matita_arithmetics_ord.ord m p))))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp p
                          (matita_arithmetics_ord.ord m p))
                       (matita_arithmetics_ord.ord_rem m p))
                    (matita_arithmetics_nat.commutative_times
                       (matita_arithmetics_exp.exp p
                          (matita_arithmetics_ord.ord m p))
                       (matita_arithmetics_ord.ord_rem m p)))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp p
                       (matita_arithmetics_ord.ord m p))
                    (matita_arithmetics_ord.ord_rem m p))
                 (matita_arithmetics_nat.commutative_times
                    (matita_arithmetics_exp.exp p
                       (matita_arithmetics_ord.ord m p))
                    (matita_arithmetics_ord.ord_rem m p)))))
        m
        (matita_arithmetics_ord.exp_ord p m
           (matita_arithmetics_primes.prime_to_lt_SO p H1) H).

def not_divides_ord_rem :
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) ->
      cic.Term cic.prop
        (matita_basics_logic.Not
           (matita_arithmetics_primes.divides p
              (matita_arithmetics_ord.ord_rem m p)))
      :=
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) p) =>
      matita_basics_logic.match_And
        (matita_basics_logic.Not
           (matita_arithmetics_primes.divides p
              (matita_arithmetics_ord.ord_rem m p)))
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat) m
           (matita_arithmetics_nat.times
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord m p))
              (matita_arithmetics_ord.ord_rem m p)))
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.And
                (matita_basics_logic.Not
                   (matita_arithmetics_primes.divides p
                      (matita_arithmetics_ord.ord_rem m p)))
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   m
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_exp.exp p
                         (matita_arithmetics_ord.ord m p))
                      (matita_arithmetics_ord.ord_rem m p)))) =>
         matita_basics_logic.Not
           (matita_arithmetics_primes.divides p
              (matita_arithmetics_ord.ord_rem m p)))
        (H2 :
           cic.Term cic.prop
             (matita_basics_logic.Not
                (matita_arithmetics_primes.divides p
                   (matita_arithmetics_ord.ord_rem m p))) =>
         H3 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                m
                (matita_arithmetics_nat.times
                   (matita_arithmetics_exp.exp p
                      (matita_arithmetics_ord.ord m p))
                   (matita_arithmetics_ord.ord_rem m p))) =>
         H2)
        (matita_arithmetics_ord.p_ord_to_exp1 p m
           (matita_arithmetics_ord.ord m p)
           (matita_arithmetics_ord.ord_rem m p) H1 H
           (matita_basics_types.eq_pair_fst_snd matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat (matita_arithmetics_ord.p_ord m p))).

def ord_ord_rem :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __1 : cic.Term cic.prop (matita_arithmetics_primes.prime p) ->
      __2 : cic.Term cic.prop (matita_arithmetics_primes.prime q) ->
      __3 : cic.Term cic.prop (matita_arithmetics_nat.lt q p) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.ord (matita_arithmetics_ord.ord_rem m p) q)
           (matita_arithmetics_ord.ord m q))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H1 : cic.Term cic.prop (matita_arithmetics_primes.prime p) =>
      H2 : cic.Term cic.prop (matita_arithmetics_primes.prime q) =>
      H3 : cic.Term cic.prop (matita_arithmetics_nat.lt q p) =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times
           (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord m p))
           (matita_arithmetics_ord.ord_rem m p))
        (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_nat.times
                   (matita_arithmetics_exp.exp p
                      (matita_arithmetics_ord.ord m p))
                   (matita_arithmetics_ord.ord_rem m p))) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.ord (matita_arithmetics_ord.ord_rem m p) q)
           (matita_arithmetics_ord.ord x q))
        (matita_basics_logic.eq_ind_r
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.plus
              (matita_arithmetics_ord.ord
                 (matita_arithmetics_exp.exp p
                    (matita_arithmetics_ord.ord m p))
                 q)
              (matita_arithmetics_ord.ord
                 (matita_arithmetics_ord.ord_rem m p) q))
           (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_ord.ord
                         (matita_arithmetics_exp.exp p
                            (matita_arithmetics_ord.ord m p))
                         q)
                      (matita_arithmetics_ord.ord
                         (matita_arithmetics_ord.ord_rem m p) q))) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_ord.ord
                 (matita_arithmetics_ord.ord_rem m p) q)
              x)
           (matita_basics_logic.eq_ind_r
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O
              (x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      x matita_arithmetics_nat.O) =>
               matita_basics_logic.eq
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_ord.ord
                    (matita_arithmetics_ord.ord_rem m p) q)
                 (matita_arithmetics_nat.plus x
                    (matita_arithmetics_ord.ord
                       (matita_arithmetics_ord.ord_rem m p) q)))
              (matita_basics_logic.rewrite_l
                 (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                 (matita_arithmetics_ord.ord
                    (matita_arithmetics_ord.ord_rem m p) q)
                 (__ : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                  cic.lift cic.prop univs.Type2
                    ((x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
                      matita_basics_logic.eq
                        (cic.lift univs.Type0 univs.Type2
                           matita_arithmetics_nat.nat)
                        (matita_arithmetics_ord.ord
                           (matita_arithmetics_ord.ord_rem m p) q)
                        x)
                       __))
                 (matita_basics_logic.refl
                    (cic.lift univs.Type0 univs.Type2
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_ord.ord
                       (matita_arithmetics_ord.ord_rem m p) q))
                 (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                    (matita_arithmetics_ord.ord
                       (matita_arithmetics_ord.ord_rem m p) q))
                 (matita_arithmetics_nat.plus_O_n
                    (matita_arithmetics_ord.ord
                       (matita_arithmetics_ord.ord_rem m p) q)))
              (matita_arithmetics_ord.ord
                 (matita_arithmetics_exp.exp p
                    (matita_arithmetics_ord.ord m p))
                 q)
              (matita_arithmetics_ord.not_divides_to_ord_O q
                 (matita_arithmetics_exp.exp p
                    (matita_arithmetics_ord.ord m p))
                 H2
                 (matita_basics_logic.not_to_not
                    (matita_arithmetics_primes.divides q
                       (matita_arithmetics_exp.exp p
                          (matita_arithmetics_ord.ord m p)))
                    (matita_basics_logic.eq
                       (cic.lift univs.Type0 univs.Type2
                          matita_arithmetics_nat.nat)
                       q p)
                    (matita_arithmetics_gcd.divides_exp_to_eq q p
                       (matita_arithmetics_ord.ord m p) H2 H1)
                    (matita_arithmetics_nat.lt_to_not_eq q p H3))))
           (matita_arithmetics_ord.ord
              (matita_arithmetics_nat.times
                 (matita_arithmetics_exp.exp p
                    (matita_arithmetics_ord.ord m p))
                 (matita_arithmetics_ord.ord_rem m p))
              q)
           (matita_arithmetics_ord.ord_times q
              (matita_arithmetics_exp.exp p (matita_arithmetics_ord.ord m p))
              (matita_arithmetics_ord.ord_rem m p)
              (matita_arithmetics_exp.lt_O_exp p
                 (matita_arithmetics_ord.ord m p)
                 (matita_arithmetics_primes.prime_to_lt_O p H1))
              (matita_arithmetics_ord.lt_O_ord_rem p m
                 (matita_arithmetics_primes.prime_to_lt_SO p H1) H)
              H2))
        m
        (matita_arithmetics_ord.exp_ord p m
           (matita_arithmetics_primes.prime_to_lt_SO p H1) H).

def lt_ord_rem :
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ : cic.Term cic.prop (matita_arithmetics_primes.prime n) ->
      __1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) ->
      __2 : cic.Term cic.prop (matita_arithmetics_primes.divides n m) ->
      cic.Term cic.prop
        (matita_arithmetics_nat.lt (matita_arithmetics_ord.ord_rem m n) m)
      :=
      n : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      H : cic.Term cic.prop (matita_arithmetics_primes.prime n) =>
      H1 :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt matita_arithmetics_nat.O m) =>
      H2 : cic.Term cic.prop (matita_arithmetics_primes.divides n m) =>
      matita_basics_logic.match_Or
        (matita_arithmetics_nat.lt (matita_arithmetics_ord.ord_rem m n) m)
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.ord_rem m n) m)
        cic.prop
        (__ :
           cic.Term cic.prop
             (matita_basics_logic.Or
                (matita_arithmetics_nat.lt
                   (matita_arithmetics_ord.ord_rem m n) m)
                (matita_basics_logic.eq
                   (cic.lift univs.Type0 univs.Type2
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_ord.ord_rem m n) m)) =>
         matita_arithmetics_nat.lt (matita_arithmetics_ord.ord_rem m n) m)
        (auto :
           cic.Term cic.prop
             (matita_arithmetics_nat.lt (matita_arithmetics_ord.ord_rem m n)
                m) =>
         auto)
        (Hm :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                (matita_arithmetics_ord.ord_rem m n) m) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            matita_arithmetics_nat.lt (matita_arithmetics_ord.ord_rem m n) m)
           (matita_basics_logic.eq_ind
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_ord.ord_rem m n)
              (x_1 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               _x_2 :
                 cic.Term cic.prop
                   (matita_basics_logic.eq
                      (cic.lift univs.Type0 univs.Type2
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_ord.ord_rem m n) x_1) =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_primes.divides n x_1)
                 (__ :
                    cic.Term cic.prop
                      (matita_arithmetics_primes.divides n x_1) =>
                  matita_basics_logic.False))
              (Habs :
                 cic.Term cic.prop
                   (matita_arithmetics_primes.divides n
                      (matita_arithmetics_ord.ord_rem m n)) =>
               matita_basics_logic.absurd
                 (matita_arithmetics_primes.divides n
                    (matita_arithmetics_ord.ord_rem m n))
                 Habs
                 (matita_arithmetics_ord.not_divides_ord_rem m n H1
                    (matita_arithmetics_primes.prime_to_lt_SO n H)))
              m Hm H2))
        (matita_arithmetics_nat.le_to_or_lt_eq
           (matita_arithmetics_ord.ord_rem m n) m
           (matita_arithmetics_primes.divides_to_le
              (matita_arithmetics_ord.ord_rem m n) m H1
              (matita_arithmetics_ord.divides_ord_rem n m
                 (matita_arithmetics_primes.prime_to_lt_SO n H) H1))).

def p_ord_inv :
      _p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      _x : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term univs.Type0 matita_arithmetics_nat.nat :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_types.match_Prod matita_arithmetics_nat.nat
        matita_arithmetics_nat.nat univs.Type0
        (__ :
           cic.Term univs.Type0
             (matita_basics_types.Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat) =>
         matita_arithmetics_nat.nat)
        (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.plus (matita_arithmetics_nat.times r m) q)
        (matita_arithmetics_ord.p_ord x p).

def eq_p_ord_inv :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_ord.p_ord_inv p m x)
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times
                 (matita_arithmetics_ord.ord_rem x p) m)
              (matita_arithmetics_ord.ord x p)))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_types.match_Prod matita_arithmetics_nat.nat
        matita_arithmetics_nat.nat cic.prop
        (__ :
           cic.Term univs.Type0
             (matita_basics_types.Prod matita_arithmetics_nat.nat
                matita_arithmetics_nat.nat) =>
         matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_basics_types.match_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat univs.Type0
              (_0 :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               matita_arithmetics_nat.nat)
              (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.plus (matita_arithmetics_nat.times r m)
                 q)
              __)
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times
                 (matita_basics_types.snd matita_arithmetics_nat.nat
                    matita_arithmetics_nat.nat __)
                 m)
              (matita_basics_types.fst matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat __)))
        (_fst : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         _snd : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         matita_basics_logic.refl
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_basics_types.match_Prod matita_arithmetics_nat.nat
              matita_arithmetics_nat.nat univs.Type0
              (__ :
                 cic.Term univs.Type0
                   (matita_basics_types.Prod matita_arithmetics_nat.nat
                      matita_arithmetics_nat.nat) =>
               matita_arithmetics_nat.nat)
              (q : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               r : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.plus (matita_arithmetics_nat.times r m)
                 q)
              (matita_basics_types.mk_Prod matita_arithmetics_nat.nat
                 matita_arithmetics_nat.nat _fst _snd)))
        (matita_arithmetics_ord.p_ord_aux x x p).

def div_p_ord_inv :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt (matita_arithmetics_ord.ord x p) m) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_ord.p_ord_inv p m x) m)
           (matita_arithmetics_ord.ord_rem x p))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.plus
           (matita_arithmetics_nat.times (matita_arithmetics_ord.ord_rem x p)
              m)
           (matita_arithmetics_ord.ord x p))
        (x0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x0
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_ord.ord_rem x p) m)
                   (matita_arithmetics_ord.ord x p))) =>
         cic.prod cic.prop cic.prop
           (matita_arithmetics_nat.lt (matita_arithmetics_ord.ord x p) m)
           (__1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt (matita_arithmetics_ord.ord x p) m) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.div x0 m)
              (matita_arithmetics_ord.ord_rem x p)))
        (matita_arithmetics_div_and_mod.div_plus_times m
           (matita_arithmetics_ord.ord_rem x p)
           (matita_arithmetics_ord.ord x p))
        (matita_arithmetics_ord.p_ord_inv p m x)
        (matita_arithmetics_ord.eq_p_ord_inv p m x).

def mod_p_ord_inv :
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      x : cic.Term univs.Type0 matita_arithmetics_nat.nat ->
      __ :
        cic.Term cic.prop
          (matita_arithmetics_nat.lt (matita_arithmetics_ord.ord x p) m) ->
      cic.Term cic.prop
        (matita_basics_logic.eq
           (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
           (matita_arithmetics_div_and_mod.mod
              (matita_arithmetics_ord.p_ord_inv p m x) m)
           (matita_arithmetics_ord.ord x p))
      :=
      p : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      m : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      x : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
      matita_basics_logic.eq_ind_r
        (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.plus
           (matita_arithmetics_nat.times (matita_arithmetics_ord.ord_rem x p)
              m)
           (matita_arithmetics_ord.ord x p))
        (x0 : cic.Term univs.Type0 matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
                x0
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_ord.ord_rem x p) m)
                   (matita_arithmetics_ord.ord x p))) =>
         cic.prod cic.prop cic.prop
           (matita_arithmetics_nat.lt (matita_arithmetics_ord.ord x p) m)
           (__1 :
              cic.Term cic.prop
                (matita_arithmetics_nat.lt (matita_arithmetics_ord.ord x p) m) =>
            matita_basics_logic.eq
              (cic.lift univs.Type0 univs.Type2 matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.mod x0 m)
              (matita_arithmetics_ord.ord x p)))
        (matita_arithmetics_div_and_mod.mod_plus_times m
           (matita_arithmetics_ord.ord_rem x p)
           (matita_arithmetics_ord.ord x p))
        (matita_arithmetics_ord.p_ord_inv p m x)
        (matita_arithmetics_ord.eq_p_ord_inv p m x).


