#NAME rec_4_args_2_calls_first_dec.

def Toto__intle :
  a:(cc.eT basics.int__t) -> b:(cc.eT basics.int__t) -> cc.eT basics.bool__t
  :=
  a:(cc.eT basics.int__t) =>
  b:(cc.eT basics.int__t) =>
  basics._amper__amper_ (basics._gt__equal_ b (dk_int.from_nat builtins.0)) 
    (basics._lt_ a b).

def Toto__obl1 :
  dk_logic.eP 
    (dk_logic.forall basics.int__t 
       (i:(cc.eT basics.int__t) =>
        dk_logic.imp 
          (dk_logic.ebP 
             (basics._amper__amper_ 
                (basics._tilda__tilda_ 
                   (basics._equal_ basics.int__t i 
                      (dk_int.from_nat builtins.0))) 
                (basics._equal_ basics.int__t i 
                   (dk_int.from_nat (builtins.S builtins.0))))) 
          (dk_logic.ebP 
             (basics._lt_ 
                (basics._dash_ i (dk_int.from_nat (builtins.S builtins.0))) i))))
  :=
  dk_builtins.magic_prove 
    (dk_logic.forall basics.int__t 
       (i:(cc.eT basics.int__t) =>
        dk_logic.imp 
          (dk_logic.ebP 
             (basics._amper__amper_ 
                (basics._tilda__tilda_ 
                   (basics._equal_ basics.int__t i 
                      (dk_int.from_nat builtins.0))) 
                (basics._equal_ basics.int__t i 
                   (dk_int.from_nat (builtins.S builtins.0))))) 
          (dk_logic.ebP 
             (basics._lt_ 
                (basics._dash_ i (dk_int.from_nat (builtins.S builtins.0))) i)))).

def Toto__obl2 :
  dk_logic.eP 
    (dk_logic.forall basics.int__t 
       (i:(cc.eT basics.int__t) =>
        dk_logic.imp 
          (dk_logic.ebP 
             (basics._amper__amper_ 
                (basics._tilda__tilda_ 
                   (basics._equal_ basics.int__t i 
                      (dk_int.from_nat builtins.0))) 
                (basics._tilda__tilda_ 
                   (basics._equal_ basics.int__t i 
                      (dk_int.from_nat (builtins.S builtins.0)))))) 
          (dk_logic.ebP 
             (basics._lt_ 
                (basics._dash_ i 
                   (dk_int.from_nat (builtins.S (builtins.S builtins.0)))) i))))
  :=
  dk_builtins.magic_prove 
    (dk_logic.forall basics.int__t 
       (i:(cc.eT basics.int__t) =>
        dk_logic.imp 
          (dk_logic.ebP 
             (basics._amper__amper_ 
                (basics._tilda__tilda_ 
                   (basics._equal_ basics.int__t i 
                      (dk_int.from_nat builtins.0))) 
                (basics._tilda__tilda_ 
                   (basics._equal_ basics.int__t i 
                      (dk_int.from_nat (builtins.S builtins.0)))))) 
          (dk_logic.ebP 
             (basics._lt_ 
                (basics._dash_ i 
                   (dk_int.from_nat (builtins.S (builtins.S builtins.0)))) i)))).

def Toto__f :
  abst_obl1:(dk_logic.eP 
               (dk_logic.forall basics.int__t 
                  (i:(cc.eT basics.int__t) =>
                   dk_logic.imp 
                     (dk_logic.ebP 
                        (basics._amper__amper_ 
                           (basics._tilda__tilda_ 
                              (basics._equal_ basics.int__t i 
                                 (dk_int.from_nat builtins.0))) 
                           (basics._equal_ basics.int__t i 
                              (dk_int.from_nat (builtins.S builtins.0))))) 
                     (dk_logic.ebP 
                        (basics._lt_ 
                           (basics._dash_ i 
                              (dk_int.from_nat (builtins.S builtins.0))) i))))) ->
  abst_obl2:(dk_logic.eP 
               (dk_logic.forall basics.int__t 
                  (i:(cc.eT basics.int__t) =>
                   dk_logic.imp 
                     (dk_logic.ebP 
                        (basics._amper__amper_ 
                           (basics._tilda__tilda_ 
                              (basics._equal_ basics.int__t i 
                                 (dk_int.from_nat builtins.0))) 
                           (basics._tilda__tilda_ 
                              (basics._equal_ basics.int__t i 
                                 (dk_int.from_nat (builtins.S builtins.0)))))) 
                     (dk_logic.ebP 
                        (basics._lt_ 
                           (basics._dash_ i 
                              (dk_int.from_nat 
                                 (builtins.S (builtins.S builtins.0)))) i))))) ->
  (cc.eT basics.int__t) ->
  (cc.eT basics.bool__t) ->
  (cc.eT basics.int__t) -> (cc.eT basics.int__t) -> cc.eT basics.int__t.

[u, t, y, x, abst_obl2, abst_obl1]
  Toto__f abst_obl1 abst_obl2 x y t u
  -->
  dk_bool.ite basics.int__t 
    (basics._equal_ basics.int__t x (dk_int.from_nat builtins.0)) 
    (dk_int.from_nat 
       (builtins.S 
          (builtins.S 
             (builtins.S 
                (builtins.S 
                   (builtins.S 
                      (builtins.S 
                         (builtins.S 
                            (builtins.S 
                               (builtins.S 
                                  (builtins.S 
                                     (builtins.S 
                                        (builtins.S 
                                           (builtins.S 
                                              (builtins.S 
                                                 (builtins.S 
                                                    (builtins.S 
                                                       (builtins.S 
                                                          (builtins.S 
                                                             (builtins.S 
                                                                (builtins.S 
                                                                   (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    (builtins.S 
                                                                    builtins.0))))))))))))))))))))))))))))))))))))))))))) 
    (dk_bool.ite basics.int__t 
       (basics._equal_ basics.int__t x 
          (dk_int.from_nat (builtins.S builtins.0))) 
       ((abst_obl1:
         (dk_logic.eP 
            (dk_logic.forall basics.int__t 
               (i:(cc.eT basics.int__t) =>
                dk_logic.imp 
                  (dk_logic.ebP 
                     (basics._amper__amper_ 
                        (basics._tilda__tilda_ 
                           (basics._equal_ basics.int__t i 
                              (dk_int.from_nat builtins.0))) 
                        (basics._equal_ basics.int__t i 
                           (dk_int.from_nat (builtins.S builtins.0))))) 
                  (dk_logic.ebP 
                     (basics._lt_ 
                        (basics._dash_ i 
                           (dk_int.from_nat (builtins.S builtins.0))) i))))) =>
         abst_obl2:
         (dk_logic.eP 
            (dk_logic.forall basics.int__t 
               (i:(cc.eT basics.int__t) =>
                dk_logic.imp 
                  (dk_logic.ebP 
                     (basics._amper__amper_ 
                        (basics._tilda__tilda_ 
                           (basics._equal_ basics.int__t i 
                              (dk_int.from_nat builtins.0))) 
                        (basics._tilda__tilda_ 
                           (basics._equal_ basics.int__t i 
                              (dk_int.from_nat (builtins.S builtins.0)))))) 
                  (dk_logic.ebP 
                     (basics._lt_ 
                        (basics._dash_ i 
                           (dk_int.from_nat 
                              (builtins.S (builtins.S builtins.0)))) i))))) =>
         x:(cc.eT basics.int__t) =>
         y:(cc.eT basics.bool__t) =>
         t:(cc.eT basics.int__t) =>
         u:(cc.eT basics.int__t) =>
         dk_builtins.call_by_value basics.int__t basics.int__t 
           (dk_builtins.call_by_value basics.int__t 
              (cc.Arrow basics.int__t basics.int__t) 
              (dk_builtins.call_by_value basics.bool__t 
                 (cc.Arrow basics.int__t 
                    (cc.Arrow basics.int__t basics.int__t)) 
                 (dk_builtins.call_by_value basics.int__t 
                    (cc.Arrow basics.bool__t 
                       (cc.Arrow basics.int__t 
                          (cc.Arrow basics.int__t basics.int__t))) 
                    (Toto__f abst_obl1 abst_obl2) x) y) t) u) abst_obl1 
          abst_obl2 
          (basics._dash_ x (dk_int.from_nat (builtins.S builtins.0))) 
          dk_bool.true 
          (basics._plus_ 
             (dk_int.from_nat 
                (builtins.S (builtins.S (builtins.S (builtins.S builtins.0))))) 
             t) 
          (dk_int.from_nat (builtins.S (builtins.S (builtins.S builtins.0))))) 
       ((abst_obl1:
         (dk_logic.eP 
            (dk_logic.forall basics.int__t 
               (i:(cc.eT basics.int__t) =>
                dk_logic.imp 
                  (dk_logic.ebP 
                     (basics._amper__amper_ 
                        (basics._tilda__tilda_ 
                           (basics._equal_ basics.int__t i 
                              (dk_int.from_nat builtins.0))) 
                        (basics._equal_ basics.int__t i 
                           (dk_int.from_nat (builtins.S builtins.0))))) 
                  (dk_logic.ebP 
                     (basics._lt_ 
                        (basics._dash_ i 
                           (dk_int.from_nat (builtins.S builtins.0))) i))))) =>
         abst_obl2:
         (dk_logic.eP 
            (dk_logic.forall basics.int__t 
               (i:(cc.eT basics.int__t) =>
                dk_logic.imp 
                  (dk_logic.ebP 
                     (basics._amper__amper_ 
                        (basics._tilda__tilda_ 
                           (basics._equal_ basics.int__t i 
                              (dk_int.from_nat builtins.0))) 
                        (basics._tilda__tilda_ 
                           (basics._equal_ basics.int__t i 
                              (dk_int.from_nat (builtins.S builtins.0)))))) 
                  (dk_logic.ebP 
                     (basics._lt_ 
                        (basics._dash_ i 
                           (dk_int.from_nat 
                              (builtins.S (builtins.S builtins.0)))) i))))) =>
         x:(cc.eT basics.int__t) =>
         y:(cc.eT basics.bool__t) =>
         t:(cc.eT basics.int__t) =>
         u:(cc.eT basics.int__t) =>
         dk_builtins.call_by_value basics.int__t basics.int__t 
           (dk_builtins.call_by_value basics.int__t 
              (cc.Arrow basics.int__t basics.int__t) 
              (dk_builtins.call_by_value basics.bool__t 
                 (cc.Arrow basics.int__t 
                    (cc.Arrow basics.int__t basics.int__t)) 
                 (dk_builtins.call_by_value basics.int__t 
                    (cc.Arrow basics.bool__t 
                       (cc.Arrow basics.int__t 
                          (cc.Arrow basics.int__t basics.int__t))) 
                    (Toto__f abst_obl1 abst_obl2) x) y) t) u) abst_obl1 
          abst_obl2 
          (basics._dash_ x 
             (dk_int.from_nat (builtins.S (builtins.S builtins.0)))) 
          (basics._bar__bar_ dk_bool.true y) (basics._plus_ x t) 
          (dk_int.from_nat (builtins.S (builtins.S (builtins.S builtins.0)))))).

