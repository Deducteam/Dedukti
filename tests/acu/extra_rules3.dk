(; OK ;)

T : Type.

defac o [T].

[X] o X X --> X.

(; The following rule is silently added:
     o{X X Y} --> o{X Y}
;)

t : T.
u : T.

(;# assert  o t t == t #;)
(;# assert  o u u == u #;)
(;# assert  o u t == o t u #;)

(;# assert  o (o t u) (o u t) == o u t #;)
(;# assert  o t (o u (o u t)) == o u t #;)
(;# assert  o t (o t (o t t)) == t #;)

(;# assert  o t (o t u) == o u t #;)
(;# assert  o (o t u) t == o u t #;)
(;# assert  o (o u t) t == o u t #;)

(;# assert  (x:T => o (o t x) t) == (x:T => o t x) #;)
(;# assert  (x:T => o (o x t) t) == (x:T => o t x) #;)
(;# assert  (x:T => o t (o t x)) == (x:T => o x t) #;)
(;# assert  (x:T => o t (o x t)) == (x:T => o x t) #;)
