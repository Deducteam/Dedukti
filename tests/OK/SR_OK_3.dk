(; IGNORE ;)

A : Type.
a : A.

def f : A -> A.
def g : A -> A.
[X] f (g X) --> X.

T : A -> Type.
t : a : A -> T a.
k : a : A -> T a -> T (f a).

(;
  f (f (f X)) = g V
     f (f X)  = g U
        f X   = g Z
          X   = g Y
---------------
            X = g Y
            Y = g Z
            Z = g U
            U = g V
;)
def test :
  X : A ->
  T          X    ->
  T    (f (f X))  ->
  T (f (f (f X))) ->
  T       (f X)   ->
  T X.

[X,Y,Z,U,V]
  test X
    (t (g Y))
    (t (g U))
    (t (g V))
    (t (g Z))
  --> t (g (g (g (g V)))).
