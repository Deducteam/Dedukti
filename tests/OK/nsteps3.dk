(; IGNORE ;)

N : Type.
0 : N.
S : N -> N.

def 1 := S 0.
def 2 := S 1.
def 3 := S 2.

def plus : N -> N -> N.
[x]   plus x 0 --> x
[x]   plus 0 x --> x
[x,y] plus (S x) (S y) --> plus x (S (S y)).

def a := plus 2 3.


(;# eval [WHNF,1,CBN] a #;)

(;# eval [WHNF,2,CBN] a #;)

(;# eval [WHNF,3,CBN] a #;)

(;# eval [WHNF,4,CBN] a #;)

(;# eval [SNF,6,CBN] a #;)

(;# eval [1,CBV] a #;)

(;# eval [2,CBV] a #;)

(;# eval [3,CBV] a #;)

(;# eval [4,CBV] a #;)

(;# eval [5,CBV] a #;)

(;# eval [6,CBV] a #;)

(;# eval [7,CBV] a #;)

(;# eval [8,CBV] a #;)

(;# eval [9,CBV] a #;)

