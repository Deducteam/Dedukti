(; OK ;)

N : Type.
0 : N.
S : N -> N.

def 1 := S 0.
def 2 := S 1.
def 3 := S 2.

def plus : N -> N -> N.
[x]   plus x 0 --> x
[x]   plus 0 x --> x
[x,y] plus (S x) (S y) --> plus x (S (S y)).

def a := plus 2 3.


#EVAL[WHNF,1,CBN] a.
#EVAL[0] plus 2 3.

#EVAL[WHNF,2,CBN] a.
#EVAL[0] plus 1 (S (S 2)).

#EVAL[WHNF,3,CBN] a.
#EVAL[0] plus 0 (S (S (S 2))).

#EVAL[WHNF,4,CBN] a.
#EVAL[WHNF,CBN] plus 2 3.

#EVAL[SNF,6,CBN] a.
#EVAL[SNF,CBN]   a.



#EVAL[1,CBV] a.
#EVAL[0] plus 2 3.

#EVAL[2,CBV] a.
#EVAL[0] plus (S 1) 3.

#EVAL[3,CBV] a.
#EVAL[0] plus (S (S 0)) 3.

#EVAL[4,CBV] a.
#EVAL[0] plus (S (S 0)) (S 2).

#EVAL[5,CBV] a.
#EVAL[0] plus (S (S 0)) (S (S 1)).

#EVAL[6,CBV] a.
#EVAL[0] plus (S (S 0)) (S (S (S 0))).

#EVAL[7,CBV] a.
#EVAL[0] plus (S 0) (S (S (S (S 0)))).

#EVAL[8,CBV] a.
#EVAL[0] plus 0 (S (S (S (S (S 0))))).


#EVAL[9,CBV] a.
#EVAL[CBV] a.
