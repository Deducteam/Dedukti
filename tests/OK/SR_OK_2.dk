(; OK --sr-check 2 ;)

A : Type.
a : A.

def f : A -> A.
def g : A -> A.
[X] f (g X) --> X.

T : A -> Type.
t : a : A -> T a.
k : a : A -> T a -> T (f a).

(;
  f (f X) = g U
     f X  = g Z
       X  = g Y
---------------
        X = g Y
        Y = g Z
        Z = g U
;)
def test :
  X : A ->
  T       X   ->
  T    (f X)  ->
  T (f (f X)) ->
  T X.

[X,Y,Z,U]
  test X
    (t (g Y))
    (t (g Z))
    (t (g U))
  --> t (g (g (g U))).


(;
  f (f X) = g U
     f X  = g Z
       X  = g Y
---------------
        X = g Y
        Y = g Z
        Z = g U
;)
def test2 :
  X : A ->
  T       X   ->
  T (f (f X)) ->
  T    (f X)  ->
  T X.

[X,Y,Z,U]
  test2 X
    (t (g Y))
    (t (g U))
    (t (g Z))
  --> t (g (g (g U))).
