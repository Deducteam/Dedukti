N: Type.
Z: N.
S: N->N.

def plus: N->N->N.
[y] plus Z     y --> y
[x,y] plus (S x) y --> S (plus x y).


V:   N->Type.
Nil: V Z.
Con: n:N -> V n -> N -> V (S n).

def hd: n:N -> V (S n) -> N.

[m] hd _ (Con _ _ m) --> m.


def app: n:N -> m:N -> V n -> V m -> V (plus n m).
[y] app _  _ Nil y --> y
[n,m,x,y,k] app _ m (Con n x k) y --> Con (plus n m) (app n m x y) k.
