(; OK --sr-check 1 ;)

A : Type.
a : A.

f : A -> A.
def g : A -> A.
[X] g (g X) --> f X.

T : A -> Type.
t : a : A -> T a.
k : a : A -> T a -> T (f a).

(;
  f Y = g X
    X = g Z
---------------
    Z = Y
;)
def test : X : A -> T X -> T (g X) -> T (g X).
[X,Y,Z]
  test X (t (g Z)) (t (f Y))
  --> k Z (t Y).
