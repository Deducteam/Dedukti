N : Type.
0 : N.

def f : N -> N.
[x] f x --> 0.

#ASSERT (y:N => f y) == (y:N => 0).

def g : (N -> N) -> N.
[h] g (x => h x) --> 0.

#ASSERT ( y:N => g (x => 0  ) ) == (y:N => 0).
#ASSERT ( y:N => g (x => x  ) ) == (y:N => 0).
#ASSERT ( y:N => g (x => y  ) ) == (y:N => 0).
#ASSERT ( y:N => g (x => f y) ) == (y:N => 0).

def gg : (N -> N) -> N.
[h] gg (x : N => h x) --> 0.