type : Type.

injective eta : type -> Type.

prod : A : type -> (eta A -> type) -> type.

lam : A : type -> B : (eta A -> type) -> (x:eta A -> eta (B x)) -> eta (prod A B).

def app : A : type -> B : (eta A -> type) -> eta (prod A B) -> x: eta A -> eta (B x).

[A,f] eta (prod A f) --> x:eta A -> eta (f x).

[A,B,C,D,f,a] app A B (lam C D f) a --> f a.
