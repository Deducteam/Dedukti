#NAME iProver_prf.
input5 : FOL.eps
(FOL.fa_i
 (X0 : FOL.i => FOL.fa_i
  (X1 : FOL.i => FOL.or (iProver_sig.p iProver_sig.a X0)
   (FOL.or (iProver_sig.p X1 iProver_sig.b) (iProver_sig.p X1 X0))))).
def clause5 :
(X0 : FOL.i ->
 (X1 : FOL.i ->
  ((FOL.eps (iProver_sig.p iProver_sig.a X0) -> FOL.eps FOL.bot) ->
   ((FOL.eps (iProver_sig.p X1 iProver_sig.b) -> FOL.eps FOL.bot) ->
    ((FOL.eps (iProver_sig.p X1 X0) -> FOL.eps FOL.bot) -> FOL.eps FOL.bot)))))
:=
(X0 : FOL.i =>
 (X1 : FOL.i =>
  (lit5 : (FOL.eps (iProver_sig.p iProver_sig.a X0) -> FOL.eps FOL.bot) =>
   (lit4 : (FOL.eps (iProver_sig.p X1 iProver_sig.b) -> FOL.eps FOL.bot) =>
    (lit3 : (FOL.eps (iProver_sig.p X1 X0) -> FOL.eps FOL.bot) =>
     (clcz : FOL.o => input5 X0 X1 clcz (clcl => lit5 clcl clcz)
      (clcsb => clcsb clcz (clcl => lit4 clcl clcz) (clcl => lit3 clcl clcz)))))))).
def clause4 :
((FOL.eps (iProver_sig.p iProver_sig.a iProver_sig.b) -> FOL.eps FOL.bot) ->
 FOL.eps FOL.bot) :=
(lit6 :
 (FOL.eps (iProver_sig.p iProver_sig.a iProver_sig.b) -> FOL.eps FOL.bot) =>
 clause5 iProver_sig.b iProver_sig.a lit6 lit6 lit6).
def clause6 :
(X0 : FOL.i ->
 (((FOL.eps iProver_sig.iProver_split_0 -> FOL.eps FOL.bot) -> FOL.eps
   FOL.bot) ->
  (((FOL.eps (iProver_sig.p X0 iProver_sig.b) -> FOL.eps FOL.bot) -> FOL.eps
    FOL.bot) -> FOL.eps FOL.bot))) :=
(X0 : FOL.i =>
 (lit7 :
  ((FOL.eps iProver_sig.iProver_split_0 -> FOL.eps FOL.bot) -> FOL.eps
   FOL.bot) =>
  (lit8 :
   ((FOL.eps (iProver_sig.p X0 iProver_sig.b) -> FOL.eps FOL.bot) -> FOL.eps
    FOL.bot) => lit7 (h : FOL.eps iProver_sig.iProver_split_0 => h X0 lit8)))).
def clause3 :
(((FOL.eps iProver_sig.iProver_split_0 -> FOL.eps FOL.bot) -> FOL.eps
  FOL.bot) -> FOL.eps FOL.bot) :=
(lit7 :
 ((FOL.eps iProver_sig.iProver_split_0 -> FOL.eps FOL.bot) -> FOL.eps
  FOL.bot) => clause4
 (tp : FOL.eps (iProver_sig.p iProver_sig.a iProver_sig.b) => clause6
  iProver_sig.a lit7
  (tn :
   (FOL.eps (iProver_sig.p iProver_sig.a iProver_sig.b) -> FOL.eps FOL.bot)
   => tn tp))).
input8 : FOL.eps
(FOL.fa_i
 (X0 : FOL.i => FOL.fa_i
  (X1 : FOL.i => FOL.or (FOL.not (iProver_sig.p iProver_sig.a X0))
   (FOL.not (iProver_sig.p X1 iProver_sig.b))))).
def clause8 :
(X0 : FOL.i ->
 (X1 : FOL.i ->
  (((FOL.eps (iProver_sig.p iProver_sig.a X0) -> FOL.eps FOL.bot) -> FOL.eps
    FOL.bot) ->
   (((FOL.eps (iProver_sig.p X1 iProver_sig.b) -> FOL.eps FOL.bot) -> FOL.eps
     FOL.bot) -> FOL.eps FOL.bot)))) :=
(X0 : FOL.i =>
 (X1 : FOL.i =>
  (lit10 :
   ((FOL.eps (iProver_sig.p iProver_sig.a X0) -> FOL.eps FOL.bot) -> FOL.eps
    FOL.bot) =>
   (lit9 :
    ((FOL.eps (iProver_sig.p X1 iProver_sig.b) -> FOL.eps FOL.bot) -> FOL.eps
     FOL.bot) =>
    (clcz : FOL.o => input8 X0 X1 clcz (clcl => lit10 clcl clcz)
     (clcl => lit9 clcl clcz)))))).
def clause7 :
((FOL.eps iProver_sig.iProver_split_1 -> FOL.eps FOL.bot) ->
 ((FOL.eps iProver_sig.iProver_split_0 -> FOL.eps FOL.bot) -> FOL.eps
  FOL.bot)) :=
(lit1 : (FOL.eps iProver_sig.iProver_split_1 -> FOL.eps FOL.bot) =>
 (lit2 : (FOL.eps iProver_sig.iProver_split_0 -> FOL.eps FOL.bot) => lit1
  (X0 : FOL.i =>
   (lit10 :
    ((FOL.eps (iProver_sig.p iProver_sig.a X0) -> FOL.eps FOL.bot) -> FOL.eps
     FOL.bot) => lit2
    (X1 : FOL.i =>
     (lit9 :
      ((FOL.eps (iProver_sig.p X1 iProver_sig.b) -> FOL.eps FOL.bot) ->
       FOL.eps FOL.bot) => clause8 X0 X1 lit10 lit9)))))).
def clause2 :
((FOL.eps iProver_sig.iProver_split_1 -> FOL.eps FOL.bot) -> FOL.eps FOL.bot)
:=
(lit1 : (FOL.eps iProver_sig.iProver_split_1 -> FOL.eps FOL.bot) => clause3
 (tnl1 : (FOL.eps iProver_sig.iProver_split_0 -> FOL.eps FOL.bot) => clause7
  lit1 (tl1 : FOL.eps iProver_sig.iProver_split_0 => tnl1 tl1))).
def clause10 :
(X0 : FOL.i ->
 (((FOL.eps iProver_sig.iProver_split_1 -> FOL.eps FOL.bot) -> FOL.eps
   FOL.bot) ->
  (((FOL.eps (iProver_sig.p iProver_sig.a X0) -> FOL.eps FOL.bot) -> FOL.eps
    FOL.bot) -> FOL.eps FOL.bot))) :=
(X0 : FOL.i =>
 (lit11 :
  ((FOL.eps iProver_sig.iProver_split_1 -> FOL.eps FOL.bot) -> FOL.eps
   FOL.bot) =>
  (lit10 :
   ((FOL.eps (iProver_sig.p iProver_sig.a X0) -> FOL.eps FOL.bot) -> FOL.eps
    FOL.bot) => lit11
   (h : FOL.eps iProver_sig.iProver_split_1 => h X0 lit10)))).
def clause9 :
(((FOL.eps iProver_sig.iProver_split_1 -> FOL.eps FOL.bot) -> FOL.eps
  FOL.bot) -> FOL.eps FOL.bot) :=
(lit11 :
 ((FOL.eps iProver_sig.iProver_split_1 -> FOL.eps FOL.bot) -> FOL.eps
  FOL.bot) => clause4
 (tp : FOL.eps (iProver_sig.p iProver_sig.a iProver_sig.b) => clause10
  iProver_sig.b lit11
  (tn :
   (FOL.eps (iProver_sig.p iProver_sig.a iProver_sig.b) -> FOL.eps FOL.bot)
   => tn tp))).
def clause1 : FOL.eps FOL.bot := clause2
(tnl2 : FOL.eps iProver_sig.iProver_split_1 => clause9
 (tl2 : (FOL.eps iProver_sig.iProver_split_1 -> FOL.eps FOL.bot) => tl2 tnl2)).
def empty_clause : FOL.eps FOL.bot :=
clause1.
